var searchIndex = JSON.parse('{\
"ansi_term":{"doc":"This is a library for controlling colours and formatting, …","t":[12,6,5,6,3,3,6,5,6,13,13,13,13,4,4,13,13,13,13,13,13,3,3,13,13,13,13,13,13,3,3,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","ANSIByteString","ANSIByteStrings","ANSIByteStrings","ANSIGenericString","ANSIGenericStrings","ANSIString","ANSIStrings","ANSIStrings","Black","Black","Blue","Blue","Color","Colour","Cyan","Cyan","Fixed","Fixed","Green","Green","Infix","Prefix","Purple","Purple","RGB","RGB","Red","Red","Style","Suffix","White","White","Yellow","Yellow","background","blink","blink","bold","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","dimmed","dimmed","eq","eq","eq","fg","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreground","from","from","from","from","from","from","from","from","from","hidden","hidden","infix","infix","into","into","into","into","into","into","into","is_blink","is_bold","is_dimmed","is_hidden","is_italic","is_plain","is_reverse","is_strikethrough","is_underline","italic","italic","ne","ne","ne","new","normal","on","on","paint","paint","prefix","prefix","reverse","reverse","strikethrough","strikethrough","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline","write_to","write_to","write_to","write_to"],"q":["ansi_termd":["","An <code>ANSIByteString</code> represents a formatted series of bytes. …","A function to construct an <code>ANSIByteStrings</code> instance.","A set of <code>ANSIByteString</code>s collected together, in order to …","An <code>ANSIGenericString</code> includes a generic string type and a …","A set of <code>ANSIGenericString</code>s collected together, in order …","An ANSI String is a string coupled with the <code>Style</code> to …","A function to construct an <code>ANSIStrings</code> instance.","A set of <code>ANSIString</code>s collected together, in order to be …","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).","Colour #0 (foreground code <code>30</code>, background code <code>40</code>).","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).","Colour #4 (foreground code <code>34</code>, background code <code>44</code>).","A colour is one specific type of ANSI escape code, and …","A colour is one specific type of ANSI escape code, and …","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).","Colour #6 (foreground code <code>36</code>, background code <code>46</code>).","A colour number from 0 to 255, for use in 256-colour …","A colour number from 0 to 255, for use in 256-colour …","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).","Colour #2 (foreground code <code>32</code>, background code <code>42</code>).","Like <code>ANSIString</code>, but only displays the difference between …","Like <code>ANSIString</code>, but only displays the style prefix.","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).","Colour #5 (foreground code <code>35</code>, background code <code>45</code>).","A 24-bit RGB color, as specified by ISO-8613-3.","A 24-bit RGB color, as specified by ISO-8613-3.","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).","Colour #1 (foreground code <code>31</code>, background code <code>41</code>).","A style is a collection of properties that can format a …","Like <code>ANSIString</code>, but only displays the style suffix.","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).","Colour #7 (foreground code <code>37</code>, background code <code>47</code>).","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).","Colour #3 (foreground code <code>33</code>, background code <code>43</code>).","The style’s background colour, if it has one.","Returns a <code>Style</code> with the blink property set.","Returns a <code>Style</code> with the blink property set.","Returns a <code>Style</code> with the bold property set.","Returns a <code>Style</code> with the bold property set.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a style with <em>no</em> properties set. Formatting text …","","Returns a <code>Style</code> with the dimmed property set.","Returns a <code>Style</code> with the dimmed property set.","","","","Returns a <code>Style</code> with the foreground colour property set.","","","","","","","","","","","","The style’s foreground colour, if it has one.","","","","","You can turn a <code>Colour</code> into a <code>Style</code> with the foreground …","","","","","Returns a <code>Style</code> with the hidden property set.","Returns a <code>Style</code> with the hidden property set.","The infix between this style and another.","The infix between this colour and another.","","","","","","","","Whether this style is blinking.","Whether this style is bold.","Whether this style is dimmed.","Whether this style is hidden.","Whether this style is italic.","Return true if this <code>Style</code> has no actual styles, and can …","Whether this style has reverse colours.","Whether this style is struckthrough.","Whether this style is underlined.","Returns a <code>Style</code> with the italic property set.","Returns a <code>Style</code> with the italic property set.","","","","Creates a new Style with no differences.","Return a <code>Style</code> with the foreground colour set to this …","Returns a <code>Style</code> with the background colour property set.","Returns a <code>Style</code> with the background colour property set.","Paints the given text with this colour, returning an ANSI …","Paints the given text with this colour, returning an ANSI …","The prefix for this style.","The prefix for this colour.","Returns a <code>Style</code> with the reverse property set.","Returns a <code>Style</code> with the reverse property set.","Returns a <code>Style</code> with the hidden property set.","Returns a <code>Style</code> with the strikethrough property set.","The suffix for this style.","The suffix for this colour.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Style</code> with the underline property set.","Returns a <code>Style</code> with the underline property set.","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …","Write <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …","Write an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …"],"i":[1,0,0,0,0,0,0,0,0,2,2,2,2,0,0,2,2,2,2,2,2,0,0,2,2,2,2,2,2,0,0,2,2,2,2,3,3,2,3,2,1,4,5,6,3,2,7,1,4,5,6,3,2,7,4,5,6,3,2,7,4,5,6,3,2,7,3,7,3,2,3,2,7,3,8,9,4,4,5,5,6,6,3,2,7,3,1,4,5,6,3,3,2,7,7,3,2,3,2,1,4,5,6,3,2,7,3,3,3,3,3,3,3,3,3,3,2,3,2,7,3,2,3,2,3,2,3,2,3,2,3,2,3,2,4,5,6,3,2,7,1,4,5,6,7,1,4,5,6,3,2,7,1,4,5,6,3,2,7,1,4,5,6,3,2,7,3,2,10,1,11,7],"f":[null,null,[[],["ansibytestrings",6]],null,null,null,null,[[],["ansistrings",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["prefix",3]],[[],["infix",3]],[[],["suffix",3]],[[],["style",3]],[[],["colour",4]],[[],["ansigenericstring",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["style",3]],[[]],[[],["style",3]],[[],["style",3]],[[["style",3]],["bool",15]],[[["colour",4]],["bool",15]],[[["ansigenericstring",3]],["bool",15]],[[["colour",4]],["style",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[["colour",4]],["style",3]],[[]],[[]],[[]],[[],["ansigenericstring",3]],[[],["style",3]],[[],["style",3]],[[["style",3]],["infix",3]],[[["colour",4]],["infix",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["bool",15]],null,null,null,[[],["style",3]],[[],["style",3]],[[["style",3]],["bool",15]],[[["colour",4]],["bool",15]],[[["ansigenericstring",3]],["bool",15]],[[],["style",3]],[[],["style",3]],[[["colour",4]],["style",3]],[[["colour",4]],["style",3]],[[],[["toowned",8],["ansigenericstring",3],["sized",8]]],[[],[["toowned",8],["ansigenericstring",3],["sized",8]]],[[],["prefix",3]],[[],["prefix",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[],["suffix",3]],[[],["suffix",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["style",3]],[[],["style",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]]],"p":[[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Style"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"ascii":{"doc":"A library that provides ASCII-only string and character …","t":[13,13,13,13,8,3,8,4,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,13,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,11,11,11,11,11,11,13,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,11,11,11,11,11,11,11,13,13,11,11,11,13,11,11,11,11,10,11,10,11,11,13,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,13,11,11,11,13,13,13],"n":["A","ACK","Ampersand","Apostrophe","AsAsciiStr","AsAsciiStrError","AsMutAsciiStr","AsciiChar","AsciiStr","AsciiString","Asterisk","At","B","BackSlash","BackSpace","Bell","BracketClose","BracketOpen","C","CAN","Caret","CarriageReturn","Chars","CharsMut","CharsRef","Colon","Comma","CurlyBraceClose","CurlyBraceOpen","D","DC1","DC2","DC3","DC4","DEL","DLE","Dollar","Dot","E","EM","ENQ","EOT","ESC","ETB","ETX","Equal","Exclamation","F","FF","FS","FromAsciiError","G","GS","Grave","GreaterThan","H","Hash","I","IntoAsciiString","J","K","L","LessThan","LineFeed","M","Minus","N","NAK","Null","O","P","ParenClose","ParenOpen","Percent","Plus","Q","Question","Quotation","R","RS","S","SI","SO","SOH","SOX","SUB","SYN","Semicolon","Slash","Space","T","Tab","Tilde","ToAsciiChar","ToAsciiCharError","U","US","UnderScore","V","VT","VerticalBar","W","X","Y","Z","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","a","add","add_assign","as_ascii_str","as_ascii_str","as_ascii_str","as_ascii_str_unchecked","as_ascii_str_unchecked","as_byte","as_bytes","as_char","as_mut","as_mut","as_mut","as_mut","as_mut_ascii_str","as_mut_ascii_str","as_mut_ascii_str_unchecked","as_mut_ascii_str_unchecked","as_mut_ptr","as_mut_slice","as_printable_char","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_str","as_str","as_str","ascii_error","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","capacity","caret_decode","caret_encode","cause","chars","chars_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","d","default","default","deref","deref_mut","description","description","description","e","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_ignore_ascii_case","eq_ignore_ascii_case","extend","f","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ascii","from_ascii","from_ascii","from_ascii_unchecked","from_ascii_unchecked","from_ascii_unchecked","from_iter","from_raw_parts","from_str","g","get_ascii","get_ascii","get_ascii","h","hash","hash","hash","i","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","into","into","into","into","into","into","into","into","into","into","into_ascii_string","into_ascii_string","into_ascii_string_unchecked","into_ascii_string_unchecked","into_iter","into_iter","into_iter","into_source","into_str","is_alphabetic","is_alphanumeric","is_ascii_alphabetic","is_ascii_alphanumeric","is_ascii_blank","is_ascii_control","is_ascii_digit","is_ascii_graphic","is_ascii_hexdigit","is_ascii_lowercase","is_ascii_printable","is_ascii_punctuation","is_ascii_uppercase","is_ascii_whitespace","is_digit","is_empty","is_empty","is_lowercase","is_uppercase","is_whitespace","j","k","l","last","len","len","len","len","lines","m","make_ascii_lowercase","make_ascii_lowercase","make_ascii_uppercase","make_ascii_uppercase","n","ne","ne","ne","ne","ne","new","new","next","next","next","next_back","next_back","next_back","o","p","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","push","push_str","q","r","remove","reserve","reserve_exact","s","shrink_to_fit","size_hint","size_hint","size_hint","slice_ascii","slice_ascii","slice_ascii_mut","slice_ascii_mut","split","t","to_ascii_char","to_ascii_char","to_ascii_char_unchecked","to_ascii_char_unchecked","to_ascii_lowercase","to_ascii_lowercase","to_ascii_string","to_ascii_uppercase","to_ascii_uppercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trim","trim_end","trim_start","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","v","valid_up_to","w","with_capacity","write_char","write_str","x","y","z"],"q":["asciid":["<code>\'A\'</code>","Acknowledgement","<code>\'&\'</code>","<code>\'\\\\\'\'</code>","Convert slices of bytes or AsciiChar to <code>AsciiStr</code>.","Error that is returned when a sequence of <code>u8</code> are not all …","Convert mutable slices of bytes or AsciiChar to <code>AsciiStr</code>.","An ASCII character. It wraps a <code>u8</code>, with the highest bit …","AsciiStr represents a byte or string slice that only …","A growable string stored as an ASCII encoded buffer.","<code>\'*\'</code>","<code>\'@\'</code>","<code>\'B\'</code>","<code>\'\\\\\'</code>","Backspace","bell / alarm / audible","<code>\']\'</code>","<code>\'[\'</code>","<code>\'C\'</code>","Cancel","<code>\'_\'</code>","<code>\'\\\\r\'</code>","A copying iterator over the characters of an <code>AsciiStr</code>.","A mutable iterator over the characters of an <code>AsciiStr</code>.","An immutable iterator over the characters of an <code>AsciiStr</code>.","<code>\':\'</code>","<code>\',\'</code>","<code>\'}\'</code>","<code>\'{\'</code>","<code>\'D\'</code>","Device control 1, often XON","Device control 2","Device control 3, Often XOFF","Device control 4","Delete","Data Link Escape","<code>\'$\'</code>","<code>\'.\'</code>","<code>\'E\'</code>","End of Medium","Enquiry","End Of Transmission","Escape","End of Transmission Block","End of TeXt","<code>\'=\'</code>","<code>\'!\'</code>","<code>\'F\'</code>","Form Feed","File Separator","A possible error value when converting an <code>AsciiString</code> …","<code>\'G\'</code>","Group Separator","<code>\'</code>’`","<code>\'>\'</code>","<code>\'H\'</code>","<code>\'#\'</code>","<code>\'I\'</code>","Convert vectors into <code>AsciiString</code>.","<code>\'J\'</code>","<code>\'K\'</code>","<code>\'L\'</code>","<code>\'<\'</code>","<code>\'\\\\n\'</code>","<code>\'M\'</code>","<code>\'-\'</code>","<code>\'N\'</code>","Negative AcKnowledgement","<code>\'\\\\0\'</code>","<code>\'O\'</code>","<code>\'P\'</code>","<code>\')\'</code>","<code>\'(\'</code>","<code>\'%\'</code>","<code>\'+\'</code>","<code>\'Q\'</code>","<code>\'?\'</code>","<code>\'\\\"\'</code>","<code>\'R\'</code>","Record Separator","<code>\'S\'</code>","Shift In","Shift Out","Start Of Heading","Start Of teXt","Substitute","Synchronous idle","<code>\';\'</code>","<code>\'/\'</code>","<code>\' \'</code>","<code>\'T\'</code>","<code>\'\\\\t\'</code>","<code>\'~\'</code>","Convert <code>char</code>, <code>u8</code> and other character types to <code>AsciiChar</code>.","Error returned by <code>ToAsciiChar</code>.","<code>\'U\'</code>","Unit Separator","<code>\'_\'</code>","<code>\'V\'</code>","Vertical tab","<code>\'|\'</code>","<code>\'W\'</code>","<code>\'X\'</code>","<code>\'Y\'</code>","<code>\'Z\'</code>","<code>\'0\'</code>","<code>\'1\'</code>","<code>\'2\'</code>","<code>\'3\'</code>","<code>\'4\'</code>","<code>\'5\'</code>","<code>\'6\'</code>","<code>\'7\'</code>","<code>\'8\'</code>","<code>\'9\'</code>","<code>\'a\'</code>","","","Convert to an ASCII slice.","Convert to an ASCII slice.","","Convert to an ASCII slice without checking for non-ASCII …","","Converts an ASCII character into a <code>u8</code>.","Converts <code>&self</code> into a byte slice.","Converts an ASCII character into a <code>char</code>.","","","","","Convert to a mutable ASCII slice.","Convert to a mutable ASCII slice.","Convert to a mutable ASCII slice without checking for …","","Returns an unsafe mutable pointer to the <code>AsciiStr</code>’s …","Returns the entire string as mutable slice of <code>AsciiChar</code>s.","Unicode has printable versions of the ASCII control …","Returns a raw pointer to the <code>AsciiStr</code>’s buffer.","","","","","","","","","","Returns the entire string as slice of <code>AsciiChar</code>s.","Converts <code>&self</code> to a <code>&str</code> slice.","Returns the ascii string slice with the remaining …","Returns the ascii string slice with the remaining …","Get the position of the first non-ASCII byte or character.","<code>\'b\'</code>","","","","","","","","","","","","","","","","","","","","","<code>\'c\'</code>","Returns the number of bytes that this ASCII string buffer …","Returns the control code represented by a caret notation …","Terminals use caret notation to display some typed …","Always returns an <code>AsAsciiStrError</code>","Returns an iterator over the characters of the <code>AsciiStr</code>.","Returns an iterator over the characters of the <code>AsciiStr</code> …","Truncates the ASCII string, setting length (but not …","","","","","","","","","","","","","","","","","","<code>\'d\'</code>","","","","","","","","<code>\'e\'</code>","","","","","","","","","","","","","","","","Compares two characters case-insensitively.","Compares two strings case-insensitively.","","<code>\'f\'</code>","Returns the first character if the string is not empty.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an ASCII character from a <code>u8</code>, <code>char</code> or other …","Converts anything that can represent a byte slice into an …","Converts anything that can represent a byte buffer into …","Constructs an ASCII character from a <code>u8</code>, <code>char</code> or other …","Converts anything that can be represented as a byte slice …","Converts a vector of bytes to an <code>AsciiString</code> without …","","Creates a new <code>AsciiString</code> from a length, capacity and …","","<code>\'g\'</code>","Get a single ASCII character from the slice.","Get a single ASCII character from the slice.","","<code>\'h\'</code>","","","","<code>\'i\'</code>","","","","","","","","","","","","","","","","","Inserts an ASCII character into the buffer at position <code>idx</code>…","","","","","","","","","","","Convert to <code>AsciiString</code>.","","Convert to <code>AsciiString</code> without checking for non-ASCII …","","","","","Get back the original, unmodified type.","Returns the ascii string slice with the remaining …","Check if the character is a letter (a-z, A-Z)","Check if the character is a letter or number","Check if the character is a letter (a-z, A-Z).","Check if the character is a letter or number","Check if the character is a space or horizontal tab","Check if the character is a control character","Check if the character is a number (0-9)","Checks if the character is printable (except space)","Checks if the character is a valid hex digit","Checks if the character is alphabetic and lowercase (a-z).","Checks if the character is printable (including space)","Checks if the character is punctuation","Checks if the character is alphabetic and uppercase (A-Z).","Check if the character is a ’ ’, ‘\\\\t’, ‘\\\\n’, …","Check if the character is a digit in the given radix.","Returns true if the ASCII slice contains zero bytes.","Returns true if the ASCII string contains zero bytes.","Checks if the character is alphabetic and lowercase (a-z).","Checks if the character is alphabetic and uppercase (A-Z).","Check if the character one of ’ ’, ‘\\\\t’, ‘\\\\n’…","<code>\'j\'</code>","<code>\'k\'</code>","<code>\'l\'</code>","Returns the last character if the string is not empty.","Returns the number of characters / bytes in this ASCII …","","","Returns the number of bytes in this ASCII string.","Returns an iterator over the lines of the <code>AsciiStr</code>, which …","<code>\'m\'</code>","Replaces letters <code>A</code> to <code>Z</code> with <code>a</code> to <code>z</code>","Replaces uppercase letters with their lowercase …","Replaces letters <code>a</code> to <code>z</code> with <code>A</code> to <code>Z</code>","Replaces lowercase letters with their uppercase …","<code>\'n\'</code>","","","","","","Create an <code>AsciiChar</code> from a <code>char</code>, panicking if it’s not …","Creates a new, empty ASCII string buffer without …","","","","","","","<code>\'o\'</code>","<code>\'p\'</code>","","","","","","Removes the last character from the ASCII string buffer …","Adds the given ASCII character to the end of the ASCII …","Pushes the given ASCII string onto this ASCII string …","<code>\'q\'</code>","<code>\'r\'</code>","Removes the ASCII character at position <code>idx</code> from the …","Reserves capacity for at least <code>additional</code> more bytes to …","Reserves the minimum capacity for exactly <code>additional</code> more …","<code>\'s\'</code>","Shrinks the capacity of this ASCII string buffer to match …","","","","Convert a subslice to an ASCII slice.","","Convert a subslice to an ASCII slice.","","Returns an iterator over parts of the <code>AsciiStr</code> separated …","<code>\'t\'</code>","Convert to <code>AsciiChar</code>.","","Convert to <code>AsciiChar</code> without checking that it is an ASCII …","","Maps letters A-Z to a-z and returns any other character …","Returns a copy of this string where letters ‘A’ to ‘…","Copies the content of this <code>AsciiStr</code> into an owned …","Maps letters a-z to A-Z and returns any other character …","Returns a copy of this string where letters ‘a’ to ‘…","","","","","","","","","","","","","","","Returns an ASCII string slice with leading and trailing …","Returns an ASCII string slice with trailing whitespace …","Returns an ASCII string slice with leading whitespace …","Shortens a ASCII string to the specified length.","","","","","","","","","","","","","","","","","","","","","","","","","","<code>\'u\'</code>","<code>\'v\'</code>","Returns the index of the first non-ASCII byte.","<code>\'w\'</code>","Creates a new ASCII string buffer with the given capacity.…","","","<code>\'x\'</code>","<code>\'y\'</code>","<code>\'z\'</code>"],"i":[1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,3,4,3,4,1,4,1,4,4,2,2,5,5,5,4,4,4,1,4,1,4,4,4,4,2,2,2,2,4,4,6,7,8,1,1,9,4,6,10,7,11,2,2,8,1,9,4,6,10,7,11,2,2,8,1,2,0,0,8,4,4,2,1,9,6,7,11,2,8,1,9,6,7,11,2,8,1,4,2,1,1,2,2,2,9,11,8,1,1,1,1,9,4,4,4,4,11,2,2,2,2,2,8,1,4,2,1,4,1,1,9,9,4,4,6,10,7,11,11,2,2,8,8,1,9,6,10,7,11,2,2,2,2,2,8,1,4,2,1,4,2,2,2,2,1,3,3,4,1,1,4,2,1,4,4,4,4,4,4,4,2,4,4,4,4,4,4,4,2,2,1,9,6,10,7,11,2,2,2,8,12,2,12,2,6,10,7,8,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,2,1,1,1,1,1,1,4,4,6,10,2,4,1,1,4,1,4,1,9,4,11,2,8,1,2,6,10,7,6,10,7,1,1,1,1,1,4,2,2,2,2,1,1,2,2,2,1,2,6,10,7,3,4,5,4,4,1,13,1,13,1,1,4,4,1,4,1,9,4,6,7,11,2,8,1,9,4,11,2,8,4,4,4,2,1,9,6,10,7,11,2,8,1,9,6,10,7,11,2,8,1,9,4,6,10,7,11,2,8,1,1,11,1,2,2,2,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asciistr",3]],["asciistring",3]],[[["asciistr",3]]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],["asciistr",3]],[[],["asciistr",3]],[[],["u8",15]],[[]],[[],["char",15]],[[]],[[],["asciistr",3]],[[]],[[],["asciistr",3]],[[],[["asasciistrerror",3],["asciistr",3],["result",4]]],[[],[["asasciistrerror",3],["asciistr",3],["result",4]]],[[],["asciistr",3]],[[],["asciistr",3]],[[]],[[]],[[],["char",15]],[[]],[[],["asciistr",3]],[[]],[[],["str",15]],[[]],[[],["asciistr",3]],[[],["asciistr",3]],[[]],[[]],[[],["str",15]],[[]],[[],["str",15]],[[],["asciistr",3]],[[],["asciistr",3]],[[],["asasciistrerror",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["asciistr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["asciistr",3]],[[]],null,[[],["usize",15]],[[["into",8],["u8",15],["copy",8]],[["asciichar",4],["option",4]]],[[["into",8],["u8",15],["copy",8]],[["asciichar",4],["option",4]]],[[],[["option",4],["error",8]]],[[],["chars",3]],[[],["charsmut",3]],[[]],[[],["asciichar",4]],[[],["toasciicharerror",3]],[[],["chars",3]],[[],["charsref",3]],[[],["asasciistrerror",3]],[[],["asciistring",3]],[[],["fromasciierror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asciichar",4]],["ordering",4]],[[["asciistr",3]],["ordering",4]],[[["asciistring",3]],["ordering",4]],null,[[],["asciichar",4]],[[],["asciistring",3]],[[],["asciistr",3]],[[],["asciistr",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,[[["char",15]],["bool",15]],[[["u8",15]],["bool",15]],[[["asciichar",4]],["bool",15]],[[["toasciicharerror",3]],["bool",15]],[[["asciistr",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["asasciistrerror",3]],["bool",15]],[[["asciistring",3]],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[],["bool",15]],[[["asciistr",3]],["bool",15]],[[["fromasciierror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["intoiterator",8]]],null,[[],[["asciichar",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["asciistring",3]],[[]],[[["cow",4],["asciistr",3]],["asciistring",3]],[[["asciichar",4],["vec",3]]],[[["asciistr",3]]],[[]],[[["toasciichar",8]],[["result",4],["toasciicharerror",3]]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],[["result",4],["asciistring",3],["fromasciierror",3]]],[[["u8",15]]],[[],["asciistr",3]],[[]],[[["intoiterator",8]],["asciistring",3]],[[["usize",15]]],[[["str",15]],[["result",4],["asciistring",3],["asasciistrerror",3]]],null,[[["usize",15]],[["asciichar",4],["option",4]]],[[["usize",15]],[["asciichar",4],["option",4]]],[[["usize",15]],[["asciichar",4],["option",4]]],null,[[]],[[]],[[]],null,[[["usize",15],["rangeinclusive",3]],["asciistr",3]],[[["usize",15],["range",3]],["asciistr",3]],[[["usize",15]],["asciichar",4]],[[["rangetoinclusive",3],["usize",15]],["asciistr",3]],[[["rangefull",3]],["asciistr",3]],[[["rangefrom",3],["usize",15]],["asciistr",3]],[[["usize",15],["rangeto",3]],["asciistr",3]],[[]],[[["usize",15],["rangeto",3]],["asciistr",3]],[[["rangefrom",3],["usize",15]],["asciistr",3]],[[["rangetoinclusive",3],["usize",15]],["asciistr",3]],[[["rangefull",3]],["asciistr",3]],[[["usize",15]],["asciichar",4]],[[["usize",15],["rangeinclusive",3]],["asciistr",3]],[[["usize",15],["range",3]],["asciistr",3]],[[]],[[["asciichar",4],["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],[["vec",3],["u8",15]]],[[]],[[],[["asciistring",3],["fromasciierror",3],["result",4]]],[[],[["asciistring",3],["fromasciierror",3],["result",4]]],[[],["asciistring",3]],[[],["asciistring",3]],[[]],[[]],[[]],[[]],[[],["asciistr",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u32",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[],[["asciichar",4],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],null,[[]],[[]],[[]],[[]],null,[[["toasciicharerror",3]],["bool",15]],[[["asciistr",3]],["bool",15]],[[["asasciistrerror",3]],["bool",15]],[[["asciistring",3]],["bool",15]],[[["fromasciierror",3]],["bool",15]],[[["char",15]],["asciichar",4]],[[]],[[],[["asciichar",4],["option",4]]],[[],[["option",4],["asciichar",4]]],[[],[["asciichar",4],["option",4]]],[[],[["asciichar",4],["option",4]]],[[],[["option",4],["asciichar",4]]],[[],[["asciichar",4],["option",4]]],null,null,[[["char",15]],[["ordering",4],["option",4]]],[[["u8",15]],[["ordering",4],["option",4]]],[[["asciichar",4]],[["option",4],["ordering",4]]],[[["asciistr",3]],[["option",4],["ordering",4]]],[[["asciistring",3]],[["option",4],["ordering",4]]],[[],[["asciichar",4],["option",4]]],[[["asciichar",4]]],[[["asciistr",3]]],null,null,[[["usize",15]],["asciichar",4]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],[["result",4],["asasciistrerror",3],["asciistr",3]]],[[],[["asasciistrerror",3],["asciistr",3],["result",4]]],[[],[["asasciistrerror",3],["asciistr",3],["result",4]]],[[["asciichar",4]]],null,[[],[["asciichar",4],["result",4],["toasciicharerror",3]]],[[],[["asciichar",4],["result",4],["toasciicharerror",3]]],[[],["asciichar",4]],[[],["asciichar",4]],[[]],[[],["asciistring",3]],[[],["asciistring",3]],[[]],[[],["asciistring",3]],[[]],[[]],[[],["asciistring",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["usize",15]],null,[[["usize",15]]],[[["char",15]],["result",6]],[[["str",15]],["result",6]],null,null,null],"p":[[4,"AsciiChar"],[3,"AsciiString"],[8,"AsAsciiStr"],[3,"AsciiStr"],[8,"AsMutAsciiStr"],[3,"Chars"],[3,"CharsRef"],[3,"FromAsciiError"],[3,"ToAsciiCharError"],[3,"CharsMut"],[3,"AsAsciiStrError"],[8,"IntoAsciiString"],[8,"ToAsciiChar"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","t":[13,13,13,4,11,11,11,11,11,11,11,5,5,11,11,11,11],"n":["Stderr","Stdin","Stdout","Stream","borrow","borrow_mut","clone","clone_into","fmt","from","into","is","isnt","to_owned","try_from","try_into","type_id"],"q":["atty","","","","","","","","","","","","","","","",""],"d":["","","","possible stream sources","","","","","","","","returns true if this is a tty","returns true if this is <em>not</em> a tty","","","",""],"i":[1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1],"f":[null,null,null,null,[[]],[[]],[[],["stream",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["stream",4]],["bool",15]],[[["stream",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"Stream"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[1,0,0,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["rangebounds",8],["usize",15]]],[[["rangebounds",8],["usize",15]]],[[["usize",15],["bool",15]]],[[["usize",15],["bool",15]]],[[["rangebounds",8],["usize",15]]],[[["rangebounds",8],["usize",15]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","","","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","","","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,3,1,2,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bigendian",4]],[["option",4],["ordering",4]]],[[["littleendian",4]],[["option",4],["ordering",4]]],[[],["f32",15]],[[]],[[]],[[],["f64",15]],[[]],[[]],[[],["i128",15]],[[]],[[],["i16",15]],[[]],[[],["i32",15]],[[],["i32",15]],[[]],[[],["i64",15]],[[],["i64",15]],[[]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[]],[[]],[[]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["usize",15]],["u128",15]],[[["usize",15]],["u128",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["f32",15]]],[[]],[[["f64",15]]],[[]],[[["i128",15]]],[[]],[[["i16",15]]],[[]],[[["i32",15]]],[[["i32",15]]],[[]],[[["i64",15]]],[[["i64",15]]],[[]],[[]],[[["i64",15],["usize",15]]],[[["usize",15],["i128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[]],[[]],[[]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["u128",15],["usize",15]]],[[["u128",15],["usize",15]]],[[["u128",15],["usize",15]]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[8,"ByteOrder"]]},\
"bytes":{"doc":"Provides abstractions for working with bytes.","t":[8,8,3,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,3,3,3,3,3,3,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Buf","BufMut","Bytes","BytesMut","advance","advance","advance","advance_mut","advance_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf","capacity","chunk","chunk","chunk","chunk_mut","chunk_mut","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","copy_from_slice","copy_to_bytes","copy_to_bytes","default","default","deref","deref","deref_mut","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_static","hash","hash","into","into","into_iter","into_iter","is_empty","is_empty","len","len","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","put","put_slice","remaining","remaining","remaining","remaining_mut","remaining_mut","reserve","resize","set_len","slice","slice_ref","split","split_off","split_off","split_to","split_to","to_owned","to_owned","truncate","truncate","try_from","try_from","try_into","try_into","type_id","type_id","unsplit","with_capacity","write_fmt","write_str","Buf","BufMut","Chain","IntoIter","Limit","Reader","Take","UninitSlice","Writer","advance","advance","advance","advance_mut","advance_mut","advance_mut","as_mut_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","chain","chain_mut","chain_mut","chain_mut","chunk","chunk","chunk","chunk_mut","chunk_mut","chunk_mut","chunks_vectored","chunks_vectored","chunks_vectored","chunks_vectored","consume","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_slice","copy_to_slice","copy_to_slice","fill_buf","first_mut","first_ref","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw_parts_mut","get_f32","get_f32","get_f32","get_f32_le","get_f32_le","get_f32_le","get_f64","get_f64","get_f64","get_f64_le","get_f64_le","get_f64_le","get_i128","get_i128","get_i128","get_i128_le","get_i128_le","get_i128_le","get_i16","get_i16","get_i16","get_i16_le","get_i16_le","get_i16_le","get_i32","get_i32","get_i32","get_i32_le","get_i32_le","get_i32_le","get_i64","get_i64","get_i64","get_i64_le","get_i64_le","get_i64_le","get_i8","get_i8","get_i8","get_int","get_int","get_int","get_int_le","get_int_le","get_int_le","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_u128","get_u128","get_u128","get_u128_le","get_u128_le","get_u128_le","get_u16","get_u16","get_u16","get_u16_le","get_u16_le","get_u16_le","get_u32","get_u32","get_u32","get_u32_le","get_u32_le","get_u32_le","get_u64","get_u64","get_u64","get_u64_le","get_u64_le","get_u64_le","get_u8","get_u8","get_u8","get_uint","get_uint","get_uint","get_uint_le","get_uint_le","get_uint_le","has_remaining","has_remaining","has_remaining","has_remaining_mut","has_remaining_mut","has_remaining_mut","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","last_mut","last_ref","len","limit","limit","limit","limit","limit","next","put","put","put","put_f32","put_f32","put_f32","put_f32_le","put_f32_le","put_f32_le","put_f64","put_f64","put_f64","put_f64_le","put_f64_le","put_f64_le","put_i128","put_i128","put_i128","put_i128_le","put_i128_le","put_i128_le","put_i16","put_i16","put_i16","put_i16_le","put_i16_le","put_i16_le","put_i32","put_i32","put_i32","put_i32_le","put_i32_le","put_i32_le","put_i64","put_i64","put_i64","put_i64_le","put_i64_le","put_i64_le","put_i8","put_i8","put_i8","put_int","put_int","put_int","put_int_le","put_int_le","put_int_le","put_slice","put_slice","put_slice","put_u128","put_u128","put_u128","put_u128_le","put_u128_le","put_u128_le","put_u16","put_u16","put_u16","put_u16_le","put_u16_le","put_u16_le","put_u32","put_u32","put_u32","put_u32_le","put_u32_le","put_u32_le","put_u64","put_u64","put_u64","put_u64_le","put_u64_le","put_u64_le","put_u8","put_u8","put_u8","put_uint","put_uint","put_uint","put_uint_le","put_uint_le","put_uint_le","read","reader","reader","reader","remaining","remaining","remaining","remaining_mut","remaining_mut","remaining_mut","set_limit","set_limit","size_hint","take","take","take","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_byte","writer","writer","writer"],"q":["bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytes::bufd":["Read bytes from a buffer.","A trait for values that provide sequential write access …","A cheaply cloneable and sliceable chunk of contiguous …","A unique reference to a contiguous slice of memory.","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","","","","","","","","","","Utilities for working with buffers.","Returns the number of bytes the <code>BytesMut</code> can hold without …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","Clears the buffer, removing all data.","Clears the buffer, removing all data.","","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","","","","","","","","","","","","","","","","","","","","","","","","","Appends given bytes to this <code>BytesMut</code>.","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","","","","","","","","","","","","","Creates a new <code>Bytes</code> from a static slice.","","","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","Creates a new empty <code>Bytes</code>.","Creates a new <code>BytesMut</code> with default capacity.","","","","","","","","","","","","","","","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","Reserves capacity for at least <code>additional</code> more bytes to …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Sets the length of the buffer.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","Removes the bytes from the current view, returning them …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Creates a new <code>BytesMut</code> with the specified capacity.","","","Read bytes from a buffer.","A trait for values that provide sequential write access …","A <code>Chain</code> sequences two buffers.","Iterator over the bytes contained by the buffer.","A <code>BufMut</code> adapter which limits the amount of bytes that …","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …","A <code>Buf</code> adapter which limits the bytes read from an …","Uninitialized byte slice.","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","Return a raw pointer to the slice’s buffer.","","","","","","","","","","","","","","","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","","Fills <code>dst</code> with potentially multiple slices starting at …","Fills <code>dst</code> with potentially multiple slices starting at …","Fills <code>dst</code> with potentially multiple slices starting at …","","","Copies bytes  from <code>src</code> into <code>self</code>.","Consumes <code>len</code> bytes inside self and returns new instance …","Consumes <code>len</code> bytes inside self and returns new instance …","Consumes <code>len</code> bytes inside self and returns new instance …","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","","Gets a mutable reference to the first underlying <code>Buf</code>.","Gets a reference to the first underlying <code>Buf</code>.","","","","","","","","","","","","","","","Create a <code>&mut UninitSlice</code> from a pointer and a length.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets a signed 128 bit integer from <code>self</code> in big-endian …","Gets a signed 128 bit integer from <code>self</code> in big-endian …","Gets a signed 128 bit integer from <code>self</code> in big-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in …","Gets an unsigned 64 bit integer from <code>self</code> in …","Gets an unsigned 64 bit integer from <code>self</code> in …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in …","Gets an unsigned n-byte integer from <code>self</code> in …","Gets an unsigned n-byte integer from <code>self</code> in …","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","","","","","","","","","","","","","","","","","","","Consumes this <code>Chain</code>, returning the underlying values.","Consumes this <code>IntoIter</code>, returning the underlying value.","Consumes this <code>Limit</code>, returning the underlying value.","Consumes this <code>Reader</code>, returning the underlying value.","Consumes this <code>Take</code>, returning the underlying value.","Consumes this <code>Writer</code>, returning the underlying value.","","","Gets a mutable reference to the last underlying <code>Buf</code>.","Gets a reference to the last underlying <code>Buf</code>.","Returns the number of bytes in the slice.","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Returns the maximum number of bytes that can be written","Returns the maximum number of bytes that can be read.","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in big-endian byte …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Writes a signed n-byte integer to <code>self</code> in little-endian …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in …","Writes an unsigned 32 bit integer to <code>self</code> in …","Writes an unsigned 32 bit integer to <code>self</code> in …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in …","Writes an unsigned 64 bit integer to <code>self</code> in …","Writes an unsigned 64 bit integer to <code>self</code> in …","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","","Creates an adaptor which implements the <code>Read</code> trait for …","Creates an adaptor which implements the <code>Read</code> trait for …","Creates an adaptor which implements the <code>Read</code> trait for …","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","","Sets the maximum number of bytes that can be written.","Sets the maximum number of bytes that can be read.","","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","","Write a single byte at the specified offset.","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …"],"i":[0,0,0,0,1,2,3,4,3,3,2,3,2,2,3,3,2,3,3,0,3,1,2,3,4,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,3,3,2,3,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,2,3,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2,2,2,2,2,2,3,3,3,3,3,3,3,3,1,2,3,4,3,3,3,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,3,3,3,3,0,0,0,0,0,0,0,0,0,1,5,6,4,5,7,8,8,5,9,7,10,6,11,8,5,9,7,10,6,11,1,1,1,4,4,4,1,5,6,4,5,7,1,1,1,5,10,8,1,1,1,1,1,1,10,5,5,11,8,5,9,7,10,6,11,5,9,7,10,6,11,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,7,10,6,11,9,7,10,6,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,8,8,8,8,8,8,8,8,8,8,8,8,5,9,7,10,6,11,5,9,7,10,6,11,5,9,5,5,8,4,4,4,7,6,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,1,1,1,1,5,6,4,5,7,7,6,9,1,1,1,5,9,7,10,6,11,5,9,7,10,6,11,8,5,9,7,10,6,11,11,8,4,4,4],"f":[null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[]],[[]],[[]],[[],["uninitslice",3]],[[],["uninitslice",3]],[[]],[[]],[[],["bytes",3]],[[],["bytesmut",3]],[[]],[[]],[[["bytes",3]],["ordering",4]],[[["bytesmut",3]],["ordering",4]],[[]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytes",3]],[[],["bytes",3]],[[],["bytesmut",3]],[[]],[[]],[[]],[[]],[[]],[[["bytesmut",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["vec",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[],["bool",15]],[[["string",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[],["bool",15]],[[["string",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["bytesmut",3]],["bool",15]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bytes",3]],[[["u8",15],["vec",3]],["bytes",3]],[[["bytesmut",3]],["bytes",3]],[[["string",3]],["bytes",3]],[[["str",15]],["bytes",3]],[[]],[[],["bytes",3]],[[["str",15]],["bytesmut",3]],[[],["bytesmut",3]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["bytes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["bytes",3]],[[],["bytesmut",3]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[["bytes",3]],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["vec",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[["string",3]],[["option",4],["ordering",4]]],[[["bytesmut",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],[[["vec",3]],[["option",4],["ordering",4]]],[[["buf",8]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15],["u8",15]]],[[["usize",15]]],[[],["bytes",3]],[[],["bytes",3]],[[],["bytesmut",3]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytesmut",3]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytesmut",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["bytesmut",3]]],[[["usize",15]],["bytesmut",3]],[[["arguments",3]],["result",6]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buf",8]],[["buf",8],["chain",3]]],[[["buf",8]],[["buf",8],["chain",3]]],[[["buf",8]],[["buf",8],["chain",3]]],[[["bufmut",8]],[["chain",3],["bufmut",8]]],[[["bufmut",8]],[["chain",3],["bufmut",8]]],[[["bufmut",8]],[["chain",3],["bufmut",8]]],[[]],[[]],[[]],[[],["uninitslice",3]],[[],["uninitslice",3]],[[],["uninitslice",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytes",3]],[[["usize",15]],["bytes",3]],[[]],[[]],[[]],[[],["result",6]],[[]],[[]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["uninitslice",3]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[],["i128",15]],[[],["i128",15]],[[],["i128",15]],[[],["i128",15]],[[],["i128",15]],[[],["i128",15]],[[],["i16",15]],[[],["i16",15]],[[],["i16",15]],[[],["i16",15]],[[],["i16",15]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i8",15]],[[],["i8",15]],[[],["i8",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15],["rangeinclusive",3]],["uninitslice",3]],[[["usize",15],["range",3]],["uninitslice",3]],[[["rangefrom",3],["usize",15]],["uninitslice",3]],[[["rangefull",3]],["uninitslice",3]],[[["usize",15],["rangeto",3]],["uninitslice",3]],[[["rangetoinclusive",3],["usize",15]],["uninitslice",3]],[[["usize",15],["range",3]],["uninitslice",3]],[[["rangefrom",3],["usize",15]],["uninitslice",3]],[[["rangefull",3]],["uninitslice",3]],[[["usize",15],["rangeinclusive",3]],["uninitslice",3]],[[["usize",15],["rangeto",3]],["uninitslice",3]],[[["rangetoinclusive",3],["usize",15]],["uninitslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]],["limit",3]],[[["usize",15]],["limit",3]],[[["usize",15]],["limit",3]],[[],["usize",15]],[[],["usize",15]],[[],[["u8",15],["option",4]]],[[["buf",8]]],[[["buf",8]]],[[["buf",8]]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["f32",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["i128",15]]],[[["i128",15]]],[[["i128",15]]],[[["i128",15]]],[[["i128",15]]],[[["i128",15]]],[[["i16",15]]],[[["i16",15]]],[[["i16",15]]],[[["i16",15]]],[[["i16",15]]],[[["i16",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i8",15]]],[[["i8",15]]],[[["i8",15]]],[[["i64",15],["usize",15]]],[[["i64",15],["usize",15]]],[[["i64",15],["usize",15]]],[[["i64",15],["usize",15]]],[[["i64",15],["usize",15]]],[[["i64",15],["usize",15]]],[[]],[[]],[[]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[],[["usize",15],["result",6]]],[[],["reader",3]],[[],["reader",3]],[[],["reader",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]],["take",3]],[[["usize",15]],["take",3]],[[["usize",15]],["take",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6]]],[[["usize",15],["u8",15]]],[[],["writer",3]],[[],["writer",3]],[[],["writer",3]]],"p":[[8,"Buf"],[3,"Bytes"],[3,"BytesMut"],[8,"BufMut"],[3,"Chain"],[3,"Take"],[3,"Limit"],[3,"UninitSlice"],[3,"IntoIter"],[3,"Reader"],[3,"Writer"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"chrono":{"doc":"Chrono: Date and Time for Rust","t":[13,13,13,3,3,8,13,3,13,13,8,16,13,13,13,13,13,17,17,17,17,13,13,13,13,13,4,13,13,13,3,3,4,13,4,13,13,8,13,13,8,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,0,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,11,10,11,10,11,10,11,11,10,11,11,10,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,11,13,3,13,4,13,13,13,13,13,3,3,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,3,6,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,8,16,13,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["April","August","AutoSi","Date","DateTime","Datelike","December","Duration","DurationExceedsLimit","DurationExceedsTimestamp","DurationRound","Err","February","Fri","January","July","June","MAX_DATE","MAX_DATETIME","MIN_DATE","MIN_DATETIME","March","May","Micros","Millis","Mon","Month","Nanos","November","October","ParseMonthError","ParseWeekdayError","RoundingError","Sat","SecondsFormat","Secs","September","SubsecRound","Sun","Thu","Timelike","TimestampExceedsLimit","Tue","Wed","Weekday","abs","add","add","add","add","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add_signed","checked_add_signed","checked_sub","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","date","day","day","day","day0","day0","day0","days","description","div","duration_round","duration_round","duration_trunc","duration_trunc","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_with_items","format_with_items","from","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_i64","from_std","from_str","from_str","from_str","from_str","from_u32","from_u64","from_u64","from_utc","from_utc","hash","hash","hash","hash","hour","hour","hour12","hours","into","into","into","into","into","into","into","into","into","is_zero","iso_week","iso_week","iso_week","max_value","microseconds","milliseconds","min_value","minute","minute","minutes","month","month","month","month0","month0","month0","mul","naive","naive_local","naive_local","naive_utc","naive_utc","name","nanosecond","nanosecond","nanoseconds","ne","ne","ne","neg","num_days","num_days_from_ce","num_days_from_monday","num_days_from_sunday","num_hours","num_microseconds","num_milliseconds","num_minutes","num_nanoseconds","num_seconds","num_seconds_from_midnight","num_weeks","number_from_monday","number_from_month","number_from_sunday","offset","offset","offset","ordinal","ordinal","ordinal","ordinal0","ordinal0","ordinal0","parse_from_rfc2822","parse_from_rfc3339","parse_from_str","partial_cmp","partial_cmp","partial_cmp","pred","pred","pred","pred_opt","prelude","round_subsecs","second","second","seconds","signed_duration_since","signed_duration_since","sub","sub","sub","sub","sub","sub","succ","succ","succ","succ_opt","time","timestamp","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","timezone","timezone","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rfc2822","to_rfc3339","to_rfc3339_opts","to_std","to_string","to_string","to_string","to_string","to_string","trunc_subsecs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weekday","weekday","weeks","with_day","with_day","with_day","with_day0","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month","with_month0","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_ordinal0","with_second","with_second","with_timezone","with_timezone","with_year","with_year","with_year","year","year","year","year_ce","zero","Day","DelayedFormat","Error","Fixed","Fixed","Hour","Hour12","Internal","Internal","InternalFixed","InternalNumeric","IsoWeek","IsoYear","IsoYearDiv100","IsoYearMod100","Item","Literal","LongMonthName","LongWeekdayName","LowerAmPm","Minute","Month","Nanosecond","Nanosecond","Nanosecond3","Nanosecond6","Nanosecond9","None","NumDaysFromSun","Numeric","Numeric","Ordinal","OwnedLiteral","OwnedSpace","Pad","ParseError","ParseResult","Parsed","RFC2822","RFC3339","Second","ShortMonthName","ShortWeekdayName","Space","Space","Timestamp","TimezoneName","TimezoneOffset","TimezoneOffsetColon","TimezoneOffsetColonZ","TimezoneOffsetZ","UpperAmPm","WeekFromMon","WeekFromSun","WeekdayFromMon","Year","YearDiv100","YearMod100","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","day","default","description","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_item","from","from","from","from","from","from","from","from","from","hour_div_12","hour_mod_12","into","into","into","into","into","into","into","into","into","isoweek","isoyear","isoyear_div_100","isoyear_mod_100","minute","month","nanosecond","ne","ne","ne","ne","ne","ne","new","new","new_with_offset","offset","ordinal","parse","second","set_ampm","set_day","set_hour","set_hour12","set_isoweek","set_isoyear","set_isoyear_div_100","set_isoyear_mod_100","set_minute","set_month","set_nanosecond","set_offset","set_ordinal","set_second","set_timestamp","set_week_from_mon","set_week_from_sun","set_weekday","set_year","set_year_div_100","set_year_mod_100","strftime","timestamp","to_datetime","to_datetime_with_timezone","to_fixed_offset","to_naive_date","to_naive_datetime_with_offset","to_naive_time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","week_from_mon","week_from_sun","weekday","year","year_div_100","year_mod_100","StrftimeItems","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","new","next","to_owned","try_from","try_into","type_id","IsoWeek","MAX_DATE","MAX_DATETIME","MIN_DATE","MIN_DATETIME","NaiveDate","NaiveDateTime","NaiveTime","add","add","add","add","add","add_assign","add_assign","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add_signed","checked_add_signed","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","date","day","day","day0","day0","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_with_items","format_with_items","format_with_items","from","from","from","from","from_hms","from_hms_micro","from_hms_micro_opt","from_hms_milli","from_hms_milli_opt","from_hms_nano","from_hms_nano_opt","from_hms_opt","from_isoywd","from_isoywd_opt","from_num_days_from_ce","from_num_days_from_ce_opt","from_num_seconds_from_midnight","from_num_seconds_from_midnight_opt","from_str","from_str","from_str","from_timestamp","from_timestamp_opt","from_weekday_of_month","from_weekday_of_month_opt","from_ymd","from_ymd_opt","from_yo","from_yo_opt","hash","hash","hash","hour","hour","into","into","into","into","iso_week","iso_week","iter_days","iter_weeks","minute","minute","month","month","month0","month0","nanosecond","nanosecond","ne","ne","ne","ne","new","num_seconds_from_midnight","ordinal","ordinal","ordinal0","ordinal0","overflowing_add_signed","overflowing_sub_signed","parse_from_str","parse_from_str","parse_from_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pred","pred_opt","second","second","signed_duration_since","signed_duration_since","signed_duration_since","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","succ","succ_opt","time","timestamp","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","week","week0","weekday","weekday","with_day","with_day","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_second","with_second","with_year","with_year","year","year","year","Ambiguous","FixedOffset","LocalResult","None","Offset","Offset","Single","TimeZone","Utc","and_hms_micro_opt","and_hms_milli_opt","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","datetime_from_str","earliest","east","east_opt","eq","eq","eq","fix","fix","fix","fmt","fmt","fmt","fmt","fmt","from","from","from","from_local_date","from_local_datetime","from_offset","from_offset","from_offset","from_utc_date","from_utc_datetime","hash","hash","into","into","into","isoywd","isoywd_opt","latest","local_minus_utc","map","ne","ne","offset_from_local_date","offset_from_local_date","offset_from_local_date","offset_from_local_datetime","offset_from_local_datetime","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_date","offset_from_utc_date","offset_from_utc_datetime","offset_from_utc_datetime","offset_from_utc_datetime","single","timestamp","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_opt","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","utc_minus_local","west","west_opt","ymd","ymd_opt","yo","yo_opt"],"q":["chronochrono::formatchrono::format::strftime","","","","","","","","","","","","","","","chrono::naivechrono::offset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["April","August","Automatically select one of <code>Secs</code>, <code>Millis</code>, <code>Micros</code>, or <code>Nanos</code>…","ISO 8601 calendar date with time zone.","ISO 8601 combined date and time with time zone.","The common set of methods for date component.","December","ISO 8601 time duration with nanosecond precision. This …","Error when <code>Duration.num_nanoseconds</code> exceeds the limit.","Error when the Duration exceeds the Duration from or …","Extension trait for rounding or truncating a DateTime by …","Error that can occur in rounding or truncating","February","Friday.","January","July","June","The maximum possible <code>Date</code>.","The maximum possible <code>DateTime<Utc></code>.","The minimum possible <code>Date</code>.","The minimum possible <code>DateTime<Utc></code>.","March","May","Use fixed 6 subsecond digits. This corresponds to …","Use fixed 3 subsecond digits. This corresponds to …","Monday.","The month of the year.","Use fixed 9 subsecond digits. This corresponds to …","November","October","An error resulting from reading <code><Month></code> value with <code>FromStr</code>…","An error resulting from reading <code>Weekday</code> value with <code>FromStr</code>…","An error from rounding by <code>Duration</code>","Saturday.","Specific formatting options for seconds. This may be …","Format whole seconds only, with no decimal point nor …","September","Extension trait for subsecond rounding or truncation to a …","Sunday.","Thursday.","The common set of methods for time component.","Error when <code>DateTime.timestamp_nanos</code> exceeds the limit.","Tuesday.","Wednesday.","The day of week.","Returns the duration as an absolute (non-negative) value.","","","","","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","","","","","","","","","","Add two durations, returning <code>None</code> if overflow occurred.","Adds given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtract two durations, returning <code>None</code> if overflow …","Subtracts given <code>Duration</code> from the current date.","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","","","","","","","","","","","","","","Retrieves a date component.","Returns the day of month starting from 1.","","","Returns the day of month starting from 0.","","","Makes a new <code>Duration</code> with given number of days. …","","","Return a copy rounded by Duration.","","Return a copy truncated by Duration.","","","","","","","","","","","","","","","","","","","","","","","","","Formatting (and parsing) utilities for date and time.","Formats the date with the specified format string. See …","Formats the combined date and time with the specified …","Formats the date with the specified formatting items.","Formats the combined date and time with the specified …","","","","Convert this <code>DateTime<Utc></code> instance into a …","Convert this <code>DateTime<FixedOffset></code> instance into a …","","","","","","","","","","Creates a <code>time::Duration</code> object from <code>std::time::Duration</code>","","","","","","","Returns an Option from a i64, assuming a 1-index, January …","Makes a new <code>Date</code> with given <em>UTC</em> date and offset. The …","Makes a new <code>DateTime</code> with given <em>UTC</em> datetime and offset. …","","","","","Returns the hour number from 0 to 23.","","Returns the hour number from 1 to 12 with a boolean flag, …","Makes a new <code>Duration</code> with given number of hours. …","","","","","","","","","","Returns <code>true</code> if the duration equals <code>Duration::zero()</code>.","Returns the ISO week.","","","The maximum possible <code>Duration</code>: <code>i64::MAX</code> milliseconds.","Makes a new <code>Duration</code> with given number of microseconds.","Makes a new <code>Duration</code> with given number of milliseconds.","The minimum possible <code>Duration</code>: <code>i64::MIN</code> milliseconds.","Returns the minute number from 0 to 59.","","Makes a new <code>Duration</code> with given number of minutes. …","Returns the month number starting from 1.","","","Returns the month number starting from 0.","","","","Date and time types unconcerned with timezones.","Returns a view to the naive local date.","Returns a view to the naive local datetime.","Returns a view to the naive UTC date.","Returns a view to the naive UTC datetime.","Get the name of the month","Returns the number of nanoseconds since the whole …","","Makes a new <code>Duration</code> with given number of nanoseconds.","","","","","Returns the total number of whole days in the duration.","Counts the days in the proleptic Gregorian calendar, with …","Returns a day-of-week number starting from Monday = 0.","Returns a day-of-week number starting from Sunday = 0.","Returns the total number of whole hours in the duration.","Returns the total number of whole microseconds in the …","Returns the total number of whole milliseconds in the …","Returns the total number of whole minutes in the duration.","Returns the total number of whole nanoseconds in the …","Returns the total number of whole seconds in the duration.","Returns the number of non-leap seconds past the last …","Returns the total number of whole weeks in the duration.","Returns a day-of-week number starting from Monday = 1. …","Returns a month-of-year number starting from January = 1.","Returns a day-of-week number starting from Sunday = 1.","The time zone, which calculates offsets from the local …","Retrieves an associated offset from UTC.","Retrieves an associated offset from UTC.","Returns the day of year starting from 1.","","","Returns the day of year starting from 0.","","","Parses an RFC 2822 date and time string such as …","Parses an RFC 3339 and ISO 8601 date and time string such …","Parses a string with the specified format string and …","","","Compare two DateTimes based on their true time, ignoring …","Makes a new <code>Date</code> for the prior date.","The previous day in the week.","The previous month.","Makes a new <code>Date</code> for the prior date.","A convenience module appropriate for glob imports (…","Return a copy rounded to the specified number of …","Returns the second number from 0 to 59.","","Makes a new <code>Duration</code> with given number of seconds. Panics …","Subtracts another <code>Date</code> from the current date. Returns a …","Subtracts another <code>DateTime</code> from the current date and time.…","","","","","","","Makes a new <code>Date</code> for the next date.","The next day in the week.","The next month.","Makes a new <code>Date</code> for the next date.","Retrieves a time component. Unlike <code>date</code>, this is not …","Returns the number of non-leap seconds since January 1, …","Returns the number of non-leap-milliseconds since January …","Returns the number of non-leap-nanoseconds since January …","Returns the number of microseconds since the last second …","Returns the number of milliseconds since the last second …","Returns the number of nanoseconds since the last second …","Retrieves an associated time zone.","Retrieves an associated time zone.","","","","","","","","","","Returns an RFC 2822 date and time string such as …","Returns an RFC 3339 and ISO 8601 date and time string …","Return an RFC 3339 and ISO 8601 date and time string with …","Creates a <code>std::time::Duration</code> object from <code>time::Duration</code>","","","","","","Return a copy truncated to the specified number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the day of week.","","","Makes a new <code>Duration</code> with given number of weeks. …","Makes a new value with the day of month (starting from 1) …","","","Makes a new value with the day of month (starting from 0) …","","","Makes a new value with the hour number changed.","","Makes a new value with the minute number changed.","","Makes a new value with the month number (starting from 1) …","","","Makes a new value with the month number (starting from 0) …","","","Makes a new value with nanoseconds since the whole …","","Makes a new value with the day of year (starting from 1) …","","","Makes a new value with the day of year (starting from 0) …","","","Makes a new value with the second number changed.","","Changes the associated time zone. This does not change …","Changes the associated time zone. This does not change …","Makes a new value with the year number changed.","","","Returns the year number in the calendar date.","","","Returns the absolute year number starting from 1 with a …","A duration where the stored seconds and nanoseconds are …","Day of the month (FW=PW=2).","A <em>temporary</em> object which can be used as an argument to …","Issues a formatting error. Used to signal an invalid …","Fixed-format item types.","Fixed-format item.","Hour number in the 24-hour clocks (FW=PW=2).","Hour number in the 12-hour clocks (FW=PW=2).","Internal uses only.","Internal uses only.","An opaque type representing fixed-format item types for …","An opaque type representing numeric item types for …","Week number in the ISO week date (FW=PW=2).","Year in the ISO week date (FW=4, PW=∞). May accept …","Year in the ISO week date, divided by 100 (FW=PW=2). …","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot …","A single formatting item. This is used for both …","A literally printed and parsed text.","Full month names.","Full day of the week names.","AM/PM.","The number of minutes since the last whole hour (FW=PW=2).","Month (FW=PW=2).","The number of nanoseconds since the last whole second …","An optional dot plus one or more digits for left-aligned …","Same as <code>Nanosecond</code> but the accuracy is fixed to 3.","Same as <code>Nanosecond</code> but the accuracy is fixed to 6.","Same as <code>Nanosecond</code> but the accuracy is fixed to 9.","No padding.","Day of the week, where Sunday = 0 and Saturday = 6 …","Numeric item types. They have associated formatting width …","Numeric item. Can be optionally padded to the maximal …","Day of the year (FW=PW=3).","Same as <code>Literal</code> but with the string owned by the item.","Same as <code>Space</code> but with the string owned by the item.","Padding characters for numeric items.","An error from the <code>parse</code> function.","Same as <code>Result<T, ParseError></code>.","Parsed parts of date and time. There are two classes of …","RFC 2822 date and time syntax. Commonly used for email …","RFC 3339 & ISO 8601 date and time syntax.","The number of seconds since the last whole minute …","Abbreviated month names.","Abbreviated day of the week names.","Space padding.","Whitespace. Prints literally but reads zero or more …","The number of non-leap seconds since the midnight UTC on …","Timezone name.","Same as <code>TimezoneOffsetColon</code> but prints no colon. Parsing …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or <code>Z</code>).","Same as <code>TimezoneOffsetColonZ</code> but prints no colon. Parsing …","AM/PM.","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week, where Monday = 1 and Sunday = 7 …","Full Gregorian year (FW=4, PW=∞). May accept years …","Gregorian year divided by 100 (century number; FW=PW=2). …","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","Zero (<code>0</code>) padding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Day of the month (1–28, 1–29, 1–30 or 1–31 …","","","","","","","","","","","","","","","","","","","","","","Tries to format given arguments with given formatting …","Formats single formatting item","","","","","","","","","","Hour number divided by 12 (0–1). 0 indicates AM and 1 …","Hour number modulo 12 (0–11).","","","","","","","","","","ISO week number (1–52 or 1–53 depending on the year).","Year in the ISO week date.","Year in the ISO week date, divided by 100. Implies that …","Year in the ISO week date, modulo 100. Implies that the …","Minute number (0–59).","Month (1–12).","The number of nanoseconds since the whole second (0–…","","","","","","","Returns the initial value of parsed parts.","Makes a new <code>DelayedFormat</code> value out of local date and …","Makes a new <code>DelayedFormat</code> value out of local date and …","Offset from the local time to UTC, in seconds.","Day of the year (1–365 or 1–366 depending on the …","Tries to parse given string into <code>parsed</code> with given …","Second number (0–60, accounting for leap seconds).","Tries to set the <code>hour_div_12</code> field from given value. (…","Tries to set the <code>day</code> field from given value.","Tries to set both <code>hour_div_12</code> and <code>hour_mod_12</code> fields from …","Tries to set the <code>hour_mod_12</code> field from given hour number …","Tries to set the <code>isoweek</code> field from given value.","Tries to set the <code>isoyear</code> field from given value.","Tries to set the <code>isoyear_div_100</code> field from given value.","Tries to set the <code>isoyear_mod_100</code> field from given value.","Tries to set the <code>minute</code> field from given value.","Tries to set the <code>month</code> field from given value.","Tries to set the <code>nanosecond</code> field from given value.","Tries to set the <code>offset</code> field from given value.","Tries to set the <code>ordinal</code> field from given value.","Tries to set the <code>second</code> field from given value.","Tries to set the <code>timestamp</code> field from given value.","Tries to set the <code>week_from_mon</code> field from given value.","Tries to set the <code>week_from_sun</code> field from given value.","Tries to set the <code>weekday</code> field from given value.","Tries to set the <code>year</code> field from given value.","Tries to set the <code>year_div_100</code> field from given value.","Tries to set the <code>year_mod_100</code> field from given value.","<code>strftime</code>/<code>strptime</code>-inspired date and time formatting …","The number of non-leap seconds since the midnight UTC on …","Returns a parsed timezone-aware date and time out of …","Returns a parsed timezone-aware date and time out of …","Returns a parsed fixed time zone offset out of given …","Returns a parsed naive date out of given fields.","Returns a parsed naive date and time out of given fields, …","Returns a parsed naive time out of given fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week.","Year.","Year divided by 100. Implies that the year is >= 1 BCE …","Year modulo 100. Implies that the year is >= 1 BCE when …","Parsing iterator for <code>strftime</code>-like format strings.","","","","","","","","","Creates a new parsing iterator from the <code>strftime</code>-like …","","","","","","ISO 8601 week.","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The maximum possible <code>NaiveDateTime</code>.","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","The minimum possible <code>NaiveDateTime</code>.","ISO 8601 calendar date without timezone. Allows for every …","ISO 8601 combined date and time without timezone.","ISO 8601 time without timezone. Allows for the nanosecond …","","","","","","","","","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date and given …","","","","","","","","","Adds the <code>days</code> part of given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtracts the <code>days</code> part of given <code>Duration</code> from the …","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","","","","","Retrieves a date component.","Returns the day of month starting from 1.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of month starting from 0.","","","","","","","","","","","","Formats the date with the specified format string. See …","Formats the combined date and time with the specified …","Formats the time with the specified format string. See …","Formats the date with the specified formatting items. …","Formats the combined date and time with the specified …","Formats the time with the specified formatting items. …","","","","","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveTime</code> from the number of seconds since …","Makes a new <code>NaiveTime</code> from the number of seconds since …","","","","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","","","","Returns the hour number from 0 to 23.","Returns the hour number from 0 to 23.","","","","","","","Returns an iterator that steps by days until the last …","Returns an iterator that steps by weeks until the last …","Returns the minute number from 0 to 59.","Returns the minute number from 0 to 59.","Returns the month number starting from 1.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the month number starting from 0.","Returns the number of nanoseconds since the whole …","Returns the number of nanoseconds since the whole …","","","","","Makes a new <code>NaiveDateTime</code> from date and time components. …","Returns the number of non-leap seconds past the last …","Returns the day of year starting from 1.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of year starting from 0.","Adds given <code>Duration</code> to the current time, and also returns …","Subtracts given <code>Duration</code> from the current time, and also …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","","","","","Makes a new <code>NaiveDate</code> for the previous calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","Returns the second number from 0 to 59.","Returns the second number from 0 to 59.","Subtracts another <code>NaiveDate</code> from the current date. …","Subtracts another <code>NaiveDateTime</code> from the current date and …","Subtracts another <code>NaiveTime</code> from the current time. …","","","","","","","","","","","","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the next calendar date.","Retrieves a time component.","Returns the number of non-leap seconds since the midnight …","Returns the number of non-leap <em>milliseconds</em> since …","Returns the number of non-leap <em>nanoseconds</em> since midnight …","Returns the number of microseconds since the last whole …","Returns the number of milliseconds since the last whole …","Returns the number of nanoseconds since the last whole …","","","","","","","","","","","","","","","","","","","","Returns the ISO week number starting from 1.","Returns the ISO week number starting from 0.","Returns the day of week.","Returns the day of week.","Makes a new <code>NaiveDate</code> with the day of month (starting …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDate</code> with the day of month (starting …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDateTime</code> with the hour number changed.","Makes a new <code>NaiveTime</code> with the hour number changed.","Makes a new <code>NaiveDateTime</code> with the minute number changed.","Makes a new <code>NaiveTime</code> with the minute number changed.","Makes a new <code>NaiveDate</code> with the month number (starting …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDate</code> with the month number (starting …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDateTime</code> with nanoseconds since the …","Makes a new <code>NaiveTime</code> with nanoseconds since the whole …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDateTime</code> with the second number changed.","Makes a new <code>NaiveTime</code> with the second number changed.","Makes a new <code>NaiveDate</code> with the year number changed.","Makes a new <code>NaiveDateTime</code> with the year number changed.","Returns the year number in the calendar date.","Returns the year number in the calendar date.","Returns the year number for this ISO week.","Given local time representation has multiple results and …","The time zone with fixed offset, from UTC-23:59:59 to …","The conversion result from the local time to the …","Given local time representation is invalid. This can …","The offset from the local time to UTC.","An associated offset type. This type is used to store the …","Given local time representation has a single unique …","The time zone.","The UTC time zone. This is the most efficient time zone …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","","","","Parses a string with the specified format string and …","Returns <code>Some</code> for the earliest possible conversion result, …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","","","","Returns the fixed offset from UTC to the local time …","","","","","","","","","","","Converts the local <code>NaiveDate</code> to the timezone-aware <code>Date</code> …","Converts the local <code>NaiveDateTime</code> to the timezone-aware …","Reconstructs the time zone from the offset.","","","Converts the UTC <code>NaiveDate</code> to the local time. The UTC is …","Converts the UTC <code>NaiveDateTime</code> to the local time. The UTC …","","","","","","Makes a new <code>Date</code> from ISO week date (year and week …","Makes a new <code>Date</code> from ISO week date (year and week …","Returns <code>Some</code> for the latest possible conversion result, …","Returns the number of seconds to add to convert from UTC …","Maps a <code>LocalResult<T></code> into <code>LocalResult<U></code> with given …","","","Creates the offset(s) for given local <code>NaiveDate</code> if …","","","Creates the offset(s) for given local <code>NaiveDateTime</code> if …","","","Creates the offset for given UTC <code>NaiveDate</code>. This cannot …","","","Creates the offset for given UTC <code>NaiveDateTime</code>. This …","","","Returns <code>Some</code> only when the conversion result is unique, …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","","","","","","","","","","","","","","","Returns the single unique conversion result, or panics …","Returns the number of seconds to add to convert from the …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…"],"i":[1,1,2,0,0,0,1,0,3,3,0,4,1,5,1,1,1,0,0,0,0,1,1,2,2,5,0,2,1,1,0,0,0,5,0,2,1,0,5,5,0,3,5,5,0,6,6,7,8,8,7,7,7,7,7,7,7,7,7,6,7,2,8,3,5,9,1,10,6,7,2,8,3,5,9,1,10,6,7,8,6,7,8,6,7,2,8,3,5,9,1,10,6,7,2,8,3,5,9,1,10,6,7,8,8,11,7,8,11,7,8,6,3,6,4,8,4,8,6,7,2,8,3,5,9,1,10,6,6,7,7,2,8,8,3,3,5,5,9,1,10,0,7,8,7,8,6,7,2,8,8,8,8,3,5,9,1,10,5,1,6,8,8,5,1,1,5,1,7,8,7,8,5,1,12,8,12,6,6,7,2,8,3,5,9,1,10,6,11,7,8,6,6,6,6,12,8,6,11,7,8,11,7,8,6,0,7,8,7,8,1,12,8,6,6,9,10,6,6,11,5,5,6,6,6,6,6,6,12,6,5,1,5,0,7,8,11,7,8,11,7,8,8,8,8,6,7,8,7,5,1,7,0,13,12,8,6,7,8,6,7,7,8,8,8,7,5,1,7,8,8,8,8,8,8,8,7,8,6,7,2,8,3,5,9,1,10,8,8,8,6,6,7,8,3,5,13,6,7,2,8,3,5,9,1,10,6,7,2,8,3,5,9,1,10,6,7,2,8,3,5,9,1,10,11,7,8,6,11,7,8,11,7,8,12,8,12,8,11,7,8,11,7,8,12,8,11,7,8,11,7,8,12,8,7,8,11,7,8,11,7,8,11,6,14,0,15,0,15,14,14,14,16,0,0,14,14,14,14,0,15,16,16,16,14,14,14,16,16,16,16,17,14,0,15,14,15,15,0,0,0,0,16,16,14,16,16,17,15,14,16,16,16,16,16,16,14,14,14,14,14,14,17,18,17,14,16,19,15,20,21,22,18,17,14,16,19,15,20,21,22,18,17,14,16,19,15,20,21,18,17,14,16,19,15,20,21,21,21,20,18,17,14,16,19,15,20,21,18,17,14,16,19,15,20,20,21,22,22,0,0,18,17,14,16,19,15,20,21,22,21,21,18,17,14,16,19,15,20,21,22,21,21,21,21,21,21,21,14,16,19,15,20,21,21,22,22,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,21,18,17,14,16,19,15,20,21,20,22,18,17,14,16,19,15,20,21,22,18,17,14,16,19,15,20,21,22,18,17,14,16,19,15,20,21,22,21,21,21,21,21,21,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,24,25,25,26,26,24,25,26,24,24,24,24,24,24,24,24,24,24,25,27,26,24,25,27,26,24,25,24,25,24,25,27,26,24,25,27,26,24,25,27,26,25,24,25,24,25,24,25,27,26,24,24,25,25,27,26,26,24,25,26,24,25,26,24,25,27,26,26,26,26,26,26,26,26,26,24,24,24,24,26,26,24,25,26,25,25,24,24,24,24,24,24,24,25,26,25,26,24,25,27,26,24,25,24,24,25,26,24,25,24,25,25,26,24,25,27,26,25,26,24,25,24,25,26,26,24,25,26,24,25,27,26,24,24,25,26,24,25,26,24,24,25,25,25,26,26,26,24,25,26,24,24,25,25,25,25,25,25,25,24,25,27,26,24,25,26,24,25,27,26,24,25,27,26,24,25,27,26,27,27,24,25,24,25,24,25,25,26,25,26,24,25,24,25,25,26,24,25,24,25,25,26,24,25,24,25,27,28,0,0,28,0,29,28,0,0,28,28,28,28,28,28,30,31,28,30,31,28,30,31,28,30,31,29,28,30,30,28,30,31,32,30,31,28,30,30,31,31,28,30,31,29,29,29,30,31,29,29,28,30,28,30,31,29,29,28,30,28,28,30,29,30,31,29,30,31,29,30,31,29,30,31,28,29,29,29,29,29,28,30,31,30,31,28,30,31,28,30,31,28,30,31,28,30,30,30,29,29,29,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["duration",3]],[[["duration",3]],["duration",3]],[[["oldduration",3]],["date",3]],[[["oldduration",3]],["datetime",3]],[[["fixedoffset",3]],["datetime",3]],[[["u32",15]],["datetime",3]],[[["u32",15]],["datetime",3]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["datetime",3]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["datetime",3]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["naivetime",3]],[["option",4],["datetime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],[["option",4],["duration",3]]],[[["oldduration",3]],[["date",3],["option",4]]],[[["oldduration",3]],[["option",4],["datetime",3]]],[[["duration",3]],[["option",4],["duration",3]]],[[["oldduration",3]],[["date",3],["option",4]]],[[["oldduration",3]],[["option",4],["datetime",3]]],[[],["duration",3]],[[],["date",3]],[[],["secondsformat",4]],[[],["datetime",3]],[[],["roundingerror",4]],[[],["weekday",4]],[[],["parseweekdayerror",3]],[[],["month",4]],[[],["parsemontherror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["ordering",4]],[[["date",3]],["ordering",4]],[[["datetime",3]],["ordering",4]],[[],["date",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["i64",15]],["duration",3]],[[],["str",15]],[[["i32",15]],["duration",3]],[[["duration",3]],["result",4]],[[["duration",3]],["result",4]],[[["duration",3]],["result",4]],[[["duration",3]],["result",4]],[[["duration",3]],["bool",15]],[[["date",3]],["bool",15]],[[["secondsformat",4]],["bool",15]],[[["datetime",3]],["bool",15]],[[["roundingerror",4]],["bool",15]],[[["weekday",4]],["bool",15]],[[["parseweekdayerror",3]],["bool",15]],[[["month",4]],["bool",15]],[[["parsemontherror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["str",15]],[["delayedformat",3],["strftimeitems",3]]],[[["str",15]],[["delayedformat",3],["strftimeitems",3]]],[[],["delayedformat",3]],[[],["delayedformat",3]],[[]],[[]],[[]],[[["utc",3],["datetime",3]]],[[["datetime",3],["fixedoffset",3]]],[[]],[[["systemtime",3]],[["utc",3],["datetime",3]]],[[]],[[]],[[]],[[]],[[]],[[["i64",15]],[["weekday",4],["option",4]]],[[["i64",15]],[["month",4],["option",4]]],[[["stdduration",3]],[["duration",3],["outofrangeerror",3],["result",4]]],[[["str",15]],[["datetime",3],["parseresult",6]]],[[["str",15]],[["parseresult",6],["datetime",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["u32",15]],[["month",4],["option",4]]],[[["u64",15]],[["weekday",4],["option",4]]],[[["u64",15]],[["month",4],["option",4]]],[[["naivedate",3]],["date",3]],[[["naivedatetime",3]],["datetime",3]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[["i64",15]],["duration",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["isoweek",3]],[[],["isoweek",3]],[[],["isoweek",3]],[[],["duration",3]],[[["i64",15]],["duration",3]],[[["i64",15]],["duration",3]],[[],["duration",3]],[[],["u32",15]],[[],["u32",15]],[[["i64",15]],["duration",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["i32",15]],["duration",3]],null,[[],["naivedate",3]],[[],["naivedatetime",3]],[[],["naivedate",3]],[[],["naivedatetime",3]],[[],["str",15]],[[],["u32",15]],[[],["u32",15]],[[["i64",15]],["duration",3]],[[["duration",3]],["bool",15]],[[["parseweekdayerror",3]],["bool",15]],[[["parsemontherror",3]],["bool",15]],[[],["duration",3]],[[],["i64",15]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],["i64",15]],[[],[["option",4],["i64",15]]],[[],["i64",15]],[[],["i64",15]],[[],[["option",4],["i64",15]]],[[],["i64",15]],[[],["u32",15]],[[],["i64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["str",15]],[["datetime",3],["parseresult",6]]],[[["str",15]],[["datetime",3],["parseresult",6]]],[[["str",15]],[["datetime",3],["parseresult",6]]],[[["duration",3]],[["option",4],["ordering",4]]],[[["date",3]],[["ordering",4],["option",4]]],[[["datetime",3]],[["ordering",4],["option",4]]],[[],["date",3]],[[],["weekday",4]],[[],["month",4]],[[],[["date",3],["option",4]]],null,[[["u16",15]]],[[],["u32",15]],[[],["u32",15]],[[["i64",15]],["duration",3]],[[["timezone",8],["date",3]],["oldduration",3]],[[["datetime",3],["timezone",8]],["oldduration",3]],[[["duration",3]],["duration",3]],[[["oldduration",3]],["date",3]],[[["date",3]],["oldduration",3]],[[["oldduration",3]],["datetime",3]],[[["fixedoffset",3]],["datetime",3]],[[["datetime",3]],["oldduration",3]],[[],["date",3]],[[],["weekday",4]],[[],["month",4]],[[],[["date",3],["option",4]]],[[],["naivetime",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["bool",15],["secondsformat",4]],["string",3]],[[],[["result",4],["outofrangeerror",3],["stdduration",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["u16",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["weekday",4]],[[],["weekday",4]],[[],["weekday",4]],[[["i64",15]],["duration",3]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["date",3],["option",4]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],["option",4]],[[["u32",15]],[["option",4],["datetime",3]]],[[],[["timezone",8],["date",3]]],[[],[["datetime",3],["timezone",8]]],[[["i32",15]],["option",4]],[[["i32",15]],[["date",3],["option",4]]],[[["i32",15]],[["option",4],["datetime",3]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[],["duration",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pad",4]],[[],["numeric",4]],[[],["fixed",4]],[[],["internalfixed",3]],[[],["item",4]],[[],["parseerror",3]],[[],["parsed",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["parsed",3]],[[],["str",15]],[[["internalnumeric",3]],["bool",15]],[[["pad",4]],["bool",15]],[[["numeric",4]],["bool",15]],[[["fixed",4]],["bool",15]],[[["internalfixed",3]],["bool",15]],[[["item",4]],["bool",15]],[[["parseerror",3]],["bool",15]],[[["parsed",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3],["option",4],["option",4],["naivedate",3],["option",4],["naivetime",3]],["result",6]],[[["formatter",3],["option",4],["option",4],["naivedate",3],["item",4],["option",4],["naivetime",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["numeric",4]],["bool",15]],[[["fixed",4]],["bool",15]],[[["internalfixed",3]],["bool",15]],[[["item",4]],["bool",15]],[[["parseerror",3]],["bool",15]],[[["parsed",3]],["bool",15]],[[],["parsed",3]],[[["option",4],["naivedate",3],["option",4],["naivetime",3]],["delayedformat",3]],[[["option",4],["naivedate",3],["option",4],["naivetime",3]],["delayedformat",3]],null,null,[[["parsed",3],["str",15]],["parseresult",6]],null,[[["bool",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["weekday",4]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],[[["i64",15]],["parseresult",6]],null,null,[[],[["datetime",3],["parseresult",6]]],[[],[["parseresult",6],["datetime",3]]],[[],[["parseresult",6],["fixedoffset",3]]],[[],[["parseresult",6],["naivedate",3]]],[[["i32",15]],[["naivedatetime",3],["parseresult",6]]],[[],[["parseresult",6],["naivetime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["strftimeitems",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],["strftimeitems",3]],[[],[["option",4],["item",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["oldduration",3]],["naivedate",3]],[[["fixedoffset",3]],["naivedatetime",3]],[[["oldduration",3]],["naivedatetime",3]],[[["oldduration",3]],["naivetime",3]],[[["fixedoffset",3]],["naivetime",3]],[[["oldduration",3]]],[[["oldduration",3]]],[[["oldduration",3]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["naivetime",3]],["naivedatetime",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["oldduration",3]],[["option",4],["naivedate",3]]],[[["oldduration",3]],[["naivedatetime",3],["option",4]]],[[["oldduration",3]],[["option",4],["naivedate",3]]],[[["oldduration",3]],[["naivedatetime",3],["option",4]]],[[],["naivedate",3]],[[],["naivedatetime",3]],[[],["isoweek",3]],[[],["naivetime",3]],[[]],[[]],[[]],[[]],[[["naivedate",3]],["ordering",4]],[[["naivedatetime",3]],["ordering",4]],[[["isoweek",3]],["ordering",4]],[[["naivetime",3]],["ordering",4]],[[],["naivedate",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["naivedate",3]],["bool",15]],[[["naivedatetime",3]],["bool",15]],[[["isoweek",3]],["bool",15]],[[["naivetime",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],[["delayedformat",3],["strftimeitems",3]]],[[["str",15]],[["delayedformat",3],["strftimeitems",3]]],[[["str",15]],[["delayedformat",3],["strftimeitems",3]]],[[],["delayedformat",3]],[[],["delayedformat",3]],[[],["delayedformat",3]],[[]],[[]],[[]],[[]],[[["u32",15]],["naivetime",3]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15],["i32",15],["weekday",4]],["naivedate",3]],[[["u32",15],["i32",15],["weekday",4]],[["option",4],["naivedate",3]]],[[["i32",15]],["naivedate",3]],[[["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["str",15]],[["parseresult",6],["naivedate",3]]],[[["str",15]],[["naivedatetime",3],["parseresult",6]]],[[["str",15]],[["parseresult",6],["naivetime",3]]],[[["i64",15],["u32",15]],["naivedatetime",3]],[[["i64",15],["u32",15]],[["naivedatetime",3],["option",4]]],[[["u8",15],["u32",15],["i32",15],["weekday",4]],["naivedate",3]],[[["u8",15],["u32",15],["i32",15],["weekday",4]],[["option",4],["naivedate",3]]],[[["u32",15],["i32",15]],["naivedate",3]],[[["u32",15],["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15],["i32",15]],["naivedate",3]],[[["u32",15],["i32",15]],[["option",4],["naivedate",3]]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["isoweek",3]],[[],["isoweek",3]],[[],["naivedatedaysiterator",3]],[[],["naivedateweeksiterator",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["naivedate",3]],["bool",15]],[[["naivedatetime",3]],["bool",15]],[[["isoweek",3]],["bool",15]],[[["naivetime",3]],["bool",15]],[[["naivetime",3],["naivedate",3]],["naivedatetime",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["oldduration",3]]],[[["oldduration",3]]],[[["str",15]],[["parseresult",6],["naivedate",3]]],[[["str",15]],[["naivedatetime",3],["parseresult",6]]],[[["str",15]],[["parseresult",6],["naivetime",3]]],[[["naivedate",3]],[["option",4],["ordering",4]]],[[["naivedatetime",3]],[["option",4],["ordering",4]]],[[["isoweek",3]],[["option",4],["ordering",4]]],[[["naivetime",3]],[["option",4],["ordering",4]]],[[],["naivedate",3]],[[],[["option",4],["naivedate",3]]],[[],["u32",15]],[[],["u32",15]],[[["naivedate",3]],["oldduration",3]],[[["naivedatetime",3]],["oldduration",3]],[[["naivetime",3]],["oldduration",3]],[[["oldduration",3]],["naivedate",3]],[[["naivedate",3]],["oldduration",3]],[[["naivedatetime",3]],["oldduration",3]],[[["oldduration",3]],["naivedatetime",3]],[[["fixedoffset",3]],["naivedatetime",3]],[[["fixedoffset",3]],["naivetime",3]],[[["naivetime",3]],["oldduration",3]],[[["oldduration",3]],["naivetime",3]],[[["oldduration",3]]],[[["oldduration",3]]],[[["oldduration",3]]],[[],["naivedate",3]],[[],[["option",4],["naivedate",3]]],[[],["naivetime",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["u32",15]],[[],["weekday",4]],[[],["weekday",4]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivetime",3],["option",4]]],[[["i32",15]],[["option",4],["naivedate",3]]],[[["i32",15]],[["naivedatetime",3],["option",4]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,[[["u32",15]],[["localresult",4],["datetime",3]]],[[["u32",15]],[["localresult",4],["datetime",3]]],[[["u32",15]],[["localresult",4],["datetime",3]]],[[["u32",15]],[["localresult",4],["datetime",3]]],[[["naivetime",3]],[["localresult",4],["datetime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["localresult",4]],[[],["fixedoffset",3]],[[],["utc",3]],[[]],[[]],[[]],[[["str",15]],[["parseresult",6],["datetime",3]]],[[],["option",4]],[[["i32",15]],["fixedoffset",3]],[[["i32",15]],[["option",4],["fixedoffset",3]]],[[["localresult",4]],["bool",15]],[[["fixedoffset",3]],["bool",15]],[[["utc",3]],["bool",15]],[[],["fixedoffset",3]],[[],["fixedoffset",3]],[[],["fixedoffset",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["naivedate",3]],[["localresult",4],["date",3]]],[[["naivedatetime",3]],[["localresult",4],["datetime",3]]],[[]],[[["fixedoffset",3]],["fixedoffset",3]],[[["utc",3]],["utc",3]],[[["naivedate",3]],["date",3]],[[["naivedatetime",3]],["datetime",3]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["i32",15],["weekday",4]],["date",3]],[[["u32",15],["i32",15],["weekday",4]],[["localresult",4],["date",3]]],[[],["option",4]],[[],["i32",15]],[[["fnmut",8]],["localresult",4]],[[["localresult",4]],["bool",15]],[[["fixedoffset",3]],["bool",15]],[[["naivedate",3]],["localresult",4]],[[["naivedate",3]],[["localresult",4],["fixedoffset",3]]],[[["naivedate",3]],[["utc",3],["localresult",4]]],[[["naivedatetime",3]],["localresult",4]],[[["naivedatetime",3]],[["localresult",4],["fixedoffset",3]]],[[["naivedatetime",3]],[["utc",3],["localresult",4]]],[[["naivedate",3]]],[[["naivedate",3]],["fixedoffset",3]],[[["naivedate",3]],["utc",3]],[[["naivedatetime",3]]],[[["naivedatetime",3]],["fixedoffset",3]],[[["naivedatetime",3]],["utc",3]],[[],["option",4]],[[["i64",15],["u32",15]],["datetime",3]],[[["i64",15]],["datetime",3]],[[["i64",15]],[["localresult",4],["datetime",3]]],[[["i64",15]],["datetime",3]],[[["i64",15],["u32",15]],[["localresult",4],["datetime",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["i32",15]],[[["i32",15]],["fixedoffset",3]],[[["i32",15]],[["option",4],["fixedoffset",3]]],[[["u32",15],["i32",15]],["date",3]],[[["u32",15],["i32",15]],[["localresult",4],["date",3]]],[[["u32",15],["i32",15]],["date",3]],[[["u32",15],["i32",15]],[["localresult",4],["date",3]]]],"p":[[4,"Month"],[4,"SecondsFormat"],[4,"RoundingError"],[8,"DurationRound"],[4,"Weekday"],[3,"Duration"],[3,"Date"],[3,"DateTime"],[3,"ParseWeekdayError"],[3,"ParseMonthError"],[8,"Datelike"],[8,"Timelike"],[8,"SubsecRound"],[4,"Numeric"],[4,"Item"],[4,"Fixed"],[4,"Pad"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"],[3,"Parsed"],[3,"DelayedFormat"],[3,"StrftimeItems"],[3,"NaiveDate"],[3,"NaiveDateTime"],[3,"NaiveTime"],[3,"IsoWeek"],[4,"LocalResult"],[8,"TimeZone"],[3,"FixedOffset"],[3,"Utc"],[8,"Offset"]]},\
"chunked_transfer":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Decoder","Encoder","borrow","borrow","borrow_mut","borrow_mut","drop","flush","from","from","into","into","into_inner","new","new","read","try_from","try_from","try_into","try_into","type_id","type_id","with_chunks_size","with_flush_after_write","write"],"q":["chunked_transfer","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Reads HTTP chunks and sends back real data.","Splits the incoming data into HTTP chunks.","","","","","","","","","","","Unwraps the Decoder into its inner <code>Read</code> source.","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,2,2,1,2,1,2,1,1,2,1,1,2,1,2,1,2,2,2,2],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[],["ioresult",6]],[[]],[[]],[[]],[[]],[[]],[[],["decoder",3]],[[],["encoder",3]],[[],[["usize",15],["ioresult",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["encoder",3]],[[],["encoder",3]],[[],[["usize",15],["ioresult",6]]]],"p":[[3,"Decoder"],[3,"Encoder"]]},\
"clap":{"doc":"<code>clap</code> is a simple-to-use, efficient, and full-featured …","t":[13,13,13,13,13,13,13,3,4,3,3,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,6,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,14,11,11,11,11,11,11,11,14,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllArgsOverrideSelf","AllowExternalSubcommands","AllowInvalidUtf8","AllowLeadingHyphen","AllowLeadingHyphen","AllowMissingPositional","AllowNegativeNumbers","App","AppSettings","Arg","ArgGroup","ArgMatches","ArgRequiredElseHelp","ArgSettings","ArgsNegateSubcommands","ArgumentConflict","ArgumentNotFound","Bash","CaseInsensitive","ColorAlways","ColorAuto","ColorNever","ColoredHelp","DeriveDisplayOrder","DisableHelpFlags","DisableHelpSubcommand","DisableVersion","DontCollapseArgsInUsage","DontDelimitTrailingValues","Elvish","EmptyValue","EmptyValues","Error","ErrorKind","Fish","Format","Global","GlobalVersion","HelpDisplayed","Hidden","Hidden","HiddenLongHelp","HiddenShortHelp","HideDefaultValue","HideEnvValues","HidePossibleValues","HidePossibleValuesInHelp","InferSubcommands","InvalidSubcommand","InvalidUtf8","InvalidValue","Io","Last","MissingArgumentOrSubcommand","MissingRequiredArgument","MissingSubcommand","Multiple","NextLineHelp","NextLineHelp","NoBinaryName","OsValues","PowerShell","PropagateGlobalValuesDown","RequireDelimiter","RequireEquals","Required","Result","Shell","StrictUtf8","SubCommand","SubcommandRequired","SubcommandRequiredElseHelp","SubcommandsNegateReqs","TakesValue","TooFewValues","TooManyValues","TrailingVarArg","UnexpectedMultipleUsage","UnifiedHelpMessage","UnknownArgument","UnrecognizedSubcommand","UseValueDelimiter","ValueValidation","Values","VersionDisplayed","VersionlessSubcommands","WaitOnError","WrongNumberOfValues","Zsh","_clap_count_exprs","about","after_help","alias","alias","aliases","aliases","allow_hyphen_values","app_from_crate","arg","arg","arg_enum","arg_from_usage","args","args","args_from_usage","author","before_help","bin_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_insensitive","clap_app","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","conflicts_with","conflicts_with","conflicts_with_all","conflicts_with_all","crate_authors","crate_description","crate_name","crate_version","default","default","default","default","default","default_value","default_value_if","default_value_if_os","default_value_ifs","default_value_ifs_os","default_value_os","description","display_order","display_order","empty_values","env","env_os","eq","eq","eq","eq","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_usage","gen_completions","gen_completions_to","get_bin_name","get_matches","get_matches_from","get_matches_from_safe","get_matches_from_safe_borrow","get_matches_safe","get_name","global","global_setting","global_settings","group","group","groups","groups","help","help","help_message","help_short","hidden","hidden_long_help","hidden_short_help","hide_default_value","hide_env_values","hide_possible_values","index","index_of","indices_of","info","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_present","is_set","kind","last","long","long_about","long_help","long_version","max_term_width","max_values","message","min_values","multiple","multiple","name","new","next","next","next_back","next_back","next_line_help","number_of_values","occurrences_of","overrides_with","overrides_with_all","possible_value","possible_values","print_help","print_long_help","raw","require_delimiter","require_equals","required","required","required_if","required_ifs","required_unless","required_unless_all","required_unless_one","requires","requires","requires_all","requires_all","requires_if","requires_ifs","set","set_term_width","setting","settings","short","size_hint","size_hint","subcommand","subcommand","subcommand_matches","subcommand_name","subcommands","takes_value","template","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset","unset_setting","unset_settings","usage","usage","use_delimiter","use_stderr","validator","validator_os","value_delimiter","value_name","value_names","value_of","value_of_lossy","value_of_os","value_t","value_t_or_exit","value_terminator","values_of","values_of_lossy","values_of_os","values_t","values_t_or_exit","variants","version","version_message","version_short","visible_alias","visible_alias","visible_aliases","visible_aliases","with_defaults","with_description","with_name","with_name","with_name","write_help","write_long_help","write_long_version","write_version"],"q":["clapd":["Essentially sets [<code>Arg::overrides_with(\\\"itself\\\")</code>] for all …","Specifies that an unexpected positional argument, which …","Specifies that any invalid UTF-8 code points should <em>not</em> …","Specifies that leading hyphens are allowed in argument <em>…","Allows vals that start with a ‘-’","Allows one to implement two styles of CLIs where …","Allows negative numbers to pass as values. This is …","Used to create a representation of a command line program …","Application level settings, which affect how <code>App</code> operates","The abstract representation of a command line argument. …","<code>ArgGroup</code>s are a family of related arguments and way for …","Used to get information about the arguments that were …","Specifies that the help text should be displayed (and …","Various settings that apply to arguments and may be set, …","Specifies that use of a valid argument negates subcommands…","Occurs when the user provides two values which conflict …","Occurs when using the [<code>value_t!</code>] and [<code>values_t!</code>] macros …","Generates a .bash completion file for the Bourne Again …","Makes <code>Arg::possible_values</code> case insensitive","Enables colored output regardless of whether or not the …","Enables colored output only when the output is going to a …","Disables colored output no matter if the output is going …","Uses colorized help messages.","Displays the arguments and <code>SubCommand</code>s in the help …","Disables <code>-h</code> and <code>--help</code> <code>App</code> without affecting any of the …","Disables the <code>help</code> subcommand","Disables <code>-V</code> and <code>--version</code> <code>App</code> without affecting any of …","Disables the automatic collapsing of positional args into …","Disables the automatic delimiting of values when <code>--</code> or …","Generates a completion file for Elvish","Occurs when the user provides an empty value for an …","The argument allows empty values such as <code>--option \\\"\\\"</code>","Command Line Argument Parser Error","Command line argument parser kind of error","Generates a .fish completion file for the Friendly …","Represents a Format error (which is a part of <code>Display</code>). …","The argument should be propagated down through all child …","Specifies to use the version of the current command for …","Not a true “error” as it means <code>--help</code> or similar was …","Specifies that this <code>SubCommand</code> should be hidden from help …","The argument should <strong>not</strong> be shown in help text","The argument should <strong>not</strong> be shown in long help text","The argument should <strong>not</strong> be shown in short help text","Hides the default value from the help string","Hides ENV values in the help message","Hides the possible values from the help string","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Tries to match unknown args to partial <code>subcommands</code> or …","Occurs when the user provides an unrecognized [<code>SubCommand</code>]…","Occurs when the user provides a value containing invalid …","Occurs when an <code>Arg</code> has a set of possible values, and the …","Represents an [I/O error]. Can occur when writing to …","Specifies that the arg is the last positional argument …","Occurs when either an argument or <code>SubCommand</code> is required, …","Occurs when the user does not provide one or more …","Occurs when a subcommand is required (as defined by …","The argument may be used multiple times such as …","Places the help string for all arguments on the line …","Prints the help text on the line after the argument","Specifies that the parser should not assume the first …","An iterator for getting multiple values out of an …","Generates a completion file for PowerShell","<strong>DEPRECATED</strong>: This setting is no longer required in order …","Requires the use of a value delimiter for all multiple …","Require options use <code>--option=val</code> syntax","The argument must be used","Short hand for <code>Result</code> type","Describes which shell to produce a completions file for","Specifies that any invalid UTF-8 code points should be …","The abstract representation of a command line subcommand.","Allows specifying that if no <code>SubCommand</code> is present at …","Specifies that the help text should be displayed (before …","Allows <code>SubCommand</code>s to override all requirements of the …","The argument accepts a value, such as <code>--option <value></code>","Occurs when the user provides fewer values for an …","Occurs when a user provides more values for an argument …","Specifies that the final positional argument is a “…","Occurs when the user provides multiple values to an …","Groups flags and options together, presenting a more …","Occurs when a user provides a flag, option, argument or …","Occurs when the user provides an unrecognized <code>SubCommand</code> …","Determines if the argument allows values to be grouped …","Occurs when the user provides a value for an argument …","An iterator for getting multiple values out of an …","Not a true “error” as it means <code>--version</code> or similar …","Disables <code>-V</code> and <code>--version</code> for all <code>SubCommand</code>s (Defaults …","Will display a message “Press [ENTER]/[RETURN] to …","Occurs when the user provides a different number of …","Generates a completion file for the Z SHell (ZSH)","Counts the number of comma-delimited expressions passed …","Sets a string describing what the program does. This will …","Adds additional help information to be displayed in …","Allows adding a <code>SubCommand</code> alias, which function as “…","Allows adding a <code>Arg</code> alias, which function as “hidden” …","Allows adding <code>SubCommand</code> aliases, which function as “…","Allows adding <code>Arg</code> aliases, which function as “hidden” …","Allows values which start with a leading hyphen (<code>-</code>)","Allows you to build the <code>App</code> instance from your Cargo.toml …","Adds an argument to the list of valid possibilities.","Adds an argument to this group by name","Convenience macro to generate more complete enums with …","A convenience method for adding a single argument from a …","Adds multiple arguments to the list of valid possibilities","Adds multiple arguments to this group by name","Adds multiple arguments at once from a usage string, one …","Sets a string of author(s) that will be displayed to the …","Adds additional help information to be displayed in …","Overrides the system-determined binary name. This should …","","","","","","","","","","","","","","","","","","","","","","","","","When used with [<code>Arg::possible_values</code>] it allows the …","Build <code>App</code>, <code>Arg</code>s, <code>SubCommand</code>s and <code>Group</code>s with Usage-string …","","","","","","","","","","","","","","","","","","","","","","","Sets a conflicting argument by name. I.e. when using this …","Sets the exclusion rules of this group. Exclusion (aka …","The same as <code>Arg::conflicts_with</code> but allows specifying …","Sets the exclusion rules of this group. Exclusion rules …","Allows you to pull the authors for the app from your …","Allows you to pull the description from your Cargo.toml …","Allows you to pull the name from your Cargo.toml at …","Allows you to pull the version from your Cargo.toml at …","","","","","","Specifies the value of the argument when <em>not</em> specified at …","Specifies the value of the argument if <code>arg</code> has been used …","Provides a conditional default value in the exact same …","Specifies multiple values and conditions in the same …","Provides multiple conditional default values in the exact …","Provides a default value in the exact same manner as […","","Allows custom ordering of <code>SubCommand</code>s within the help …","Allows custom ordering of args within the help message. …","Allows an argument to accept explicitly empty values. An …","Specifies that if the value is not passed in as an …","Specifies that if the value is not passed in as an …","","","","","Prints the error to <code>stderr</code> and exits with a status of <code>1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of <code>Arg</code> from a usage string. Allows …","Generate a completions file for a specified shell at …","Generate a completions file for a specified shell at …","Get the name of the binary","Starts the parsing process, upon a failed parse an error …","Starts the parsing process. Like <code>App::get_matches</code> this …","Starts the parsing process. A combination of …","Starts the parsing process without consuming the <code>App</code> …","Starts the parsing process. This method will return a …","Get the name of the app","Specifies that an argument can be matched to all child …","Enables a single setting that is propagated down through …","Enables multiple settings which are propagated <em>down</em> …","Adds an <code>ArgGroup</code> to the application. <code>ArgGroup</code>s are a …","Specifies the name of the <code>ArgGroup</code> the argument belongs …","Adds multiple <code>ArgGroup</code>s to the <code>App</code> at once.","Specifies the names of multiple <code>ArgGroup</code>’s the argument …","Sets a custom help message and overrides the …","Sets the short help text of the argument that will be …","Sets the help text for the auto-generated <code>help</code> argument.","Sets the <code>short</code> for the auto-generated <code>help</code> argument.","Hides an argument from help message output.","Hides an argument from long help message output.","Hides an argument from short help message output.","Specifies if the default value of an argument should be …","@TODO @p2 @docs @release: write docs","Specifies if the possible values of an argument should be …","Specifies the index of a positional argument <strong>starting at</strong> …","Gets the starting index of the argument in respect to all …","Gets all indices of the argument in respect to all other …","Any additional information passed along, such as the …","","","","","","","","","","","","","","","Returns <code>true</code> if an argument was present at runtime, …","Checks if one of the <code>ArgSettings</code> settings is set for the …","The type of error","Specifies that this arg is the last, or final, positional …","Sets the long version of the argument without the …","Sets a string describing what the program does. This will …","Sets the long help text of the argument that will be …","Sets a string of the version number to be displayed when …","Sets the max terminal width at which to wrap help …","Specifies the <em>maximum</em> number of values are for this …","Formatted error message","Specifies the <em>minimum</em> number of values for this argument. …","Specifies that the argument may appear more than once. …","Allows more than one of the ‘Arg’s in this group to …","Sets the program’s name. This will be displayed when …","Creates a new instance of an application requiring a …","","","","","When set to <code>true</code> the help string will be displayed on the …","Specifies how many values are required to satisfy this …","Returns the number of times an argument was used at …","Sets a overridable argument by name. I.e. this argument …","Sets multiple mutually overridable arguments by name. …","Specifies a possible value for this argument, one at a …","Specifies a list of possible values for this argument. At …","Prints the full help message to <code>io::stdout()</code> using a …","Prints the full help message to <code>io::stdout()</code> using a …","Indicates that all parameters passed after this should …","Specifies that <em>multiple values</em> may only be set using the …","Requires that options use the <code>--option=val</code> syntax (i.e. …","Sets whether or not the argument is required by default. …","Sets the group as required or not. A required group will …","Allows specifying that an argument is required …","Allows specifying that an argument is required based on …","Sets an arg that override this arg’s required setting. …","Sets args that override this arg’s required setting. …","Sets args that override this arg’s required setting. …","Sets an argument by name that is required when this one …","Sets the requirement rules of this group. This is not to …","Sets multiple arguments by names that are required when …","Sets the requirement rules of this group. This is not to …","Allows a conditional requirement. The requirement will …","Allows multiple conditional requirements. The requirement …","Sets one of the <code>ArgSettings</code> settings for the argument.","Sets the terminal width at which to wrap help messages. …","Enables a single command, or <code>SubCommand</code>, level settings.","Enables multiple command, or <code>SubCommand</code>, level settings","Sets the short version of the argument without the …","","","Adds a <code>SubCommand</code> to the list of valid possibilities. …","This brings together <code>ArgMatches::subcommand_matches</code> and …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","Adds multiple subcommands to the list of valid …","Specifies that the argument takes a value at run time.","Sets the help template to be used, overriding the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsets one of the <code>ArgSettings</code> settings for the argument.","Disables a single command, or <code>SubCommand</code>, level setting.","Disables multiple command, or <code>SubCommand</code>, level settings.","Sets a custom usage string to override the auto-generated …","Returns a string slice of the usage statement for the <code>App</code> …","Specifies whether or not an argument should allow …","Should the message be written to <code>stdout</code> or not","Allows one to perform a custom validation on the argument …","Works identically to Validator but is intended to be used …","Specifies the separator to use when values are clumped …","Specifies the name for value of option or positional …","Specify multiple names for values of option arguments. …","Gets the value of a specific option or positional …","Gets the lossy value of a specific argument. If the …","Gets the OS version of a string value of a specific …","Convenience macro getting a typed value <code>T</code> where <code>T</code> …","Convenience macro getting a typed value <code>T</code> where <code>T</code> …","Specifies a value that <em>stops</em> parsing multiple values of a …","Gets a <code>Values</code> struct which implements <code>Iterator</code> for values …","Gets the lossy values of a specific argument. If the …","Gets a [<code>OsValues</code>] struct which is implements [<code>Iterator</code>] …","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …","Convenience macro getting a typed value <code>Vec<T></code> where <code>T</code> …","A list of possible variants in <code>&\'static str</code> form","Sets a string of the version number to be displayed when …","Sets the help text for the auto-generated <code>version</code> …","Sets the <code>short</code> for the auto-generated <code>version</code> argument.","Allows adding a <code>SubCommand</code> alias that functions exactly …","Allows adding a <code>Arg</code> alias that functions exactly like …","Allows adding multiple <code>SubCommand</code> aliases that functions …","Allows adding multiple <code>Arg</code> aliases that functions exactly …","Creates a new instance of an application requiring a …","Create an error with a custom description.","Creates a new instance of <code>Arg</code> using a unique string name. …","Creates a new instance of <code>ArgGroup</code> using a unique string …","Creates a new instance of a subcommand requiring a name. …","Writes the full help message to the user to a <code>io::Write</code> …","Writes the full help message to the user to a <code>io::Write</code> …","Writes the version message to the user to a <code>io::Write</code> …","Writes the version message to the user to a <code>io::Write</code> …"],"i":[1,1,1,1,2,1,1,0,0,0,0,0,1,0,1,3,3,4,2,1,1,1,1,1,1,1,1,1,1,4,3,2,0,0,4,3,2,1,3,1,2,2,2,2,2,2,1,1,3,3,3,3,2,3,3,3,2,1,2,1,0,4,1,2,2,2,0,0,1,0,1,1,1,2,3,3,1,3,1,3,3,2,3,0,3,1,1,3,4,0,5,5,5,6,5,6,6,0,5,7,0,5,5,7,5,5,5,5,5,1,6,8,9,10,7,2,11,4,3,12,5,1,6,8,9,10,7,2,11,4,3,12,6,0,5,1,6,8,9,10,7,2,11,4,3,5,1,6,8,9,10,7,2,11,4,3,6,7,6,7,0,0,0,0,6,8,9,10,7,6,6,6,6,6,6,12,5,6,6,6,6,1,6,2,3,12,5,1,8,9,10,7,2,11,4,4,3,12,12,5,1,6,6,8,9,10,7,7,2,11,4,3,12,12,12,1,2,4,6,5,5,5,5,5,5,5,5,5,6,5,5,5,6,5,6,5,6,5,5,6,6,6,6,6,6,6,8,8,12,5,1,6,8,9,10,7,2,11,4,3,12,9,10,8,6,12,6,6,5,6,5,5,6,12,6,6,7,5,5,9,10,9,10,6,6,8,6,6,6,6,5,5,6,6,6,6,7,6,6,6,6,6,6,7,6,7,6,6,6,5,5,5,6,9,10,5,8,8,8,5,6,5,5,1,6,8,9,10,7,2,11,4,3,5,4,12,5,1,6,8,9,10,7,2,11,4,3,12,5,1,6,8,9,10,7,2,11,4,3,12,5,1,6,8,9,10,7,2,11,4,3,12,6,5,5,5,8,6,12,6,6,6,6,6,8,8,8,0,0,6,8,8,8,0,0,4,5,5,5,5,6,5,6,5,12,6,7,11,5,5,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[]],[[]],[[["bool",15]]],null,[[["into",8],["arg",3]]],[[["str",15]]],null,[[["str",15]]],[[]],[[]],[[["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["string",3],["into",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],null,[[]],[[],["appsettings",4]],[[],["arg",3]],[[],["argmatches",3]],[[],["values",3]],[[],["osvalues",3]],[[]],[[],["argsettings",4]],[[],["subcommand",3]],[[],["shell",4]],[[],["errorkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[]],[[]],null,null,null,null,[[],["arg",3]],[[]],[[]],[[]],[[],["arggroup",3]],[[["str",15]]],[[["option",4],["str",15],["str",15]]],[[["option",4],["osstr",3],["str",15]]],[[]],[[]],[[["osstr",3]]],[[],["str",15]],[[["usize",15]]],[[["usize",15]]],[[["bool",15]]],[[["str",15]]],[[["osstr",3]]],[[["appsettings",4]],["bool",15]],[[["arg",3]],["bool",15]],[[["argsettings",4]],["bool",15]],[[["errorkind",4]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["arg",3]]],[[]],[[]],[[]],[[["arggroup",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[["error",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]]],[[["osstring",3],["into",8],["string",3],["shell",4],["into",8]]],[[["string",3],["into",8],["shell",4]]],[[],[["option",4],["str",15]]],[[],["argmatches",3]],[[],["argmatches",3]],[[],[["clapresult",6],["argmatches",3]]],[[],[["clapresult",6],["argmatches",3]]],[[],[["clapresult",6],["argmatches",3]]],[[],["str",15]],[[["bool",15]]],[[["appsettings",4]]],[[]],[[["arggroup",3]]],[[["str",15]]],[[]],[[]],[[["into",8],["str",15]]],[[["str",15]]],[[["into",8],["str",15]]],[[["asref",8],["str",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["u64",15]]],[[["asref",8],["str",15]],[["usize",15],["option",4]]],[[["asref",8],["str",15]],[["indices",3],["option",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8],["str",15]],["bool",15]],[[["argsettings",4]],["bool",15]],null,[[["bool",15]]],[[["str",15]]],[[["into",8],["str",15]]],[[["str",15]]],[[["into",8],["str",15]]],[[["usize",15]]],[[["u64",15]]],null,[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["string",3],["into",8]]],[[["string",3],["into",8]]],[[],[["option",4],["str",15]]],[[],[["option",4],["osstr",3]]],[[],[["option",4],["str",15]]],[[],[["option",4],["osstr",3]]],[[["bool",15]]],[[["u64",15]]],[[["asref",8],["str",15]],["u64",15]],[[["str",15]]],[[]],[[["str",15]]],[[]],[[],["clapresult",6]],[[],["clapresult",6]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15],["str",15]]],[[]],[[["str",15]]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[["str",15],["str",15]]],[[]],[[["argsettings",4]]],[[["usize",15]]],[[["appsettings",4]]],[[]],[[["asref",8],["str",15]]],[[]],[[]],[[["app",3]]],[[]],[[["asref",8],["str",15]],[["option",4],["argmatches",3]]],[[],[["option",4],["str",15]]],[[]],[[["bool",15]]],[[["into",8],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["argsettings",4]]],[[["appsettings",4]]],[[]],[[["into",8],["str",15]]],[[],["str",15]],[[["bool",15]]],[[],["bool",15]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[]],[[["asref",8],["str",15]],[["option",4],["str",15]]],[[["asref",8],["str",15]],[["cow",4],["option",4]]],[[["asref",8],["str",15]],[["osstr",3],["option",4]]],null,null,[[["str",15]]],[[["asref",8],["str",15]],[["values",3],["option",4]]],[[["asref",8],["str",15]],[["vec",3],["option",4]]],[[["asref",8],["str",15]],[["osvalues",3],["option",4]]],null,null,[[]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["asref",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[]],[[]],[[["string",3],["into",8]]],[[["str",15],["errorkind",4]]],[[["str",15]]],[[["str",15]]],[[["str",15]],["app",3]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]],[[],["clapresult",6]]],"p":[[4,"AppSettings"],[4,"ArgSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgGroup"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"SubCommand"],[3,"Error"]]},\
"client_bw":{"doc":"","t":[5],"n":["main"],"q":["client_bw"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"client_latency":{"doc":"","t":[5],"n":["main"],"q":["client_latency"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"core_affinity":{"doc":"This crate manages CPU affinities.","t":[3,11,11,11,11,11,11,5,12,11,5,11,11,11,11],"n":["CoreId","borrow","borrow_mut","clone","clone_into","fmt","from","get_core_ids","id","into","set_for_current","to_owned","try_from","try_into","type_id"],"q":["core_affinity","","","","","","","","","","","","","",""],"d":["This represents a CPU core.","","","","","","","This function tries to retrieve information on all the “…","","","This function tries to pin the current thread to the …","","","",""],"i":[0,1,1,1,1,1,1,0,1,1,0,1,1,1,1],"f":[null,[[]],[[]],[[],["coreid",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[],[["option",4],["vec",3]]],null,[[]],[[["coreid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"CoreId"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message …","t":[12,13,13,13,13,13,13,3,3,3,3,3,4,3,3,3,3,4,3,13,13,3,3,4,3,4,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["0","Disconnected","Disconnected","Disconnected","Disconnected","Empty","Full","IntoIter","Iter","ReadyTimeoutError","Receiver","RecvError","RecvTimeoutError","Select","SelectTimeoutError","SelectedOperation","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryReadyError","TryRecvError","TrySelectError","TrySendError","after","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","is_disconnected","is_disconnected","is_disconnected","is_disconnected","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_timeout","is_timeout","iter","len","len","ne","ne","ne","never","new","next","next","next","ready","ready_deadline","ready_timeout","recv","recv","recv","recv_deadline","recv_timeout","remove","same_channel","same_channel","select","select","select_deadline","select_timeout","send","send","send","send_deadline","send_timeout","tick","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_ready","try_recv","try_select","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded"],"q":["crossbeam_channeld":["","The message could not be sent because the channel is …","The message could not be sent because the channel is …","The message could not be received because the channel is …","The message could not be received because the channel is …","A message could not be received because the channel is …","The message could not be sent because the channel is full.","A blocking iterator over messages in a channel.","A blocking iterator over messages in a channel.","An error returned from the <code>ready_timeout</code> method.","The receiving side of a channel.","An error returned from the <code>recv</code> method.","An error returned from the <code>recv_timeout</code> method.","Selects from a set of channel operations.","An error returned from the <code>select_timeout</code> method.","A selected operation that needs to be completed.","An error returned from the <code>send</code> method.","An error returned from the <code>send_timeout</code> method.","The sending side of a channel.","The message could not be sent because the channel is full …","A message could not be received because the channel is …","A non-blocking iterator over messages in a channel.","An error returned from the <code>try_ready</code> method.","An error returned from the <code>try_recv</code> method.","An error returned from the <code>try_select</code> method.","An error returned from the <code>try_send</code> method.","Creates a receiver that delivers a message after a …","Creates a receiver that delivers a message at a certain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a channel of bounded capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index of the selected operation.","","","","","","","","","","","","","","","","","","Unwraps the message.","Unwraps the message.","Unwraps the message.","","","","","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation timed out.","Returns <code>true</code> if the receive operation timed out.","A blocking iterator over messages in the channel.","Returns the number of messages in the channel.","Returns the number of messages in the channel.","","","","Creates a receiver that never delivers messages.","Creates an empty list of channel operations for selection.","","","","Blocks until one of the operations becomes ready.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is received or …","Adds a receive operation.","Completes the receive operation.","Waits for a message to be received from the channel, but …","Waits for a message to be received from the channel, but …","Removes a previously added operation.","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if receivers belong to the same channel.","Blocks until one of the operations becomes ready and …","Selects from a set of channel operations.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is sent or the …","Adds a send operation.","Completes the send operation.","Waits for a message to be sent into the channel, but only …","Waits for a message to be sent into the channel, but only …","Creates a receiver that delivers messages periodically.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over messages in the channel.","Attempts to find a ready operation without blocking.","Attempts to receive a message from the channel without …","Attempts to select one of the operations without blocking.","Attempts to send a message into the channel without …","","","","","","","","","","","","","","","","","","Creates a channel of unbounded capacity."],"i":[1,2,3,4,5,4,2,0,0,0,0,0,0,0,0,0,0,0,0,3,5,0,0,0,0,0,0,0,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,0,6,7,6,7,11,1,2,3,13,4,5,14,15,16,17,6,7,11,1,2,3,13,4,5,14,15,16,17,11,6,7,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,1,2,2,3,3,13,13,4,4,5,5,14,14,15,15,16,17,6,7,8,9,10,11,12,1,2,2,3,3,13,4,4,5,5,14,15,16,17,12,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,1,2,3,7,8,9,10,2,3,4,5,6,7,4,6,7,2,3,5,7,6,7,1,2,3,0,11,8,9,10,11,11,11,7,11,12,7,7,11,6,7,11,0,11,11,6,11,12,6,6,0,6,7,11,1,2,3,13,4,5,14,15,16,17,1,2,3,13,4,5,14,15,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,7,11,7,11,6,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],[["receiver",3],["instant",3]]],[[["instant",3]],[["receiver",3],["instant",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["select",3]],[[],["senderror",3]],[[],["trysenderror",4]],[[],["sendtimeouterror",4]],[[],["recverror",3]],[[],["tryrecverror",4]],[[],["recvtimeouterror",4]],[[],["tryselecterror",3]],[[],["selecttimeouterror",3]],[[],["tryreadyerror",3]],[[],["readytimeouterror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["select",3]],[[]],[[]],[[]],[[["senderror",3]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["recverror",3]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryselecterror",3]],["bool",15]],[[["selecttimeouterror",3]],["bool",15]],[[["tryreadyerror",3]],["bool",15]],[[["readytimeouterror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["senderror",3]],["trysenderror",4]],[[]],[[["senderror",3]],["sendtimeouterror",4]],[[]],[[]],[[["recverror",3]],["tryrecverror",4]],[[]],[[]],[[["recverror",3]],["recvtimeouterror",4]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[],["usize",15]],[[["senderror",3]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[],["receiver",3]],[[],["select",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[["instant",3]],[["result",4],["usize",15],["readytimeouterror",3]]],[[["duration",3]],[["result",4],["usize",15],["readytimeouterror",3]]],[[],[["recverror",3],["result",4]]],[[["receiver",3]],["usize",15]],[[["receiver",3]],[["recverror",3],["result",4]]],[[["instant",3]],[["recvtimeouterror",4],["result",4]]],[[["duration",3]],[["recvtimeouterror",4],["result",4]]],[[["usize",15]]],[[["sender",3]],["bool",15]],[[["receiver",3]],["bool",15]],[[],["selectedoperation",3]],null,[[["instant",3]],[["result",4],["selectedoperation",3],["selecttimeouterror",3]]],[[["duration",3]],[["result",4],["selectedoperation",3],["selecttimeouterror",3]]],[[],[["senderror",3],["result",4]]],[[["sender",3]],["usize",15]],[[["sender",3]],[["senderror",3],["result",4]]],[[["instant",3]],[["result",4],["sendtimeouterror",4]]],[[["duration",3]],[["result",4],["sendtimeouterror",4]]],[[["duration",3]],[["receiver",3],["instant",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["tryiter",3]],[[],[["result",4],["usize",15],["tryreadyerror",3]]],[[],[["tryrecverror",4],["result",4]]],[[],[["tryselecterror",3],["result",4],["selectedoperation",3]]],[[],[["trysenderror",4],["result",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]]],"p":[[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Select"],[3,"SelectedOperation"],[3,"RecvError"],[3,"TrySelectError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"ReadyTimeoutError"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","t":[13,3,13,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Empty","Injector","Retry","Steal","Stealer","Success","Worker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","init","init","init","init","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_retry","is_success","len","len","ne","new","new_fifo","new_lifo","or_else","pop","push","push","steal","steal","steal_batch","steal_batch","steal_batch_and_pop","steal_batch_and_pop","stealer","success","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["crossbeam_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The queue was empty at the time of stealing.","An injector queue.","The steal operation needs to be retried.","Possible outcomes of a steal operation.","A stealer handle of a worker queue.","At least one task was successfully stolen.","A worker queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes items until a <code>Success</code> is found and returns it.","","","","","","","","","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue was empty at the time of …","Returns <code>true</code> if the steal operation needs to be retried.","Returns <code>true</code> if at least one task was stolen.","Returns the number of tasks in the deque.","Returns the number of tasks in the queue.","","Creates a new injector queue.","Creates a FIFO worker queue.","Creates a LIFO worker queue.","If no task was stolen, attempts another steal operation.","Pops a task from the queue.","Pushes a task into the queue.","Pushes a task into the queue.","Steals a task from the queue.","Steals a task from the queue.","Steals a batch of tasks and pushes them into another …","Steals a batch of tasks and pushes them into a worker.","Steals a batch of tasks, pushes them into another worker, …","Steals a batch of tasks, pushes them into a worker, and …","Creates a stealer for this queue.","Returns the result of the operation, if successful.","","","","","","","","","","","","","",""],"i":[1,0,1,0,0,1,0,2,3,4,1,2,3,4,1,3,1,3,1,4,2,3,4,1,2,3,4,1,2,3,4,4,1,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,1,2,3,4,1,1,1,2,4,1,4,2,2,1,2,2,4,3,4,3,4,3,4,2,1,3,1,2,3,4,1,2,3,4,1,2,3,4,1],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stealer",3]],[[],["steal",4]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["steal",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["steal",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[["steal",4]],["bool",15]],[[],["injector",3]],[[],["worker",3]],[[],["worker",3]],[[],["steal",4]],[[],["option",4]],[[]],[[]],[[],["steal",4]],[[],["steal",4]],[[["worker",3]],["steal",4]],[[["worker",3]],["steal",4]],[[["worker",3]],["steal",4]],[[["worker",3]],["steal",4]],[[],["stealer",3]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":[18,18,3,3,3,8,3,16,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["ALIGN","ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","current","default","default","default","default_collector","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","failure","fetch_and","fetch_or","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","is_pinned","load","load_consume","new","new","new","new","null","null","partial_cmp","pin","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag"],"q":["crossbeam_epochd":["The alignment of pointer.","The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","","","","Returns the default global collector.","Stores a function so that it can be executed at some …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some …","Dereferences the given pointer.","","Dereferences the pointer.","Mutably dereferences the given pointer.","","Dereferences the pointer.","Drops the object pointed to by the given pointer.","","","","","Checks if both handles point to the same collector.","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","","Returns a new atomic pointer pointing to <code>raw</code>.","Returns a new atomic pointer pointing to <code>ptr</code>.","","","Returns a new atomic pointer pointing to <code>owned</code>.","","","","","","Returns a new owned pointer pointing to <code>b</code>.","","Returns a new pointer pointing to <code>raw</code>.","","","","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","","","","","","","","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a [<code>Shared</code>].","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the current thread is pinned.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the current thread.","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …"],"i":[1,1,0,0,0,0,0,1,0,0,0,0,0,2,3,2,3,4,5,2,2,3,6,7,8,4,5,2,2,3,6,7,8,5,2,3,6,5,2,3,6,3,7,8,5,5,4,5,3,6,0,8,8,8,1,2,3,1,2,3,1,2,7,8,3,6,9,5,5,5,8,4,5,5,2,3,3,6,7,8,4,5,5,5,5,5,5,5,2,2,2,2,3,3,6,7,8,2,10,2,3,1,5,2,4,5,2,3,6,7,8,2,5,3,2,10,2,3,3,0,7,5,5,5,2,6,4,5,3,3,0,7,6,8,8,5,9,5,2,3,5,2,3,6,4,5,2,3,6,7,8,4,5,2,3,6,7,8,4,5,2,3,6,7,8,0,2,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[],["collector",3]],[[],[["collector",3],["option",4]]],[[["shared",3],["guard",3]],[["result",4],["shared",3],["compareandseterror",3]]],[[["shared",3],["guard",3]],[["result",4],["shared",3],["compareandseterror",3]]],null,[[]],[[]],[[]],[[],["collector",3]],[[]],[[["shared",3]]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[],["bool",15]],[[["collector",3]],["bool",15]],[[],["ordering",4]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[["usize",15],["guard",3],["ordering",4]],["shared",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["shared",3]]],[[]],[[["box",3]]],[[["owned",3]]],[[]],[[]],[[]],[[]],[[]],[[["box",3]]],[[]],[[]],[[]],[[]],[[]],[[],["owned",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[],["atomic",3]],[[],["owned",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["box",3]],[[],["owned",3]],[[],["owned",3]],[[["guard",3]],["shared",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["guard",3],["ordering",4]],["shared",3]],[[["guard",3]],["shared",3]],[[],["atomic",3]],[[],["owned",3]],[[]],null,[[],["atomic",3]],[[],["shared",3]],[[],[["option",4],["ordering",4]]],[[],["guard",3]],[[],["guard",3]],[[],["localhandle",3]],[[]],[[]],[[["pointer",8],["ordering",4]]],[[],["ordering",4]],[[["pointer",8],["guard",3],["ordering",4]],["shared",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["guard",3]],[[["usize",15]],["owned",3]],[[["usize",15]],["shared",3]]],"p":[[8,"Pointable"],[3,"Owned"],[3,"Shared"],[3,"CompareAndSetError"],[3,"Atomic"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","ne","new","new","reset","snooze","spin","sync","thread","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id","Parker","ShardedLock","ShardedLockReadGuard","ShardedLockWriteGuard","Unparker","WaitGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","deref","deref","deref_mut","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","get_mut","into","into","into","into","into","into","into_inner","into_raw","into_raw","is_poisoned","new","new","new","park","park_timeout","read","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","unpark","unparker","wait","write","Scope","ScopedJoinHandle","ScopedThreadBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","fmt","fmt","fmt","from","from","from","into","into","into","join","name","scope","spawn","spawn","stack_size","thread","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["crossbeam_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","","","","","","","","","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","Thread synchronization primitives.","Threads that can borrow variables from the stack.","","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and …","Applies bitwise “and” to the current value and …","Applies logical “and” to the current value and …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Applies logical “xor” to the current value and …","Applies bitwise “xor” to the current value and …","Applies bitwise “xor” to the current value and …","","","","","","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","","","A thread parking primitive.","A sharded reader-writer lock.","A guard used to release the shared read access of a […","A guard used to release the exclusive write access of a […","Unparks a thread parked by the associated [<code>Parker</code>].","Enables threads to synchronize the beginning or end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a raw pointer into a <code>Parker</code>.","Converts a raw pointer into an <code>Unparker</code>.","Returns a mutable reference to the underlying data.","","","","","","","Consumes this lock, returning the underlying data.","Converts a <code>Parker</code> into a raw pointer.","Converts an <code>Unparker</code> into a raw pointer.","Returns <code>true</code> if the lock is poisoned.","Creates a new <code>Parker</code>.","Creates a new sharded reader-writer lock.","Creates a new wait group and returns the single reference …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Locks with shared read access, blocking the current …","","","","","","","","","","","","","","","","","Attempts to acquire this lock with shared read access.","Attempts to acquire this lock with exclusive write access.","","","","","","","Atomically makes the token available if it is not already.","Returns a reference to an associated [<code>Unparker</code>].","Drops this reference and waits until all other references …","Locks with exclusive write access, blocking the current …","A scope for spawning threads.","A handle that can be used to join its scoped thread.","Configures the properties of a new thread.","","","","","","","Creates a builder that can configure a thread before …","","","","","","","","","","Waits for the thread to finish and returns its result.","Sets the name for the new thread.","Creates a new scope for spawning threads.","Spawns a scoped thread.","Spawns a scoped thread with this configuration.","Sets the size of the stack for the new thread.","Returns a handle to the underlying thread.","","","","","","","","",""],"i":[0,0,0,1,2,1,2,2,2,1,2,2,2,2,1,2,1,2,2,2,2,1,2,2,1,2,1,2,1,1,1,0,0,2,1,2,1,2,1,2,0,0,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4,0,0,0,0,0,0,5,6,7,8,9,10,5,6,7,8,9,10,6,10,6,10,5,7,10,8,9,9,9,10,5,6,7,8,8,9,9,10,5,6,7,7,7,8,9,10,5,6,7,5,6,7,8,9,10,7,5,6,7,5,7,10,5,5,7,6,10,8,9,5,6,7,8,9,10,5,6,7,8,9,10,7,7,5,6,7,8,9,10,6,5,10,7,0,0,0,11,12,13,11,12,13,11,11,12,13,11,12,13,11,12,13,12,13,0,11,13,13,12,11,12,13,11,12,13,11,12,13],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["cachepadded",3]],[[]],[[],["backoff",3]],[[],["cachepadded",3]],[[]],[[]],[[["cachepadded",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["cachepadded",3]],["bool",15]],[[]],[[],["cachepadded",3]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["atomiccell",3]],[[["isize",15]],["isize",15]],[[["usize",15]],["usize",15]],[[["isize",15]],["isize",15]],[[["usize",15]],["usize",15]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[["isize",15]],["isize",15]],[[["usize",15]],["usize",15]],[[["isize",15]],["isize",15]],[[["usize",15]],["usize",15]],[[["bool",15]],["bool",15]],[[["usize",15]],["usize",15]],[[["isize",15]],["isize",15]],[[["formatter",3]],["result",6]],[[]],[[],["atomiccell",3]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["atomiccell",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unparker",3]],[[],["waitgroup",3]],[[]],[[]],[[]],[[],["shardedlock",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["parker",3]],[[],["unparker",3]],[[],["lockresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lockresult",6]],[[["parker",3]]],[[["unparker",3]]],[[],["bool",15]],[[],["parker",3]],[[],["shardedlock",3]],[[]],[[]],[[["duration",3]]],[[],[["lockresult",6],["shardedlockreadguard",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["shardedlockreadguard",3],["trylockresult",6]]],[[],[["trylockresult",6],["shardedlockwriteguard",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["unparker",3]],[[]],[[],[["shardedlockwriteguard",3],["lockresult",6]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["scopedthreadbuilder",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["string",3]],["scopedthreadbuilder",3]],[[],["result",6]],[[],["scopedjoinhandle",3]],[[],[["result",6],["scopedjoinhandle",3]]],[[["usize",15]],["scopedthreadbuilder",3]],[[],["thread",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Backoff"],[3,"CachePadded"],[8,"AtomicConsume"],[3,"AtomicCell"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"ScopedThreadBuilder"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":[4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11],"n":["Either","Left","Right","all","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","borrow","borrow_mut","clone","cmp","collect","count","deref","deref_mut","either","either_with","eq","expect_left","expect_right","extend","factor_first","factor_second","flip","fmt","fmt","fold","from","from","hash","into","into","into_inner","into_iter","into_iter","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","map","map_left","map_right","ne","next","next_back","nth","partial_cmp","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","try_from","try_into","try_left","try_right","type_id","unwrap_left","unwrap_right"],"q":["either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","A value of type <code>L</code>.","A value of type <code>R</code>.","","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.","","","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.","","","","","","","","","","","","Apply one of two functions depending on contents, …","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.","","","","","","","","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Map <code>f</code> over the contained value and return the result in …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","Returns the left value","Returns the right value"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1],"f":[null,null,null,[[],["bool",15]],[[],["either",4]],[[]],[[]],[[],["str",15]],[[],["either",4]],[[]],[[],["str",15]],[[]],[[]],[[]],[[],["either",4]],[[["either",4]],["ordering",4]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["either",4]],["bool",15]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[]],[[],["either",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["result",4]]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["either",4]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["either",4]],[[]],[[]],[[]],[[],["either",4]],[[],["either",4]],[[],["either",4]],[[["either",4]],["bool",15]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["either",4]],[["option",4],["ordering",4]]],[[],["option",4]],[[],["either",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[]],[[]]],"p":[[4,"Either"]]},\
"form_urlencoded":{"doc":"Parser and serializer for the …","t":[3,6,16,3,3,3,8,11,10,11,11,11,11,11,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ByteSerialize","EncodingOverride","Finished","Parse","ParseIntoOwned","Serializer","Target","append_pair","as_mut_string","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_serialize","clear","clone","clone_into","encoding_override","extend_pairs","finish","finish","fmt","for_suffix","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","into_owned","new","next","next","next","parse","size_hint","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["form_urlencoded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Return value of <code>byte_serialize()</code>.","","","The return type of <code>parse()</code>.","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …","The <code>application/x-www-form-urlencoded</code> serializer.","","Serialize and append a name/value pair.","","","","","","","","","","The <code>application/x-www-form-urlencoded</code> byte serializer.","Remove any existing name/value pair.","","","Set the character encoding to be used for names and …","Serialize and append a number of name/value pairs.","","If this serializer was constructed with a string, take …","","Create a new <code>application/x-www-form-urlencoded</code> serializer …","","","","","","","","","","","","Return a new iterator that yields pairs of <code>String</code> instead …","Create a new <code>application/x-www-form-urlencoded</code> serializer …","","","","Convert a byte string in the …","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,0,0,2,1,3,2,4,5,3,2,4,5,0,2,4,4,2,2,1,2,5,2,3,2,4,5,3,2,4,5,3,4,5,4,2,3,4,5,0,5,4,3,2,4,5,3,2,4,5,3,2,4,5],"f":[null,null,null,null,null,null,null,[[["str",15]]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["byteserialize",3]],[[]],[[],["parse",3]],[[]],[[["encodingoverride",6]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["parseintoowned",3]],[[]],[[],["option",4]],[[],["option",4]],[[],[["str",15],["option",4]]],[[],["parse",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[8,"Target"],[3,"Serializer"],[3,"ParseIntoOwned"],[3,"Parse"],[3,"ByteSerialize"]]},\
"hdrhist":{"doc":"<code>hdrhist</code> is a small footprint hdr histogram.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["HDRHist","add_value","borrow","borrow_mut","ccdf","ccdf_lower_bound","ccdf_upper_bound","clone","clone_into","combined","from","into","new","quantiles","summary","summary_string","to_owned","try_from","try_into","type_id"],"q":["hdrhist","","","","","","","","","","","","","","","","","","",""],"d":["An hdr histogram that collects <code>u64</code> sample with 5 bit …","Add a sample to the histogram.","","","Output the complementary cumulative distribution function …","Outputs an upper bound of the complementary cumulative …","Outputs an upper bound of the complementary cumulative …","","","Combine this histogram with another. This doesn’t …","","","Construct an empty hdr histogram.","Output estimated quantiles as (quantile, lower_bound, …","Output a summary of estimated quantiles","Output a text summary of estimated quantiles","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[],["hdrhist",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"HDRHist"]]},\
"hello_world":{"doc":"","t":[5],"n":["main"],"q":["hello_world"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hermit_abi":{"doc":"<code>hermit-abi</code> is small interface to call functions from the …","t":[12,12,17,17,17,3,4,13,13,3,13,13,3,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,6,13,13,4,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,5,5,5,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["0","0","CLOCK_MONOTONIC","CLOCK_REALTIME","HIGH_PRIO","Handle","IpAddress","Ipv4","Ipv4","Ipv4Address","Ipv6","Ipv6","Ipv6Address","LOW_PRIO","NORMAL_PRIO","NO_PRIORITIES","NSEC_PER_SEC","O_APPEND","O_CREAT","O_EXCL","O_RDONLY","O_RDWR","O_TRUNC","O_WRONLY","Priority","RAND_MAX","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","Tid","Unspecified","Unspecified","Version","abort","block_current_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock_gettime","clone","clone","clone","clone","clone","clone","clone","close","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","eq","eq","eq","eq","eq","eq","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_priority","get_processor_count","getpid","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","isatty","join","ne","ne","ne","ne","ne","network_init","notify","open","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rand","read","secure_rand32","secure_rand64","sem_destroy","sem_init","sem_post","sem_timedwait","sem_trywait","spawn","spawn2","srand","tcplistener","tcpstream","timespec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlink","usleep","wakeup_task","write","yield_now","accept","close","connect","get_read_timeout","get_tll","get_write_timeout","nodelay","peek","peer_addr","read","set_nodelay","set_nonblocking","set_read_timeout","set_tll","set_write_timeout","shutdown","write"],"q":["hermit_abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit_abi::tcplistener","hermit_abi::tcpstream","","","","","","","","","","","","","","",""],"d":["","","","","","A handle, identifying a socket","An internetworking address.","","An IPv4 address.","A four-octet IPv4 address.","","An IPv6 address.","A sixteen-octet IPv6 address.","","","Maximum number of priorities","","","","","","","","","Priority of a thread","The largest number <code>rand</code> will return","","","","A thread handle type","","An unspecified address. May be used as a placeholder for …","Internet protocol version.","cause abnormal termination","Add current task to the queue of blocked tasl. After …","","","","","","","","","","","","","","","get current time","","","","","","","","close a file descriptor","","","","","","","","","","","","","","","","cause normal termination and return <code>arg</code> to the host system","","","","","","","","","","","","","","","","Determine the priority of the current thread","determines the number of activated processors","Determines the id of the current thread","","","","","","","","","","","","","","returns true if file descriptor <code>fd</code> is a tty","join with a terminated thread","","","","","","intialize the network stack","","open and possibly create a file","","","","","","","The function computes a sequence of pseudo-random integers…","read from a file descriptor","Create a cryptographicly secure 32bit random number with …","Create a cryptographicly secure 64bit random number with …","sem_destroy() frees the unnamed semaphore at the address …","sem_init() initializes the unnamed semaphore at the …","sem_post() increments the semaphore pointed to by <code>sem</code>. If …","decrement a semaphore","try to decrement a semaphore","spawn a new thread","spawn a new thread with user-specified stack size","The function sets its argument as the seed for a new …","<code>tcplistener</code> provide an interface to establish tcp socket …","<code>tcpstream</code> provide an interface to establish tcp socket …","<code>timespec</code> is used by <code>clock_gettime</code> to retrieve the current …","","","","","","","","","","","","","","","nanoseconds","seconds","","","","","","","","delete the file it refers to <code>name</code>","suspend execution for microsecond intervals","Wakeup task with the thread id <code>tid</code>","write to a file descriptor","yield the processor","Wait for connection at specified address.","Close a TCP connection","Opens a TCP connection to a remote host.","","","","","","","","","","","","","",""],"i":[1,2,0,0,0,0,0,3,4,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,0,5,6,7,3,1,2,4,5,6,7,3,1,2,4,0,5,6,7,3,1,2,4,0,5,6,3,1,2,4,6,1,2,5,6,3,1,2,4,0,5,6,7,3,1,2,4,5,5,6,7,3,1,2,4,0,0,0,6,3,1,2,4,5,5,6,7,3,1,2,4,0,0,5,6,1,2,4,0,0,0,5,6,3,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,3,1,2,4,5,6,7,3,1,2,4,7,7,5,6,7,3,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["i32",15]],[[],["priority",3]],[[],["handle",3]],[[],["timespec",3]],[[],["version",4]],[[],["ipv4address",3]],[[],["ipv6address",3]],[[],["ipaddress",4]],[[["i32",15]],["i32",15]],[[["priority",3]],["ordering",4]],[[["handle",3]],["ordering",4]],[[["version",4]],["ordering",4]],[[["ipv4address",3]],["ordering",4]],[[["ipv6address",3]],["ordering",4]],[[["ipaddress",4]],["ordering",4]],[[],["handle",3]],[[],["ipv4address",3]],[[],["ipv6address",3]],[[["priority",3]],["bool",15]],[[["handle",3]],["bool",15]],[[["version",4]],["bool",15]],[[["ipv4address",3]],["bool",15]],[[["ipv6address",3]],["bool",15]],[[["ipaddress",4]],["bool",15]],[[["i32",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["priority",3]],[[],["usize",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_int",6]],["bool",15]],[[["tid",6]],["i32",15]],[[["priority",3]],["bool",15]],[[["handle",3]],["bool",15]],[[["ipv4address",3]],["bool",15]],[[["ipv6address",3]],["bool",15]],[[["ipaddress",4]],["bool",15]],[[],["i32",15]],[[["usize",15],["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["priority",3]],[["option",4],["ordering",4]]],[[["handle",3]],[["option",4],["ordering",4]]],[[["version",4]],[["option",4],["ordering",4]]],[[["ipv4address",3]],[["option",4],["ordering",4]]],[[["ipv6address",3]],[["option",4],["ordering",4]]],[[["ipaddress",4]],[["option",4],["ordering",4]]],[[],["u32",15]],[[["usize",15],["i32",15]],["isize",15]],[[],[["option",4],["u32",15]]],[[],[["u64",15],["option",4]]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[["u8",15],["isize",15],["usize",15]],["i32",15]],[[["isize",15],["usize",15],["u8",15]],["tid",6]],[[["u32",15]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["i32",15]],[[["u64",15]]],[[["tid",6]]],[[["usize",15],["i32",15]],["isize",15]],[[]],[[["u16",15]],["result",4]],[[["handle",3]],["result",4]],[[["option",4],["u64",15],["u16",15]],[["handle",3],["result",4]]],[[["handle",3]],[["result",4],["option",4]]],[[["handle",3]],[["u32",15],["result",4]]],[[["handle",3]],[["result",4],["option",4]]],[[["handle",3]],[["result",4],["bool",15]]],[[["handle",3]],[["result",4],["usize",15]]],[[["handle",3]],["result",4]],[[["handle",3]],[["result",4],["usize",15]]],[[["handle",3],["bool",15]],["result",4]],[[["handle",3],["bool",15]],["result",4]],[[["handle",3],["u64",15],["option",4]],["result",4]],[[["handle",3],["u32",15]],["result",4]],[[["handle",3],["u64",15],["option",4]],["result",4]],[[["handle",3],["i32",15]],["result",4]],[[["handle",3]],[["result",4],["usize",15]]]],"p":[[3,"Ipv4Address"],[3,"Ipv6Address"],[4,"Version"],[4,"IpAddress"],[3,"Priority"],[3,"Handle"],[3,"timespec"]]},\
"hermit_sys":{"doc":"","t":[5],"n":["sys_network_init"],"q":["hermit_sys"],"d":[""],"i":[0],"f":[[[],["i32",15]]],"p":[]},\
"httpd":{"doc":"","t":[5],"n":["main"],"q":["httpd"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"idna":{"doc":"This Rust crate implements IDNA per the WHATWG URL …","t":[3,3,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5],"n":["Config","Errors","borrow","borrow","borrow_mut","borrow_mut","check_hyphens","clone","clone_into","default","domain_to_ascii","domain_to_ascii_strict","domain_to_unicode","fmt","from","from","into","into","punycode","to_ascii","to_owned","to_unicode","transitional_processing","try_from","try_from","try_into","try_into","type_id","type_id","use_std3_ascii_rules","verify_dns_length","decode","decode_to_string","encode","encode_str"],"q":["idna","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","idna::punycode","","",""],"d":["","Errors recorded during UTS #46 processing.","","","","","","","","","The domain to ASCII algorithm.","The domain to ASCII algorithm, with the <code>beStrict</code> flag set.","The domain to Unicode algorithm.","","","","","","Punycode (RFC 3492) implementation.","http://www.unicode.org/reports/tr46/#ToASCII","","http://www.unicode.org/reports/tr46/#ToUnicode","","","","","","","","","","Convert Punycode to Unicode.","Convert Punycode to an Unicode <code>String</code>.","Convert Unicode to Punycode.","Convert an Unicode <code>str</code> to Punycode."],"i":[0,0,1,2,1,2,1,1,1,1,0,0,0,2,1,2,1,2,0,1,1,1,1,1,2,1,2,1,2,1,1,0,0,0,0],"f":[null,null,[[]],[[]],[[]],[[]],[[["bool",15]]],[[],["config",3]],[[]],[[]],[[["str",15]],[["string",3],["result",4],["errors",3]]],[[["str",15]],[["string",3],["result",4],["errors",3]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["str",15]],[["string",3],["result",4],["errors",3]]],[[]],[[["str",15]]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]]],[[["bool",15]]],[[["str",15]],[["vec",3],["option",4]]],[[["str",15]],[["string",3],["option",4]]],[[],[["string",3],["option",4]]],[[["str",15]],[["string",3],["option",4]]]],"p":[[3,"Config"],[3,"Errors"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[]],null],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":[11,11,6,6,6,6,6,6,6,6,6,6,6,6,6,4,11,11,6,6,6,6,6,11,6,6,6,6,6,6,11,11,11,6,6,6,6,6,6,6,6,6],"n":["borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","fmt","from","int16_t","int32_t","int64_t","int8_t","intmax_t","into","intptr_t","off_t","ptrdiff_t","regoff_t","size_t","ssize_t","try_from","try_into","type_id","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","wchar_t","wctype_t","wint_t"],"q":["libc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a [pointer].","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],"f":[[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],[["result",4],["error",3]]],[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null],"p":[[4,"c_void"]]},\
"libm":{"doc":"libm in pure Rust","t":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["acos","acosf","acosh","acoshf","asin","asinf","asinh","asinhf","atan","atan2","atan2f","atanf","atanh","atanhf","cbrt","cbrtf","ceil","ceilf","copysign","copysignf","cos","cosf","cosh","coshf","erf","erfc","erfcf","erff","exp","exp10","exp10f","exp2","exp2f","expf","expm1","expm1f","fabs","fabsf","fdim","fdimf","floor","floorf","fma","fmaf","fmax","fmaxf","fmin","fminf","fmod","fmodf","frexp","frexpf","hypot","hypotf","ilogb","ilogbf","j0","j0f","j1","j1f","jn","jnf","ldexp","ldexpf","lgamma","lgamma_r","lgammaf","lgammaf_r","log","log10","log10f","log1p","log1pf","log2","log2f","logf","modf","modff","nextafter","nextafterf","pow","powf","remainder","remainderf","remquo","remquof","round","roundf","scalbn","scalbnf","sin","sincos","sincosf","sinf","sinh","sinhf","sqrt","sqrtf","tan","tanf","tanh","tanhf","tgamma","tgammaf","trunc","truncf","y0","y0f","y1","y1f","yn","ynf"],"q":["libm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Arccosine (f64)","Arccosine (f32)","Inverse hyperbolic cosine (f64)","Inverse hyperbolic cosine (f32)","Arcsine (f64)","Arcsine (f32)","Inverse hyperbolic sine (f64)","Inverse hyperbolic sine (f32)","Arctangent (f64)","Arctangent of y/x (f64)","Arctangent of y/x (f32)","Arctangent (f32)","Inverse hyperbolic tangent (f64)","Inverse hyperbolic tangent (f32)","Computes the cube root of the argument.","Cube root (f32)","Ceil (f64)","Ceil (f32)","Sign of Y, magnitude of X (f64)","Sign of Y, magnitude of X (f32)","","","Hyperbolic cosine (f64)","Hyperbolic cosine (f64)","Error function (f64)","Error function (f64)","Error function (f32)","Error function (f32)","Exponential, base <em>e</em> (f64)","","","Exponential, base 2 (f64)","Exponential, base 2 (f32)","Exponential, base <em>e</em> (f32)","Exponential, base <em>e</em>, of x-1 (f64)","Exponential, base <em>e</em>, of x-1 (f32)","Absolute value (magnitude) (f64) Calculates the absolute …","Absolute value (magnitude) (f32) Calculates the absolute …","Positive difference (f64)","Positive difference (f32)","Floor (f64)","Floor (f32)","Floating multiply add (f64)","Floating multiply add (f32)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]]],[[["f32",15]]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["i32",15]],[[["f32",15]],["i32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15],["i32",15]],["f64",15]],[[["i32",15],["f32",15]],["f32",15]],[[["f64",15],["i32",15]],["f64",15]],[[["i32",15],["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f64",15]]],[[["f32",15]],["f32",15]],[[["f32",15]]],[[["f64",15]],["f64",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[["f64",15]]],[[["f32",15]]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]]],[[["f32",15]]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15],["i32",15]],["f64",15]],[[["i32",15],["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f64",15]]],[[["f32",15]]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15]],["f64",15]],[[["f32",15]],["f32",15]],[[["f64",15],["i32",15]],["f64",15]],[[["i32",15],["f32",15]],["f32",15]]],"p":[]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of …","An enum representing the available verbosity level …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>\'static</code> string.","Set <code>file</code> to a <code>\'static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the info level.","","","","","","","","","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>\'static</code> string.","Set <code>module_path</code> to a <code>\'static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&\'static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["arguments",3]],[[["arguments",3]],["recordbuilder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["record",3]],[[],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],null,[[["metadata",3]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],null,[[],[["option",4],["str",15]]],[[["option",4],["str",15]],["recordbuilder",3]],[[],[["str",15],["option",4]]],[[["str",15],["option",4]],["recordbuilder",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["level",4]]],[[["str",15]],[["levelfilter",4],["result",4]]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[],["level",4]],[[["level",4]],["recordbuilder",3]],[[],["level",4]],[[["level",4]],["metadatabuilder",3]],[[],[["option",4],["u32",15]]],[[["option",4],["u32",15]],["recordbuilder",3]],[[["record",3]]],null,null,[[],["log",8]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[],["metadata",3]],[[["metadata",3]],["recordbuilder",3]],[[],[["option",4],["str",15]]],[[["option",4],["str",15]],["recordbuilder",3]],[[],[["str",15],["option",4]]],[[["str",15],["option",4]],["recordbuilder",3]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["level",4]],[["option",4],["ordering",4]]],[[["metadata",3]],[["option",4],["ordering",4]]],[[["metadatabuilder",3]],[["option",4],["ordering",4]]],[[["log",8]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],[[["levelfilter",4]]],[[],["str",15]],[[["str",15]],["recordbuilder",3]],[[],["str",15]],[[["str",15]],["metadatabuilder",3]],[[],[["level",4],["option",4]]],[[],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"managed":{"doc":"A library that provides a way to logically own objects, …","t":[13,13,13,13,13,4,4,4,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Borrowed","Borrowed","Borrowed","Borrowed","Borrowed","Managed","ManagedMap","ManagedMapIter","ManagedMapIterMut","ManagedSlice","Owned","Owned","Owned","Owned","Owned","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","deref","deref","deref_mut","deref_mut","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","insert","into","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","len","next","next","range","remove","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["managed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","A managed object.","A managed map.","","","A managed slice.","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ManagedMap contains no elements?","","","Returns the number of elements in the ManagedMap.","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,3,1,2,1,2,1,2,3,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,4,5,3,3,3,1,2,3,4,5,4,5,3,3,3,3,4,5,3,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["box",3]]],[[]],[[["vec",3]]],[[]],[[]],[[]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["btreemap",3]]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],[["result",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",4]],[[],["itermut",4]],[[],["usize",15]],[[],["option",4]],[[],["option",4]],[[],["range",3]],[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Managed"],[4,"ManagedSlice"],[4,"ManagedMap"],[4,"ManagedMapIter"],[4,"ManagedMapIterMut"]]},\
"matches":{"doc":"","t":[14,14,14],"n":["assert_matches","debug_assert_matches","matches"],"q":["matches","",""],"d":["Assert that an expression matches a refutable pattern.","Assert that an expression matches a refutable pattern …","Check if an expression matches a refutable pattern."],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"matrix_multiplcation":{"doc":"","t":[5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,5,5,5,5,17,17,17,3,11,11,11,11,11,11,11,11,11,5,5,5,5,12,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,12],"n":["main","test_result","tests","arithmetic","create_file","hello","laplace","laplace","matmul","matrix_setup","pi_parallel","pi_sequential","print_argv","print_env","read_file","thread_creation","threading","compute","get_residual","iteration","LINEAR_CHUNK","MULT_CHUNK","ROW_SIZE","SplayedBitsCounter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_iter","join4","join8","matmul_strassen","matmulz","max","new","next","quarter_chunks","quarter_chunks_mut","raw_buffer","rcopy","rmatsub","rmatsum","rtmp_sub","rtmp_sum","seq_matmul","seq_matmulz","strassen_add2_mul","strassen_add_mul","strassen_sub_add_mul","strassen_sub_mul","strassen_sum","strassen_sum_sub","test_matmul_strassen","timed_matmul","try_from","try_into","type_id","value"],"q":["matrix_multiplcation","","","matrix_multiplcation::tests","","","","","","","","","","","","","","matrix_multiplcation::tests::laplace","","","matrix_multiplcation::tests::matmul","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],"f":[[[]],[[["result",4]],["str",15]],null,[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],null,[[["usize",15]],["result",4]],null,[[["usize",15]],[["vec",3],["vec",3]]],[[["u64",15]],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[["vec",3],["usize",15],["vec",3]]],[[["usize",15]],["f64",15]],[[["usize",15]]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[["usize",15]],[["vec",3],["f32",15]]],[[]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],["result",4]],[[["fnonce",8],["usize",15],["str",15]],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"SplayedBitsCounter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","t":[14,14,14,14,14],"n":["offset_of","offset_of_tuple","raw_field","raw_field_tuple","span_of"],"q":["memoffset","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0],"f":[null,null,null,null,null],"p":[]},\
"micro_benchmarks":{"doc":"","t":[0,5,17,5,5,5,5,5,5,5,5,5,5,5,5],"n":["benches","main","NR_RUNS","bench_mem","bench_sched_one_thread","bench_sched_two_threads","bench_syscall","get_timestamp","memcpy","memcpy_builtin","memcpy_rust","memset","memset_builtin","memset_rust","sys_getpid"],"q":["micro_benchmarks","","micro_benchmarks::benches","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["u64",15]],null,[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],null],"p":[]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":[5,5],"n":["get","get_physical"],"q":["num_cpus",""],"d":["Returns the number of available CPUs of the current …","Returns the number of physical cores of the current …"],"i":[0,0],"f":[[[],["usize",15]],[[],["usize",15]]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,11,12,12],"n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","ne","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","Returns the truncated principal cube root of an integer …","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","Calculates the Greatest Common Divisor (GCD) of the …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer –…","Returns the truncated principal <code>n</code>th root of an integer –…","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,2,3,2,3,0,4,4,3,3,0,5,0,5,0,5,0,5,5,3,5,5,3,2,3,0,5,3,0,5,2,3,2,5,5,5,0,5,0,5,0,3,2,2,5,0,4,5,0,4,4,3,2,3,2,3,2,3,3,3],"f":[null,null,null,null,null,[[["average",8]],["average",8]],[[]],[[["average",8]],["average",8]],[[]],[[["clone",8],["integer",8]],[["clone",8],["integer",8]]],[[]],[[]],[[]],[[]],[[["roots",8]],["roots",8]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[["integer",8]],["integer",8]],[[]],[[["integer",8]],["integer",8]],[[]],[[["integer",8]]],[[]],[[["integer",8]]],[[]],[[],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["extendedgcd",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["integer",8]],["integer",8]],[[]],null,[[["integer",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["integer",8]],["integer",8]],[[]],[[["integer",8]],["integer",8]],[[]],[[],[["clone",8],["integer",8]]],[[["extendedgcd",3]],["bool",15]],[[],["iterbinomial",3]],[[],["option",4]],[[]],[[["u32",15],["roots",8]],["roots",8]],[[["u32",15]]],[[]],[[["roots",8]],["roots",8]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[8,"Average"],[3,"IterBinomial"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[13,4,16,13,8,8,8,8,8,8,3,8,11,11,11,11,0,0,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,0,0,0,0,11,11,11,11,11,11,11,8,10,10,8,8,8,8,10,5,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,10,10,11,10,11,10,10,10,11,10,11,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,11,10,10,10,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,10,11,10,11,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,5,10,5,10,10,10,5,10],"n":["Empty","FloatErrorKind","FromStrRadixErr","Invalid","Num","NumAssign","NumAssignOps","NumAssignRef","NumOps","NumRef","ParseFloatError","RefNum","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","ops","pow","real","sign","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i16","from_i32","from_i64","from_i8","from_isize","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i16","to_i32","to_i64","to_i8","to_isize","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","","The trait for references which implement numeric …","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","","","Convert from a string and radix (typically <code>2..=36</code>).","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If …","Returns the floating point category of the number. If …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns the largest integer less than or equal to a …","Returns the largest integer less than or equal to a …","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have…","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…","Returns the largest integer less than or equal to a …","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[1,0,2,1,0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,0,0,1,3,3,1,3,2,0,0,1,3,3,0,0,0,0,3,1,3,1,3,1,3,0,4,4,0,0,0,0,5,0,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,0,0,0,9,9,9,9,9,9,9,9,9,10,11,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,11,10,10,10,10,10,11,10,11,10,11,10,11,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,11,10,10,11,11,10,11,10,10,11,10,11,10,11,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,11,10,10,11,0,0,12,13,0,12,12,13,0,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,16,17,18,19,20,21,22,0,23,23,0,0,24,24,25,0,0,0,26,27,28,0,0,0,0,29,30,31,29,32,0,0,0,0,0,0,33,34,35,36,37,38,39,0,0,0,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,41,0,41,41,41,0,41],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15],["str",15]],["result",4]],null,null,[[]],[[]],null,null,null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,[[]],[[["numcast",8]],[["numcast",8],["option",4]]],[[["toprimitive",8]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],[["f32",15],["option",4]]],[[],[["option",4],["f64",15]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["isize",15],["option",4]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u32",15]]],[[],[["u64",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["option",4],["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["one",8]],[[]],[[]],[[]],[[],["zero",8]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],null,null,[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],null,null,[[["clone",8],["usize",15],["checkedmul",8],["one",8]],[["option",4],["clone",8],["checkedmul",8],["one",8]]],[[["mul",8],["clone",8],["usize",15],["one",8]],[["mul",8],["clone",8],["one",8]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["signed",8]],["signed",8]],[[]],[[["signed",8]],["signed",8]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[]]],"p":[[4,"FloatErrorKind"],[8,"Num"],[3,"ParseFloatError"],[8,"Bounded"],[8,"AsPrimitive"],[8,"NumCast"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"One"],[8,"Zero"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"],[8,"Signed"]]},\
"percent_encoding":{"doc":"URLs use special chacters to indicate the parts of the …","t":[3,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["AsciiSet","CONTROLS","NON_ALPHANUMERIC","PercentDecode","PercentEncode","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode_utf8","decode_utf8_lossy","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","next","next","percent_decode","percent_decode_str","percent_encode","percent_encode_byte","remove","size_hint","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utf8_percent_encode"],"q":["percent_encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a set of characters or bytes in the ASCII …","The set of 0x00 to 0x1F (C0 controls), and 0x7F (DEL).","Everything that is not an ASCII letter or digit.","The return type of [<code>percent_decode</code>].","The return type of [<code>percent_encode</code>] and […","","","","","","","","","","","","Decode the result of percent-decoding as UTF-8.","Decode the result of percent-decoding as UTF-8, lossily.","","","","","","","","","","","","","Percent-decode the given bytes.","Percent-decode the given string.","Percent-encode the given bytes with the given set.","Return the percent-encoding of the given byte.","","","","","","","","","","","","","","","","Percent-encode the UTF-8 encoding of the given string."],"i":[0,0,0,0,0,1,1,2,3,1,2,3,2,3,2,3,3,3,2,3,1,2,3,1,2,3,2,3,2,3,0,0,0,0,1,2,3,2,3,2,1,2,3,1,2,3,1,2,3,0],"f":[null,null,null,null,null,[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["percentencode",3]],[[],["percentdecode",3]],[[]],[[]],[[],[["utf8error",3],["result",4],["cow",4]]],[[],[["cow",4],["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["option",4],["u8",15]]],[[],["percentdecode",3]],[[["str",15]],["percentdecode",3]],[[["asciiset",3]],["percentencode",3]],[[["u8",15]],["str",15]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asciiset",3],["str",15]],["percentencode",3]]],"p":[[3,"AsciiSet"],[3,"PercentEncode"],[3,"PercentDecode"]]},\
"pi_sequential":{"doc":"","t":[5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,5,5,5,5,17,17,17,3,11,11,11,11,11,11,11,11,11,5,5,5,5,12,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,12],"n":["main","test_result","tests","arithmetic","create_file","hello","laplace","laplace","matmul","matrix_setup","pi_parallel","pi_sequential","print_argv","print_env","read_file","thread_creation","threading","compute","get_residual","iteration","LINEAR_CHUNK","MULT_CHUNK","ROW_SIZE","SplayedBitsCounter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_iter","join4","join8","matmul_strassen","matmulz","max","new","next","quarter_chunks","quarter_chunks_mut","raw_buffer","rcopy","rmatsub","rmatsum","rtmp_sub","rtmp_sum","seq_matmul","seq_matmulz","strassen_add2_mul","strassen_add_mul","strassen_sub_add_mul","strassen_sub_mul","strassen_sum","strassen_sum_sub","test_matmul_strassen","timed_matmul","try_from","try_into","type_id","value"],"q":["pi_sequential","","","pi_sequential::tests","","","","","","","","","","","","","","pi_sequential::tests::laplace","","","pi_sequential::tests::matmul","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],"f":[[[]],[[["result",4]],["str",15]],null,[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],null,[[["usize",15]],["result",4]],null,[[["usize",15]],[["vec",3],["vec",3]]],[[["u64",15]],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[["vec",3],["usize",15],["vec",3]]],[[["usize",15]],["f64",15]],[[["usize",15]]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[["usize",15]],[["vec",3],["f32",15]]],[[]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],["result",4]],[[["fnonce",8],["usize",15],["str",15]],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"SplayedBitsCounter"]]},\
"raw_cpuid":{"doc":"","tn":["CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","DirectCacheAccessInfo","DirectMapped","Disabled","EightWay","Epc","EpcSection","ExtendedFeatures","ExtendedFunctionInfo","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FourWay","FullyAssiciative","General","HyperV","Hypervisor","HypervisorInfo","Instruction","InstructionTLB","Invalid","KVM","L2Associativity","L2CatInfo","L3CatInfo","L3MonitoringInfo","MemBwAllocationInfo","MemoryEncryptionInfo","MonitorMwaitInfo","Null","Null","PerformanceMonitoringInfo","Prefetch","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SixteenWay","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","TLB","ThermalPowerInfo","TopologyType","TscInfo","TwoWay","Unified","UnifiedTLB","Unknown","Unknown","Unknown","VMware","VendorInfo","Xen","apic_frequency","as_string","as_string","associativity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_index","bus_frequency","c_bit_position","cache_level","cache_line_size","cache_size","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpuid","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","denominator","desc","deterministic_address_translation_info","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_cache_info","get_cache_parameters","get_dca_cap_value","get_direct_cache_access_info","get_extended_feature_info","get_extended_function_info","get_extended_state_info","get_extended_topology_info","get_feature_info","get_hypervisor_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_4k_entries","has_4mb_entries","has_64bit_mode","has_acpi","has_adx","has_aesni","has_any_thread_deprecation","has_apic","has_arat","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_bmi1","has_bmi2","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpl","has_dca","has_de","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_f16c","has_fdp","has_flexible_hwp","has_fma","has_fpu","has_fpu_cs_ds_deprecated","has_fsgsbase","has_fxsave_fxstor","has_hdc","has_hle","has_htt","has_hw_coord_feedback","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ignore_idle_processor_hwp_request","has_invariant_tsc","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lzcnt","has_mca","has_mce","has_memory_bandwidth_allocation","has_mmx","has_monitor_mwait","has_movbe","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_occupancy_monitoring","has_ospke","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_prefetchw","has_prefetchwt1","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdrand","has_rdseed","has_rdseet","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_smap","has_sme","has_smep","has_smx","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_ssse3","has_syscall_sysret","has_sysenter_sysexit","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_turbo_boost","has_turbo_boost3","has_umip","has_vme","has_vmx","has_x2apic","has_xgetbv","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","l2_associativity","l2_cat","l3_cat","l3_monitoring","largest_monitor_line","level","level_number","level_type","linear_address_bits","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","ne","new","next","next","next","next","next","next","next","nominal_frequency","num","number_of_counters","numerator","offset","partitioning","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","processor_base_frequency","processor_brand_string","processor_max_frequency","processors","rmid_range","secs_attributes","serial","serial_lower","serial_middle","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count"],"q":["raw_cpuidraw_cpuid::native_cpuid"],"d":["This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Used to iterate over cache information contained in cpuid …","What type of cache are we dealing with?","","","","","Main type used to query for information about the CPU we…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","","","","","","Iterates over the system topology in order to retrieve …","Gives detailed information about the current level in the …","","","","","","Identifies the different Hypervisor products.","Information about Hypervisor …","Instruction cache","","","","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","","","Processor Frequency Information","","","","","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …","Iterator over the SGX sub-leafs (ECX >= 2).","","","","","","","What type of core we have at this level in the topology …","Time Stamp Counter and Nominal Core Crystal Clock …","","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to …","","","","","","","(Virtual) Bus (local apic timer) frequency in kHz.","Return vendor identification as human readable string.","","Ways of associativity (Bits 31-22)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Brand Index","Bus (Reference) Frequency (in MHz).","","Translation cache level (starts at 1)","Cache Line size in bytes","Cache size in 1K units","Cache Type","Translation cache type field.","Length of the capacity bit mask using minus-one notation.","Length of the capacity bit mask using minus-one notation.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Macro which queries cpuid directly.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature and Feature Bits.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","Version Information: Family","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query basic information about caches. This will just …","Retrieve more elaborate information about caches (as …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …","Direct cache access info.","Find out about more features supported by this CPU.","Extended functionality of CPU described here (including …","Information for saving/restoring extended register state.","Information about topology (how many cores and what kind …","Query a set of features that are available on this CPU.","","","Information about how monitor/mwait works on this CPU.","Info about performance monitoring (how many counters …","Processor Frequency Information.","Retrieve serial number of processor.","Intel Processor Trace Enumeration Information.","","Quality of service enforcement information.","Quality of service informations.","","","","","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information.","","","Return information about vendor. This is typically a …","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","Thermal Monitor and Software Controlled Clock Facilities. …","Supports ADX.","A value of 1 indicates that the processor supports the …","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","BMI1","BMI2","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…","If true, Indicates support of Configurable PSB and …","CPL Qualified Debug Store. A value of 1 indicates the …","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","A value of 1 indicates that processor supports 16-bit …","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Flexible HWP is supported if set.","A value of 1 indicates the processor supports FMA …","Floating Point Unit On-Chip. The processor contains an …","Deprecates FPU CS and FPU DS values if 1.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","Max APIC IDs reserved field is Valid. A value of 0 for …","Hardware Coordination Feedback Capability (Presence of …","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Ignoring Idle Logical Processor HWP request is supported …","Is Invariant TSC available?","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Reports whether the response of the delay values is …","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Machine Check Exception. Exception 18 is defined for …","Supports Memory Bandwidth Allocation.","Intel MMX Technology. The processor supports the Intel …","MONITOR/MWAIT. A value of 1 indicates the processor …","A value of 1 indicates that the processor supports MOVBE …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports RDSEED (deprecated alias).","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","A value of 1 indicates the presence of the Supplemental …","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Thermal Monitor. The processor implements the thermal …","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Intel Turbo Boost Technology Available (see description …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","Virtual Machine Extensions. A value of 1 indicates that …","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area …","Core cycle event not available if 1.","Fully Associative cache","Fully associative structure","True if the bit n (corresponding to the sub-leaf index) …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels >= 2.","Iterator over SGX sub-leafs.","L2 Associativity field","L2 Cache Allocation Information.","L3 Cache Allocation Information.","L3 Cache Monitoring.","Largest monitor-line size in bytes (default is processor…","Cache Level (starts at 1)","Level number.","","#Linear Address Bits","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","","Reports the maximum MBA throttling value supported for …","Maximum number of addressable IDs for logical processors …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","","Bit vector of supported extended SGX features.","Version Information: Model","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","Return new CPUID struct.","Iterate over all cache information.","Iterate over all caches for this CPU. Note: cpuid is …","","","","Iterate over each sub-leaf with an  address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components …","Partitioning (0: Soft partitioning between the logical …","#Physical Address Bits","","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Processor Base Frequency (in MHz).","Retrieve processor brand string.","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","","Bits 00-31 of 96 bit processor serial number. (Available …","Bits 32-63 of 96 bit processor serial number. (Available …","Number of Sets (Bits 31-00)","Number of Sets.","Number of bits to shift right on x2APIC ID to get a …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of C0 sub C-states supported using MWAIT (Bits 03 …","Number of C1 sub C-states supported using MWAIT (Bits 07 …","Number of C2 sub C-states supported using MWAIT (Bits 11 …","Number of C3 sub C-states supported using MWAIT (Bits 15 …","Number of C4 sub C-states supported using MWAIT (Bits 19 …","Number of C5 sub C-states supported using MWAIT (Bits 23 …","Number of C6 sub C-states supported using MWAIT (Bits 27 …","Number of C7 sub C-states supported using MWAIT (Bits 31 …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TSC frequency in kHz.","“TSC frequency” = “core crystal clock frequency” …","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …",""],"i":[0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,3,4,0,5,5,5,6,0,0,0,0,0,0,0,0,0,5,5,1,7,0,0,3,4,2,7,0,0,0,0,0,0,0,3,4,0,1,0,0,0,0,0,3,2,1,0,0,0,5,0,0,0,1,0,0,0,5,3,4,4,7,5,7,0,7,8,9,10,11,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,17,40,46,42,45,45,11,42,32,33,17,13,1,15,11,11,38,30,23,0,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,45,5,46,39,15,12,20,13,13,23,13,13,3,2,7,5,17,17,45,19,17,23,23,8,12,13,9,9,14,1,15,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,10,7,45,5,46,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,12,12,22,12,12,12,12,12,12,12,12,12,12,12,12,12,43,12,12,12,43,12,43,12,12,43,43,12,42,45,42,42,42,45,17,21,17,23,17,20,17,21,21,21,21,21,21,21,21,21,21,21,17,21,21,17,17,17,17,32,11,38,17,17,17,17,17,20,20,17,35,35,20,45,17,21,20,17,17,21,21,17,20,21,17,20,20,20,20,20,20,20,20,20,17,20,45,21,38,31,31,29,45,34,38,30,45,17,17,31,17,17,17,21,17,38,17,30,21,17,17,46,17,17,17,17,17,17,21,20,17,38,45,21,21,17,17,17,20,38,21,17,21,21,21,21,45,21,38,21,46,46,21,35,35,21,21,38,21,46,21,17,17,17,17,17,17,17,17,45,17,17,17,38,38,30,38,17,21,17,20,20,21,17,17,17,26,17,26,26,26,32,33,34,26,26,8,17,19,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,14,18,24,27,36,41,44,23,23,23,28,23,11,42,28,28,11,23,23,23,11,11,32,33,26,35,45,31,31,29,19,11,25,25,45,21,42,11,11,35,35,46,34,17,30,31,46,35,17,0,7,12,14,18,24,27,36,41,44,39,15,23,39,28,42,45,46,37,11,40,45,40,25,29,35,16,16,16,11,42,25,28,37,19,17,28,19,19,19,19,19,19,19,19,38,38,38,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,8,39,15,8,12,13,9,14,1,15,16,17,18,11,3,19,20,21,22,23,24,25,2,26,27,28,29,30,31,32,33,34,35,36,6,37,38,39,40,41,42,4,43,44,10,7,45,5,46,23,42,25,26,26,26,26,26,26,26,26,26,26,26,26,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["u32",15]]],[[],["str",15]],[[],["str",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],[["u8",15],["option",4]]],[[],[["option",4],["u16",15]]],[[],["cachetype",4]],[[],["dattype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuidresult",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparameter",3]],[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],null,[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["vendorinfo",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["processorserial",3]],[[],["featureinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["cachetype",4]],[[],["monitormwaitinfo",3]],[[],["thermalpowerinfo",3]],[[],["extendedfeatures",3]],[[],["directcacheaccessinfo",3]],[[],["performancemonitoringinfo",3]],[[],["extendedtopologyiter",3]],[[],["extendedtopologylevel",3]],[[],["topologytype",4]],[[],["extendedstateinfo",3]],[[],["extendedstateiter",3]],[[],["extendedstate",3]],[[],["rdtmonitoringinfo",3]],[[],["l3monitoringinfo",3]],[[],["rdtallocationinfo",3]],[[],["l3catinfo",3]],[[],["l2catinfo",3]],[[],["membwallocationinfo",3]],[[],["sgxinfo",3]],[[],["sgxsectioniter",3]],[[],["sgxsectioninfo",4]],[[],["epcsection",3]],[[],["processortraceinfo",3]],[[],["tscinfo",3]],[[],["processorfrequencyinfo",3]],[[],["datiter",3]],[[],["datinfo",3]],[[],["dattype",4]],[[],["socvendorinfo",3]],[[],["socvendorattributesiter",3]],[[],["socvendorbrand",3]],[[],["extendedfunctioninfo",3]],[[],["l2associativity",4]],[[],["memoryencryptioninfo",3]],[[],["u32",15]],[[],["str",15]],[[],[["option",4],["datiter",3]]],[[],["u8",15]],null,null,[[],["u8",15]],null,null,[[["cachetype",4]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[["l2associativity",4]],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],[["option",4],["u32",15]]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["cacheinfoiter",3],["option",4]]],[[],[["cacheparametersiter",3],["option",4]]],[[],["u32",15]],[[],[["directcacheaccessinfo",3],["option",4]]],[[],[["option",4],["extendedfeatures",3]]],[[],[["extendedfunctioninfo",3],["option",4]]],[[],[["extendedstateinfo",3],["option",4]]],[[],[["extendedtopologyiter",3],["option",4]]],[[],[["option",4],["featureinfo",3]]],[[],[["option",4],["hypervisorinfo",3]]],[[],[["option",4],["memoryencryptioninfo",3]]],[[],[["option",4],["monitormwaitinfo",3]]],[[],[["option",4],["performancemonitoringinfo",3]]],[[],[["option",4],["processorfrequencyinfo",3]]],[[],[["processorserial",3],["option",4]]],[[],[["processortraceinfo",3],["option",4]]],[[],["u32",15]],[[],[["option",4],["rdtallocationinfo",3]]],[[],[["option",4],["rdtmonitoringinfo",3]]],[[],[["option",4],["sgxinfo",3]]],[[],["u16",15]],[[],[["option",4],["socvendorinfo",3]]],[[],["u32",15]],[[],[["option",4],["thermalpowerinfo",3]]],[[],[["option",4],["tscinfo",3]]],[[],[["socvendorattributesiter",3],["option",4]]],[[],["socvendorbrand",3]],[[],[["option",4],["vendorinfo",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["hypervisor",4]],[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],[["option",4],["l2associativity",4]]],[[],[["l2catinfo",3],["option",4]]],[[],[["l3catinfo",3],["option",4]]],[[],[["option",4],["l3monitoringinfo",3]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["topologytype",4]],[[],[["u8",15],["option",4]]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u32",15]],[[],[["membwallocationinfo",3],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],null,[[["hypervisor",4]],["bool",15]],[[],["cpuid",3]],[[],[["option",4],["cacheinfo",3]]],[[],[["cacheparameter",3],["option",4]]],[[],[["extendedtopologylevel",3],["option",4]]],[[],[["extendedstate",3],["option",4]]],[[],[["option",4],["sgxsectioninfo",4]]],[[],[["option",4],["datinfo",3]]],[[],[["cpuidresult",3],["option",4]]],[[],["u32",15]],null,[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],[["u8",15],["option",4]]],[[],["u8",15]],[[],["u64",15]],[[],["usize",15]],[[],["u16",15]],[[],[["str",15],["option",4]]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u8",15]],null,[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["u32",15]]],[[],[["u64",15],["option",4]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["cpuidresult",3]]],"p":[[4,"CacheInfoType"],[4,"TopologyType"],[4,"CacheType"],[4,"DatType"],[4,"L2Associativity"],[4,"SgxSectionInfo"],[4,"Hypervisor"],[3,"HypervisorInfo"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"CpuId"],[3,"CpuIdResult"],[3,"CacheInfoIter"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParametersIter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"ExtendedStateIter"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatIter"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorAttributesIter"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","tn":["FnContext","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","build","build_global","build_scoped","collections","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","index","init","init","init","init","init","init","init","install","into","into","into","into","into","into","into","iter","join","join","join_context","migrated","name","new","new","num_threads","option","panic_handler","prelude","range","range_inclusive","result","run","scope","scope","scope_fifo","scope_fifo","slice","source","spawn","spawn","spawn","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","start_handler","str","string","thread_name","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","binary_heap","btree_map","btree_set","hash_map","hash_set","linked_list","vec_deque","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","len","len","len","len","opt_len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","Chain","Chunks","Cloned","Copied","Either","Empty","Enumerate","Filter","FilterMap","FlatMap","FlatMapIter","Flatten","FlattenIter","Fold","FoldWith","FromParallelIterator","IndexedParallelIterator","Inspect","Interleave","InterleaveShortest","Intersperse","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Item","Item","Iter","Iter","Iter","Iter","Iter","IterBridge","Left","Map","MapInit","MapWith","MaxLen","MinLen","MultiZip","Once","PanicFuse","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","Positions","Repeat","RepeatN","Rev","Right","Skip","Split","Take","TryFold","TryFoldWith","Update","WhileSome","Zip","ZipEq","all","all","any","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","collect","collect","collect_into_vec","copied","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","either","either_with","empty","enumerate","eq","eq","expect_left","expect_right","extend","factor_first","factor_second","filter","filter_map","find_any","find_first","find_last","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold_with","for_each","for_each_init","for_each_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_par_iter","ge","gt","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inspect","interleave","interleave_shortest","intersperse","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","is_left","is_right","last","le","left","left_and_then","left_or","left_or_default","left_or_else","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","lt","map","map","map_init","map_left","map_right","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","ne","next","next_back","nth","once","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","panic_fuse","par_bridge","par_drain","par_drain","par_extend","par_extend","par_iter","par_iter_mut","partial_cmp","partial_cmp","partition","partition_map","plumbing","position_any","position_first","position_last","positions","product","reduce","reduce_with","repeat","repeatn","rev","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","skip","split","sum","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_fold","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reduce","try_reduce_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_left","unwrap_right","unzip","unzip_into_vecs","update","while_some","with_max_len","with_min_len","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","zip","zip","zip_eq","Consumer","Folder","Folder","IntoIter","Item","Item","Output","Producer","ProducerCallback","Reducer","Reducer","Result","Result","UnindexedConsumer","UnindexedProducer","bridge","bridge_producer_consumer","bridge_unindexed","callback","complete","consume","consume_iter","fold_with","fold_with","full","full","into_folder","into_iter","max_len","min_len","reduce","split","split_at","split_at","split_off_left","to_reducer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","ParallelBridge","par_bridge","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","len","len","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","Chunks","ChunksExact","ChunksExactMut","ChunksMut","Iter","IterMut","ParallelSlice","ParallelSliceMut","Split","SplitMut","Windows","as_parallel_slice","as_parallel_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_remainder","len","len","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","par_chunks","par_chunks_exact","par_chunks_exact_mut","par_chunks_mut","par_sort","par_sort_by","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split","par_split_mut","par_windows","remainder","remainder","take_remainder","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","Bytes","CharIndices","Chars","EncodeUtf16","Lines","MatchIndices","Matches","ParallelString","Split","SplitTerminator","SplitWhitespace","as_parallel_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","par_bytes","par_char_indices","par_chars","par_encode_utf16","par_lines","par_match_indices","par_matches","par_split","par_split_terminator","par_split_whitespace","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","borrow","borrow_mut","deref","deref_mut","drive_unindexed","drop","drop","fmt","from","init","into","into_par_iter","try_from","try_into","type_id","Drain","IntoIter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_producer","with_producer"],"q":["rayon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections","","","","","","","rayon::collections::binary_heap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::vec_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iterrayon::iter::plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::prelude","","rayon::range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::slicerayon::strrayon::string","","","","","","","","","","","","","","","","rayon::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides the calling context to a closure called by …","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the …","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Creates a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is…","Creates a scoped <code>ThreadPool</code> initialized using this …","Parallel iterator types for standard collections","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread …","Returns true if the current worker thread currently has …","If called from a Rayon worker thread, returns the index …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","","","","","","","","","","","","","","","","Gets the index of this thread in the pool, within …","","","","","","","","Executes <code>op</code> within the threadpool. Any attempts to use …","","","","","","","","Traits for writing parallel programs using an …","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, …","Sets the number of threads to be used in the rayon …","Parallel iterator types for options","Normally, whenever Rayon catches a panic, it tries to …","The rayon prelude imports the various <code>ParallelIterator</code> …","Parallel iterator types for ranges, the type for values …","Parallel iterator types for inclusive ranges, the type …","Parallel iterator types for results","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","Parallel iterator types for slices","","Fires off a task into the Rayon threadpool in the “…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This …","Fires off a task into the Rayon threadpool in the “…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Sets a callback to be invoked on thread start.","Parallel iterator types for strings","This module contains the parallel iterator types for …","Sets a closure which takes a thread index and returns the …","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator types for vectors (<code>Vec<T></code>)","This module contains the parallel iterator types for heaps…","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","Draining parallel iterator that moves out of a binary …","Parallel iterator over a binary heap","Parallel iterator over an immutable reference to a binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree map","Parallel iterator over an immutable reference to a B-Tree …","Parallel iterator over a mutable reference to a B-Tree map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree set","Parallel iterator over an immutable reference to a B-Tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves out of a hash map, …","Parallel iterator over a hash map","Parallel iterator over an immutable reference to a hash …","Parallel iterator over a mutable reference to a hash map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves out of a hash set, …","Parallel iterator over a hash set","Parallel iterator over an immutable reference to a hash …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a linked list","Parallel iterator over an immutable reference to a linked …","Parallel iterator over a mutable reference to a linked …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator over a double-ended queue","Parallel iterator over an immutable reference to a …","Parallel iterator over a mutable reference to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …","<code>Chunks</code> is an iterator that groups elements of an …","<code>Cloned</code> is an iterator that clones the elements of an …","<code>Copied</code> is an iterator that copies the elements of an …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Iterator adaptor for the <code>empty()</code> function.","<code>Enumerate</code> is an iterator that returns the current count …","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …","<code>FlatMap</code> maps each element to a parallel iterator, then …","<code>FlatMapIter</code> maps each element to a serial iterator, then …","<code>Flatten</code> turns each element to a parallel iterator, then …","<code>FlattenIter</code> turns each element to a serial iterator, then …","<code>Fold</code> is an iterator that applies a function over an …","<code>FoldWith</code> is an iterator that applies a function over an …","<code>FromParallelIterator</code> implements the creation of a …","An iterator that supports “random access” to its …","<code>Inspect</code> is an iterator that calls a function with a …","<code>Interleave</code> is an iterator that interleaves elements of …","<code>InterleaveShortest</code> is an iterator that works similarly to …","<code>Intersperse</code> is an iterator that inserts a particular item …","<code>IntoParallelIterator</code> implements the conversion to a …","<code>IntoParallelRefIterator</code> implements the conversion to a …","<code>IntoParallelRefMutIterator</code> implements the conversion to a …","The type of item that the parallel iterator will produce.","The type of item that the parallel iterator will produce. …","The type of item that will be produced; this is typically …","The type of item that this parallel iterator produces. …","The type of item that the parallel iterator will produce. …","The type of item that the parallel iterator will produce. …","The parallel iterator type that will be created.","The type of the parallel iterator that will be returned.","The type of iterator that will be created.","The draining parallel iterator type that will be created.","The draining parallel iterator type that will be created.","<code>IterBridge</code> is a parallel iterator that wraps a sequential …","A value of type <code>L</code>.","<code>Map</code> is an iterator that transforms the elements of an …","<code>MapInit</code> is an iterator that transforms the elements of an …","<code>MapWith</code> is an iterator that transforms the elements of an …","<code>MaxLen</code> is an iterator that imposes a maximum length on …","<code>MinLen</code> is an iterator that imposes a minimum length on …","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …","Iterator adaptor for the <code>once()</code> function.","<code>PanicFuse</code> is an adaptor that wraps an iterator with a …","Conversion trait to convert an <code>Iterator</code> to a …","<code>ParallelDrainFull</code> creates a parallel iterator that moves …","<code>ParallelDrainRange</code> creates a parallel iterator that moves …","<code>ParallelExtend</code> extends an existing collection with items …","Parallel version of the standard iterator trait.","<code>Positions</code> takes a predicate <code>predicate</code> and filters out …","Iterator adaptor for the <code>repeat()</code> function.","Iterator adaptor for the <code>repeatn()</code> function.","<code>Rev</code> is an iterator that produces elements in reverse …","A value of type <code>R</code>.","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …","<code>Split</code> is a parallel iterator using arbitrary data and a …","<code>Take</code> is an iterator that iterates over the first <code>n</code> …","<code>TryFold</code> is an iterator that applies a function over an …","<code>TryFoldWith</code> is an iterator that applies a function over …","<code>Update</code> is an iterator that mutates the elements of an …","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …","An <code>IndexedParallelIterator</code> that iterates over two …","Tests that every item in the parallel iterator matches …","","Searches for <strong>some</strong> item in the parallel iterator that …","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.","","","","","","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes two iterators and creates a new iterator over both.","Splits an iterator up into fixed-size chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an iterator which clones all of its elements.  …","Lexicographically compares the elements of this …","","Creates a fresh collection containing all the elements …","","Collects the results of the iterator into the specified …","Creates an iterator which copies all of its elements.  …","Counts the number of items in this parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, …","Like <code>either</code>, but provide some context to whichever of the …","Creates a parallel iterator that produces nothing.","Yields an index along with each item.","Determines if the elements of this <code>ParallelIterator</code> are …","","Returns the left value","Returns the right value","","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Applies <code>filter_op</code> to each item of this iterator, …","Applies <code>filter_op</code> to each item of this iterator to get an …","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies <code>map_op</code> to each item of this iterator to get …","Applies <code>map_op</code> to each item of this iterator to get …","An adaptor that flattens parallel-iterable <code>Item</code>s into one …","An adaptor that flattens serial-iterable <code>Item</code>s into one …","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel fold is similar to sequential fold except that …","","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …","Executes <code>OP</code> on each item produced by the iterator, in …","Executes <code>OP</code> on a value returned by <code>init</code> with each item …","Executes <code>OP</code> on the given <code>init</code> value with each item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an instance of the collection from the parallel …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies <code>inspect_op</code> to a reference to each item of this …","Interleaves elements of this iterator and the other given …","Interleaves elements of this iterator and the other given …","Intersperses clones of an element between items of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Converts <code>self</code> into a parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Determines if the elements of this <code>ParallelIterator</code> are …","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Produces an exact count of how many items this iterator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines if the elements of this <code>ParallelIterator</code> are …","Applies <code>map_op</code> to each item of this iterator, producing a …","Map <code>f</code> over the contained value and return the result in …","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Applies <code>map_op</code> to the given <code>init</code> value with each item of …","Computes the maximum of all the items in the iterator. If …","Computes the maximum of all the items in the iterator …","Computes the item that yields the maximum value for the …","Computes the minimum of all the items in the iterator. If …","Computes the minimum of all the items in the iterator …","Computes the item that yields the minimum value for the …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","","Creates a parallel iterator that produces an element …","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps an iterator with a fuse in case of panics, to halt …","Creates a bridge from this type to a <code>ParallelIterator</code>.","Returns a draining parallel iterator over an entire …","Returns a draining parallel iterator over a range of the …","Extends an instance of the collection with the elements …","","Converts <code>self</code> into a parallel iterator.","Creates the parallel iterator from <code>self</code>.","Lexicographically compares the elements of this …","","Partitions the items of a parallel iterator into a pair …","Partitions and maps the items of a parallel iterator into …","Traits and functions used to implement parallel …","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Searches for items in the parallel iterator that match …","Multiplies all the items in the iterator.","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using <code>op</code>. …","Creates a parallel iterator that endlessly repeats <code>elt</code> (by…","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code>…","Produces a new iterator with the elements of this …","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","Creates an iterator that skips the first <code>n</code> elements.","The <code>split</code> function takes arbitrary data and a closure …","Sums up the items in the iterator.","Creates an iterator that yields the first <code>n</code> elements.","Takes only <code>n</code> repeats of the element, similar to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a fallible parallel fold.","Performs a fallible parallel fold with a cloneable <code>init</code> …","Executes a fallible <code>OP</code> on each item produced by the …","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reduces the items in the iterator into one item using a …","Reduces the items in the iterator into one item using a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the left value","Returns the right value","Unzips the items of a parallel iterator into a pair of …","Unzips the results of the iterator into the specified …","Mutates each item of this iterator before yielding it.","Creates an iterator over the <code>Some</code> items of this iterator, …","Sets the maximum length of iterators desired to process …","Sets the minimum length of iterators desired to process …","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from …","Iterates tuples, repeating the element with items from …","The same as <code>Zip</code>, but requires that both iterators have …","A consumer is effectively a generalized “fold” …","The <code>Folder</code> trait encapsulates the standard fold operation…","The type of folder that this consumer can be converted …","The type of iterator we will become.","The type of item that will be produced by this producer …","The type of item returned by this producer.","The type of value returned by this callback. Analogous to …","A <code>Producer</code> is effectively a “splittable <code>IntoIterator</code>”…","The <code>ProducerCallback</code> trait is a kind of generic closure, …","The reducer is the final step of a <code>Consumer</code> – after a …","The type of reducer that is produced if this consumer is …","The type of result that this consumer will ultimately …","The type of result that will ultimately be produced by …","A stateless consumer can be freely copied. These …","A variant on <code>Producer</code> which does not know its exact …","This helper function is used to “connect” a parallel …","This helper function is used to “connect” a producer …","A variant of <code>bridge_producer_consumer</code> where the producer …","Invokes the callback with the given producer as argument. …","Finish consuming items, produce final result.","Consume next item and return new sequential state.","Consume items from the iterator until full, and return …","Iterate the producer, feeding each element to <code>folder</code>, and …","Iterate the producer, feeding each element to <code>folder</code>, and …","Hint whether this <code>Consumer</code> would like to stop processing …","Hint whether this <code>Folder</code> would like to stop processing …","Convert the consumer into a folder that can consume items …","Convert <code>self</code> into an iterator; at this point, no more …","The maximum number of items that we will process …","The minimum number of items that we will process …","Reduce two final results into one; this is executed after …","Split midway into a new producer if possible, otherwise …","Split into two producers; one produces items <code>0..index</code>, the…","Divide the consumer into two consumers, one processing …","Splits off a “left” consumer and returns it. The <code>self</code> …","Creates a reducer that can be used to combine the results …","A parallel iterator over the value in <code>Some</code> variant of an …","A parallel iterator over a reference to the <code>Some</code> variant …","A parallel iterator over a mutable reference to the <code>Some</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion trait to convert an <code>Iterator</code> to a …","Creates a bridge from this type to a <code>ParallelIterator</code>.","Parallel iterator over a range, implemented for all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over an inclusive range, implemented …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a result","Parallel iterator over an immutable reference to a result","Parallel iterator over a mutable reference to a result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over immutable non-overlapping chunks …","Parallel iterator over immutable non-overlapping chunks …","Parallel iterator over mutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of …","Parallel iterator over immutable items in a slice","Parallel iterator over mutable items in a slice","Parallel extensions for slices.","Parallel extensions for mutable slices.","Parallel iterator over slices separated by a predicate","Parallel iterator over mutable slices separated by a …","Parallel iterator over immutable overlapping windows of a …","Returns a plain slice, which is used to implement the …","Returns a plain mutable slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Sorts the slice in parallel.","Sorts the slice in parallel with a comparator function.","Sorts the slice in parallel with a key extraction …","Sorts the slice in parallel, but may not preserve the …","Sorts the slice in parallel with a comparator function, …","Sorts the slice in parallel with a key extraction …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over all contiguous windows …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over the bytes of a string","Parallel iterator over the characters of a string, with …","Parallel iterator over the characters of a string","Parallel iterator over a string encoded as UTF-16","Parallel iterator over lines in a string","Parallel iterator over substrings that match a pattern, …","Parallel iterator over substrings that match a pattern","Parallel extensions for strings.","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by a …","Parallel iterator over substrings separated by whitespace","Returns a plain string slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a parallel iterator over the bytes of a string.","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over a string encoded as …","Returns a parallel iterator over the lines of a string, …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings separated by a…","Returns a parallel iterator over substrings terminated by …","Returns a parallel iterator over the sub-slices of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range of …","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator that moves out of a vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,5,5,5,5,0,0,4,4,0,4,5,1,2,3,4,5,6,7,1,2,3,4,5,6,7,6,1,2,3,4,4,5,6,7,5,1,2,3,4,5,6,6,7,1,2,3,4,5,6,7,1,1,2,3,4,5,6,7,4,1,2,3,4,5,6,7,0,0,4,0,7,1,4,5,5,0,5,0,0,0,0,1,0,4,0,4,0,6,0,2,4,0,3,4,5,1,5,5,0,0,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,0,0,0,0,0,0,0,8,9,10,8,9,10,8,9,8,9,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,8,9,10,8,9,10,8,9,10,8,9,10,0,0,0,11,12,13,11,12,13,12,12,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,11,12,13,12,11,12,13,11,12,13,11,12,13,0,0,14,15,14,15,15,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,15,14,15,14,15,14,15,0,0,0,0,16,17,18,19,16,17,18,19,17,17,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,16,17,18,19,17,16,17,18,19,16,17,18,19,16,17,18,19,0,0,0,20,21,22,20,21,22,21,21,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,20,21,22,21,20,21,22,20,21,22,20,21,22,0,0,0,23,24,25,23,24,25,23,24,23,24,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,23,24,25,23,24,25,23,24,25,0,0,0,0,26,27,28,29,26,27,28,29,26,27,26,27,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,26,27,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,32,33,34,35,30,31,32,34,35,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,33,36,33,36,36,36,36,36,36,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,33,77,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,33,77,36,33,36,77,33,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,77,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,66,67,68,70,73,75,76,36,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,36,0,77,77,36,36,36,36,36,36,33,33,33,33,33,33,33,33,33,33,33,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,33,36,33,33,33,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,78,77,77,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,33,77,77,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,36,36,36,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,36,36,77,36,36,36,36,36,77,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,66,67,68,70,73,75,76,36,77,33,36,33,36,36,33,33,33,33,33,33,33,77,36,36,36,36,0,37,33,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,66,67,68,70,73,75,76,36,33,79,34,35,80,36,31,32,77,36,33,33,0,77,77,77,77,33,33,33,0,0,77,36,36,36,36,36,36,77,0,33,77,65,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,33,33,33,33,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,33,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,36,36,36,33,77,33,33,77,77,77,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,66,67,68,70,73,75,76,36,77,65,77,0,0,81,82,82,83,84,0,0,0,81,81,85,0,0,0,0,0,84,85,85,85,83,82,81,85,81,82,82,82,86,83,82,81,87,87,0,0,0,88,89,90,88,89,90,88,89,88,89,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,88,89,90,88,89,90,88,89,90,88,89,90,0,79,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,93,94,95,93,94,95,93,94,93,94,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,93,94,95,93,94,95,93,94,95,93,94,95,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,100,101,102,103,98,100,101,102,103,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,106,100,101,102,103,104,105,106,100,101,102,103,104,105,106,96,96,97,97,97,97,97,97,97,97,96,97,96,102,106,106,98,100,101,102,103,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,98,99,100,101,102,103,104,105,106,100,101,102,103,104,105,106,0,0,0,0,0,0,0,0,0,0,0,107,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,107,107,107,107,107,107,107,107,107,107,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,119,120,119,120,119,119,119,120,119,120,119,120,119,120,119,120,120,119,120,119,120,119,120,119,120,119,120,119,120,119,120,119,119,120,119,120,119,120,119,120],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["threadpoolbuilder",3]],[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]],[[],[["threadpoolbuilderror",3],["result",4]]],[[],[["result",4],["threadpoolbuilderror",3]]],null,[[],["usize",15]],[[],["usize",15]],[[],[["option",4],["bool",15]]],[[],[["option",4],["usize",15]]],[[],[["option",4],["usize",15]]],[[],[["threadpoolbuilder",3],["defaultspawn",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["str",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["threadpoolbuilder",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],[["option",4],["str",15]]],[[["configuration",3]],[["box",3],["result",4],["threadpool",3]]],[[],[["threadpoolbuilder",3],["defaultspawn",3]]],[[["usize",15]],["threadpoolbuilder",3]],null,[[],["threadpoolbuilder",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],[["error",8],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["customspawn",3],["threadpoolbuilder",3]]],[[],[["option",4],["usize",15]]],[[["usize",15]],["threadpoolbuilder",3]],[[],["threadpoolbuilder",3]],null,null,[[],["threadpoolbuilder",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["either",4]],[[],["str",15]],[[]],[[]],[[]],[[],["str",15]],[[]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chain",3]],[[["usize",15]],["chunks",3]],[[]],[[],["chain",3]],[[],["chunks",3]],[[],["cloned",3]],[[],["copied",3]],[[],["enumerate",3]],[[],["filter",3]],[[],["filtermap",3]],[[],["flatmap",3]],[[],["flatmapiter",3]],[[],["flatten",3]],[[],["flatteniter",3]],[[],["fold",3]],[[],["foldwith",3]],[[],["inspect",3]],[[],["interleave",3]],[[],["interleaveshortest",3]],[[],["intersperse",3]],[[],["minlen",3]],[[],["maxlen",3]],[[],["map",3]],[[],["mapwith",3]],[[],["mapinit",3]],[[],["multizip",3]],[[],["once",3]],[[],["panicfuse",3]],[[],["iterbridge",3]],[[],["positions",3]],[[],["repeat",3]],[[],["repeatn",3]],[[],["rev",3]],[[],["skip",3]],[[],["split",3]],[[],["take",3]],[[],["tryfold",3]],[[],["tryfoldwith",3]],[[],["update",3]],[[],["whilesome",3]],[[],["zip",3]],[[],["zipeq",3]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cloned",3]],[[],["ordering",4]],[[["either",4]],["ordering",4]],[[]],[[]],[[["vec",3]]],[[],["copied",3]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["consumer",8]]],[[]],[[]],[[]],[[]],[[]],[[["consumer",8]]],[[]],[[]],[[]],[[]],[[["consumer",8]]],[[["consumer",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["consumer",8]]],[[["consumer",8]]],[[["consumer",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],[["send",8],["empty",3]]],[[],["enumerate",3]],[[],["bool",15]],[[["either",4]],["bool",15]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[]],[[],["filter",3]],[[],["filtermap",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["flatmap",3]],[[],["flatmapiter",3]],[[],["flatten",3]],[[],["flatteniter",3]],[[],["either",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["fold",3]],[[]],[[],["foldwith",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["result",4]],["either",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["inspect",3]],[[],["interleave",3]],[[],["interleaveshortest",3]],[[],["intersperse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["bool",15]],[[],["option",4]],[[],["either",4]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[],["map",3]],[[],["either",4]],[[],["mapinit",3]],[[],["either",4]],[[],["either",4]],[[],["mapwith",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[["either",4]],["bool",15]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["send",8]],[["once",3],["send",8]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],["panicfuse",3]],[[],["iterbridge",3]],[[]],[[["rangebounds",8]]],[[]],[[]],[[]],[[]],[[],[["ordering",4],["option",4]]],[[["either",4]],[["option",4],["ordering",4]]],[[]],[[]],null,[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],["positions",3]],[[]],[[]],[[],["option",4]],[[["send",8],["clone",8]],[["repeat",3],["send",8],["clone",8]]],[[["send",8],["usize",15],["clone",8]],[["clone",8],["send",8],["repeatn",3]]],[[],["rev",3]],[[],["option",4]],[[],["either",4]],[[]],[[]],[[]],[[]],[[["usize",15]],["skip",3]],[[],["split",3]],[[]],[[["usize",15]],["take",3]],[[["usize",15]],["repeatn",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["tryfold",3]],[[],["tryfoldwith",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["option",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["vec",3],["vec",3]]],[[],["update",3]],[[],["whilesome",3]],[[["usize",15]],["maxlen",3]],[[["usize",15]],["minlen",3]],[[["producercallback",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["zip",3]],[[],[["zip",3],["repeatn",3]]],[[],["zipeq",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[],["iterbridge",3]],null,[[]],[[]],[[],["iter",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["iter",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[["usize",15]],["chunks",3]],[[["usize",15]],["chunksexact",3]],[[["usize",15]],["chunksexactmut",3]],[[["usize",15]],["chunksmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["split",3]],[[],["splitmut",3]],[[["usize",15]],["windows",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chars",3]],[[],["charindices",3]],[[],["bytes",3]],[[],["encodeutf16",3]],[[],["split",3]],[[],["splitterminator",3]],[[],["lines",3]],[[],["splitwhitespace",3]],[[],["matches",3]],[[],["matchindices",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytes",3]],[[],["charindices",3]],[[],["chars",3]],[[],["encodeutf16",3]],[[],["lines",3]],[[["pattern",8]],[["pattern",8],["matchindices",3]]],[[["pattern",8]],[["pattern",8],["matches",3]]],[[["pattern",8]],[["split",3],["pattern",8]]],[[["pattern",8]],[["pattern",8],["splitterminator",3]]],[[],["splitwhitespace",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"FnContext"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[4,"Either"],[3,"Empty"],[3,"Chain"],[3,"Chunks"],[3,"Cloned"],[3,"Copied"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MinLen"],[3,"MaxLen"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"Repeat"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelBridge"],[8,"ParallelExtend"],[8,"Consumer"],[8,"Producer"],[8,"UnindexedProducer"],[8,"ProducerCallback"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"Split"],[3,"SplitMut"],[3,"Iter"],[3,"Chunks"],[3,"ChunksExact"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"ChunksExactMut"],[8,"ParallelString"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"]]},\
"rayon_core":{"doc":"Under construction","t":[3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Configuration","FnContext","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","breadth_first","build","build","build_global","build_scoped","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","exit_handler","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","index","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","join","join","join_context","migrated","name","new","new","new","num_threads","num_threads","panic_handler","panic_handler","run","scope","scope","scope_fifo","scope_fifo","source","spawn","spawn","spawn","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","stack_size","start_handler","start_handler","thread_name","thread_name","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["rayon_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Contains the rayon thread pool configuration. Use …","Provides the calling context to a closure called by …","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the …","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.","Creates a new <code>ThreadPool</code> initialized using this …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Initializes the global thread pool. This initialization is…","Creates a scoped <code>ThreadPool</code> initialized using this …","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread …","If called from a Rayon worker thread, indicates whether …","Returns true if the current worker thread currently has …","If called from a Rayon worker thread, returns the index …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.","","","","","","","","","","","","","","","","","","Gets the index of this thread in the pool, within …","","","","","","","","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.","Executes <code>op</code> within the threadpool. Any attempts to use …","","","","","","","","","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, …","Creates and return a valid rayon thread pool …","Sets the number of threads to be used in the rayon …","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.","Normally, whenever Rayon catches a panic, it tries to …","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","","Fires off a task into the Rayon threadpool in the “…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This …","Fires off a task into the Rayon threadpool in the “…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.","Sets a callback to be invoked on thread start.","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.","Sets a closure which takes a thread index and returns the …","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,5,6,5,6,5,5,0,4,0,4,0,4,5,6,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,7,1,2,3,4,4,5,6,7,8,5,6,1,2,3,4,5,6,7,7,8,1,2,3,4,5,6,7,8,1,1,2,3,4,5,6,7,8,0,4,1,2,3,4,5,6,7,8,0,4,0,8,1,4,5,6,5,6,5,6,1,0,4,0,4,7,0,2,4,0,3,4,5,1,5,6,5,6,5,6,7,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]],[[],[["box",3],["threadpool",3],["result",4]]],[[],[["threadpoolbuilderror",3],["result",4]]],[[],[["threadpoolbuilderror",3],["result",4]]],[[],["usize",15]],[[],["usize",15]],[[],[["option",4],["bool",15]]],[[],[["option",4],["bool",15]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["str",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["configuration",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["configuration",3]],[["box",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["option",4],["str",15]]],[[["configuration",3]],[["result",4],["threadpool",3],["box",3]]],[[]],[[],["configuration",3]],[[["usize",15]]],[[["usize",15]],["configuration",3]],[[]],[[],["configuration",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["error",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["customspawn",3],["threadpoolbuilder",3]]],[[],[["usize",15],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["configuration",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"ThreadPoolBuildError"],[3,"FnContext"]]},\
"rust_tcp_io_perf":{"doc":"","t":[0,0,0,0,3,12,11,11,11,11,11,12,12,12,12,12,5,12,11,11,11,5,5,5,5,5,5,5,5],"n":["config","connection","print_utils","threading","Config","address","address_and_port","borrow","borrow_mut","from","into","n_bytes","n_rounds","no_delay","non_blocking","p_id","parse_config","port","try_from","try_into","type_id","client_connect","close_connection","receive_message","send_message","server_listen_and_get_first_connection","setup","print_summary","setup"],"q":["rust_tcp_io_perf","","","","rust_tcp_io_perf::config","","","","","","","","","","","","","","","","","rust_tcp_io_perf::connection","","","","","","rust_tcp_io_perf::print_utils","rust_tcp_io_perf::threading"],"d":["","","","","","","","","","","","","","","","","Extract the configuration from Command line","","","","","","","Reads n_bytes into rbuf from the given stream. Make sure …","Sends first n_bytes from wbuf using the given stream. …","Starts listening on given port and return first …","Setup the streams and eventually pins the thread …","Nicely outputs summary of execution with stats and CDF …",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,[[],["string",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["config",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["tosocketaddrs",8]],[["result",6],["tcpstream",3]]],[[["tcpstream",3]]],[[["tcpstream",3],["usize",15]]],[[["tcpstream",3],["usize",15]]],[[["str",15]],["tcpstream",3]],[[["tcpstream",3],["config",3]]],[[["hdrhist",3]]],[[["config",3]]]],"p":[[3,"Config"]]},\
"rusty_demo":{"doc":"","t":[5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,5,5,5,5,17,17,17,3,11,11,11,11,11,11,11,11,11,5,5,5,5,12,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,12],"n":["main","test_result","tests","arithmetic","create_file","hello","laplace","laplace","matmul","matrix_setup","pi_parallel","pi_sequential","print_argv","print_env","read_file","thread_creation","threading","compute","get_residual","iteration","LINEAR_CHUNK","MULT_CHUNK","ROW_SIZE","SplayedBitsCounter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_iter","join4","join8","matmul_strassen","matmulz","max","new","next","quarter_chunks","quarter_chunks_mut","raw_buffer","rcopy","rmatsub","rmatsum","rtmp_sub","rtmp_sum","seq_matmul","seq_matmulz","strassen_add2_mul","strassen_add_mul","strassen_sub_add_mul","strassen_sub_mul","strassen_sum","strassen_sum_sub","test_matmul_strassen","timed_matmul","try_from","try_into","type_id","value"],"q":["rusty_demo","","","rusty_demo::tests","","","","","","","","","","","","","","rusty_demo::tests::laplace","","","rusty_demo::tests::matmul","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],"f":[[[]],[[["result",4]],["str",15]],null,[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],null,[[["usize",15]],["result",4]],null,[[["usize",15]],[["vec",3],["vec",3]]],[[["u64",15]],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[["vec",3],["usize",15],["vec",3]]],[[["usize",15]],["f64",15]],[[["usize",15]]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[],[["usize",15],["option",4]]],[[]],[[]],[[["usize",15]],[["vec",3],["f32",15]]],[[]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[],[["vec",3],["f32",15]]],[[]],[[]],[[],["result",4]],[[["usize",15],["str",15],["fnonce",8]],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"SplayedBitsCounter"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","","","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["scopeguard",3],["always",4]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"server_bw":{"doc":"","t":[5],"n":["main"],"q":["server_bw"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"server_latency":{"doc":"","t":[5],"n":["main"],"q":["server_latency"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"smoltcp":{"doc":"The <em>smoltcp</em> library is built in a layered structure, with …","t":[13,13,4,13,13,13,13,13,6,13,13,13,11,11,11,11,11,11,11,11,0,11,0,0,0,0,11,11,11,11,11,0,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,3,8,3,13,6,3,3,8,13,3,13,4,4,8,3,13,13,8,16,3,13,13,8,16,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,8,13,13,13,13,13,13,13,13,4,3,3,3,3,3,3,13,13,13,3,6,4,13,13,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,18,13,13,13,4,4,3,4,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,13,4,4,4,3,4,4,4,4,13,4,4,3,4,4,4,13,4,4,3,4,4,4,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,13,3,3,13,3,3,3,3,13,3,4,4,4,13,3,3,13,3,4,18,18,18,18,18,18,13,13,13,3,13,13,4,13,13,13,3,3,4,4,3,3,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,13,13,13,13,13,13,4,4,3,3,3,13,13,13,13,13,13,13,18,18,18,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["Checksum","Dropped","Error","Exhausted","Finished","Fragmented","Illegal","Malformed","Result","Truncated","Unaddressable","Unrecognized","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","iface","into","phy","socket","storage","time","to_owned","to_string","try_from","try_into","type_id","wire","EthernetInterface","EthernetInterfaceBuilder","Neighbor","NeighborCache","Route","Routes","add_default_ipv4_route","add_default_ipv6_route","any_ip","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","device","device_mut","ethernet_addr","ethernet_addr","expires_at","fill","finalize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","has_ip_addr","has_multicast_group","into","into","into","into","into","into","ip_addrs","ip_addrs","ipv4_addr","ipv4_address","join_multicast_group","leave_multicast_group","neighbor_cache","new","new","new","new_ipv4_gateway","new_ipv6_gateway","new_with_limit","poll","poll_at","poll_delay","preferred_until","routes","routes","routes_mut","set_ethernet_addr","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","update_ip_addrs","via_router","Both","Both","Checksum","ChecksumCapabilities","Device","DeviceCapabilities","Ethernet","EthernetTracer","FaultInjector","FuzzInjector","Fuzzer","Ip","Loopback","None","PcapLinkType","PcapMode","PcapSink","PcapWriter","Rx","RxOnly","RxToken","RxToken","Tracer","Tx","TxOnly","TxToken","TxToken","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket_interval","capabilities","capabilities","capabilities","capabilities","capabilities","capabilities","checksum","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume","consume","corrupt_chance","default","default","default","drop_chance","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fuzz_packet","get_mut","get_ref","global_header","global_header","icmpv4","icmpv6","ignored","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","ipv4","max_burst_size","max_packet_size","max_rx_rate","max_transmission_unit","max_tx_rate","ne","new","new","new","new","new","packet","packet","packet_header","packet_header","partial_cmp","receive","receive","receive","receive","receive","receive","rx","set_bucket_interval","set_corrupt_chance","set_drop_chance","set_max_packet_size","set_max_rx_rate","set_max_tx_rate","tcp","to_owned","to_owned","to_owned","to_owned","to_owned","transmit","transmit","transmit","transmit","transmit","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp","write","write_u16","write_u16","write_u32","write_u32","AnySocket","CloseWait","Closed","Closing","Established","FinWait1","FinWait2","LastAck","Listen","Socket","SocketHandle","SocketRef","SocketSet","SocketSetItem","SocketSetIter","SocketSetIterMut","SynReceived","SynSent","Tcp","TcpSocket","TcpSocketBuffer","TcpState","TimeWait","Udp","UdpPacketMetadata","UdpSocket","UdpSocketBuffer","abort","ack_delay","add","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_recv","can_send","can_send","clone","clone","clone_into","clone_into","close","cmp","connect","default","deref","deref_mut","downcast","downcast","downcast","drop","endpoint","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","handle","handle","handle","hash","hop_limit","hop_limit","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_iter","into_iter","is_active","is_listening","is_open","is_open","iter","iter_mut","keep_alive","listen","local_endpoint","may_recv","may_send","ne","new","new","new","new","next","next","packet_recv_capacity","packet_send_capacity","partial_cmp","payload_recv_capacity","payload_send_capacity","peek","peek","peek_slice","peek_slice","prune","recv","recv","recv_capacity","recv_queue","recv_slice","recv_slice","release","remote_endpoint","remove","retain","send","send","send_capacity","send_queue","send_slice","send_slice","set_ack_delay","set_hop_limit","set_hop_limit","set_keep_alive","set_timeout","state","timeout","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_str","Assembler","EMPTY","PacketBuffer","PacketMetadata","Resettable","RingBuffer","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","contiguous_window","dequeue","dequeue_allocated","dequeue_many","dequeue_many_with","dequeue_one","dequeue_one_with","dequeue_slice","dequeue_with","enqueue","enqueue_many","enqueue_many_with","enqueue_one","enqueue_one_with","enqueue_slice","enqueue_unallocated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_allocated","get_unallocated","into","into","into","into","is_empty","is_empty","is_empty","is_full","is_full","iter_data","len","new","new","new","packet_capacity","payload_capacity","peek","read_allocated","remove_front","reset","reset","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","window","write_unallocated","Duration","Instant","add","add","add_assign","add_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","div","div_assign","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_millis","from_millis","from_secs","from_secs","into","into","into","into","millis","millis","millis","millis","mul","mul_assign","ne","ne","now","partial_cmp","partial_cmp","secs","secs","sub","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","total_millis","total_millis","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","ADDRCONF","AddrUnreachable","AdminProhibit","Arp","ArpHardware","ArpOperation","ArpPacket","ArpRepr","AtPointer","BROADCAST","BROADCAST","BadLength","BeyondScope","CommProhibited","Discard","DiscardSendAll","DiscardSendUnicast","DstHostUnknown","DstNetUnknown","DstUnreachable","DstUnreachable","DstUnreachable","DstUnreachable","EchoReply","EchoReply","EchoReply","EchoReply","EchoRequest","EchoRequest","EchoRequest","EchoRequest","EndOfList","ErroneousHdrField","Ethernet","EthernetAddress","EthernetFrame","EthernetIpv4","EthernetProtocol","EthernetRepr","FailedPolicy","Fin","FragExpired","FragReassemExceeded","FragRequired","HopByHop","HopLimitExceeded","Host","HostPrecedViol","HostProhibited","HostToS","HostUnreachToS","HostUnreachable","IPV4_MIN_MTU","IPV6_MIN_MTU","Icmp","IcmpRepr","Icmpv4DstUnreachable","Icmpv4Message","Icmpv4Packet","Icmpv4ParamProblem","Icmpv4Redirect","Icmpv4Repr","Icmpv4TimeExceeded","Icmpv6","Icmpv6DstUnreachable","Icmpv6Message","Icmpv6Packet","Icmpv6ParamProblem","Icmpv6Repr","Icmpv6TimeExceeded","Igmp","IpAddress","IpCidr","IpEndpoint","IpProtocol","IpRepr","IpVersion","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4Address","Ipv4Cidr","Ipv4Packet","Ipv4Repr","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6Address","Ipv6Cidr","Ipv6Frag","Ipv6FragmentHeader","Ipv6FragmentRepr","Ipv6HopByHopHeader","Ipv6HopByHopRepr","Ipv6NoNxt","Ipv6Option","Ipv6OptionFailureType","Ipv6OptionRepr","Ipv6OptionType","Ipv6Opts","Ipv6Packet","Ipv6Repr","Ipv6Route","Ipv6RoutingHeader","Ipv6RoutingRepr","LINK_LOCAL_ALL_NODES","LINK_LOCAL_ALL_ROUTERS","LOOPBACK","MANAGED","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","MaxSegmentSize","MissingOption","Mld","MldAddressRecord","MldQuery","MldReport","MldRepr","Mtu","Mtu","Ndisc","NdiscNeighborFlags","NdiscOption","NdiscOptionRepr","NdiscOptionType","NdiscPrefixInfoFlags","NdiscPrefixInformation","NdiscRedirectedHeader","NdiscRepr","NdiscRouterFlags","NeighborAdvert","NeighborAdvert","NeighborSolicit","NeighborSolicit","Net","NetProhibited","NetToS","NetUnreachToS","NetUnreachable","NoOperation","NoRoute","None","ON_LINK","OTHER","OVERRIDE","Pad1","Pad1","PadN","PadN","ParamProblem","ParamProblem","ParamProblem","PktTooBig","PktTooBig","PortUnreachable","PortUnreachable","PrecedCutoff","PrefixInformation","PrefixInformation","ProtoUnreachable","Psh","Query","ROUTER","Redirect","Redirect","Redirect","RedirectedHeader","RedirectedHeader","RejectRoute","Reply","Report","Request","RouterAdvert","RouterAdvert","RouterAdvert","RouterSolicit","RouterSolicit","RouterSolicit","Rpl","Rst","SOLICITED","SOLICITED_NODE_PREFIX","SackPermitted","SackRange","Skip","SourceLinkLayerAddr","SourceLinkLayerAddr","SrcHostIsolated","SrcRouteFailed","Syn","TargetLinkLayerAddr","TargetLinkLayerAddr","Tcp","TcpControl","TcpOption","TcpPacket","TcpRepr","TcpSeqNumber","TimeExceeded","TimeExceeded","TimeExceeded","Timestamp","TimestampReply","TtlExpired","Type2","UNSPECIFIED","UNSPECIFIED","UNSPECIFIED","Udp","UdpPacket","UdpRepr","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnrecognizedNxtHdr","UnrecognizedOption","Unspecified","Unspecified","Unspecified","WindowScale","ack","ack_number","ack_number","add","add_assign","addr","address","address","address","addresses","all","all","all","as_bytes","as_bytes","as_bytes","as_bytes","as_ipv4","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","aux_data_len","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","checksum","checksum","checksum","checksum","checksum","clear_flags","clear_flags","clear_prefix_reserved","clear_redirected_reserved","clear_reserved","clear_reserved","clear_reserved","clear_s_flag","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpr_e","cmpr_i","contains","contains","contains","contains_addr","contains_addr","contains_addr","contains_subnet","contains_subnet","contains_subnet","control","current_hop_limit","cwr","data","data","data","data","data_len","data_len","data_mut","data_mut","data_mut","default","default","default","default","default","default","default","default","dest_addr","dont_frag","dscp","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_port","dst_port","dst_port","dst_port","ece","echo_ident","echo_ident","echo_seq_no","echo_seq_no","ecn","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ethertype","ethertype","extend","extend","extend","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fin","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frag_offset","frag_offset","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bytes","from_bytes","from_bytes","from_iter","from_iter","from_iter","from_netmask","from_parts","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hardware_len","hardware_type","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","home_address","hop_limit","hop_limit","hop_limit","hop_limit","hop_limit","ident","ident","ident","insert","insert","insert","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_all","is_all","is_all","is_broadcast","is_broadcast","is_broadcast","is_empty","is_empty","is_empty","is_empty","is_error","is_ipv4_mapped","is_link_local","is_link_local","is_local","is_loopback","is_loopback","is_mld","is_multicast","is_multicast","is_multicast","is_multicast","is_ndisc","is_specified","is_unicast","is_unicast","is_unicast","is_unicast","is_unspecified","is_unspecified","is_unspecified","len","len","length","link_layer_addr","lower","max_resp_code","max_seg_size","mcast_addr","mcast_addr","more_frags","more_frags","more_frags","msg_code","msg_code","msg_type","msg_type","mss_header_len","mtu","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","neighbor_flags","netmask","network","new","new","new","new","new","new","new","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","next_header","next_header","next_header","next_header","next_header","next_header","next_header","not","not","not","nr_mcast_addr_rcrds","ns","num_srcs","num_srcs","of_packet","operation","option_type","option_type","options","options","options","options","options_mut","options_mut","pad","param_problem_ptr","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","payload","payload","payload","payload","payload","payload","payload_len","payload_len","payload_len","payload_len","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","pkt_too_big_mtu","port","preferred_lifetime","preferred_lifetime","prefix","prefix","prefix_flags","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","protocol","protocol","protocol","protocol_len","protocol_type","psh","qqic","qrv","quash_psh","reachable_time","record_type","remove","remove","remove","retrans_time","router_flags","router_lifetime","routing_type","rst","s_flag","sack_permitted","sack_ranges","segment_len","segment_len","segments_left","selective_ack_permitted","selective_ack_ranges","seq_number","seq_number","set","set","set","set_ack","set_ack_number","set_addresses","set_aux_data_len","set_checksum","set_checksum","set_checksum","set_checksum","set_checksum","set_cmpr_e","set_cmpr_i","set_current_hop_limit","set_cwr","set_data_len","set_data_len","set_dest_addr","set_dont_frag","set_dscp","set_dst_addr","set_dst_addr","set_dst_addr","set_dst_port","set_dst_port","set_ece","set_echo_ident","set_echo_ident","set_echo_seq_no","set_echo_seq_no","set_ecn","set_ethertype","set_fin","set_flow_label","set_frag_offset","set_frag_offset","set_hardware_len","set_hardware_type","set_header_len","set_header_len","set_header_len","set_header_len","set_home_address","set_hop_limit","set_hop_limit","set_ident","set_ident","set_len","set_link_layer_addr","set_max_resp_code","set_mcast_addr","set_mcast_addr","set_more_frags","set_more_frags","set_msg_code","set_msg_code","set_msg_type","set_msg_type","set_mtu","set_neighbor_flags","set_next_header","set_next_header","set_next_header","set_next_header","set_nr_mcast_addr_rcrds","set_ns","set_num_srcs","set_num_srcs","set_operation","set_option_type","set_option_type","set_pad","set_param_problem_ptr","set_payload_len","set_payload_len","set_pkt_too_big_mtu","set_preferred_lifetime","set_prefix","set_prefix_flags","set_prefix_len","set_protocol","set_protocol_len","set_protocol_type","set_psh","set_qqic","set_qrv","set_reachable_time","set_record_type","set_retrans_time","set_router_flags","set_router_lifetime","set_routing_type","set_rst","set_s_flag","set_segments_left","set_seq_number","set_source_hardware_addr","set_source_protocol_addr","set_src_addr","set_src_addr","set_src_addr","set_src_port","set_src_port","set_syn","set_target_addr","set_target_hardware_addr","set_target_protocol_addr","set_total_len","set_traffic_class","set_urg","set_urgent_at","set_valid_lifetime","set_version","set_version","set_window_len","solicited_node","source_hardware_addr","source_protocol_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_port","src_port","src_port","src_port","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","syn","target_addr","target_hardware_addr","target_protocol_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_prefix_len","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_unspecified","toggle","toggle","toggle","total_len","total_len","total_len","traffic_class","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","urg","urgent_at","v4","v6","valid_lifetime","valid_lifetime","verify_checksum","verify_checksum","verify_checksum","verify_checksum","verify_checksum","version","version","version","window_len","window_len","window_scale","write_parts","operation","source_hardware_addr","source_protocol_addr","target_hardware_addr","target_protocol_addr","data","data","data","header","ident","ident","reason","seq_no","seq_no","data","data","data","data","data","data","header","header","header","header","ident","ident","mtu","pointer","reason","reason","reason","seq_no","seq_no","dst_addr","hop_limit","payload_len","protocol","src_addr","data","length","type_","addresses","cmpr_e","cmpr_i","home_address","length","length","next_header","next_header","pad","segments_left","segments_left","data","data","max_resp_code","mcast_addr","nr_mcast_addr_rcrds","num_srcs","qqic","qrv","s_flag","data","length","type_","dest_addr","flags","flags","hop_limit","lladdr","lladdr","lladdr","lladdr","lladdr","mtu","prefix_info","reachable_time","redirected_hdr","retrans_time","router_lifetime","target_addr","target_addr","target_addr","data","kind","PrettyIndent","PrettyPrint","PrettyPrinter","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","increase","into","into","new","new","pretty_print","print","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["smoltcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::iface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::physmoltcp::socketsmoltcp::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::wiresmoltcp::wire::ArpRepr","","","","","smoltcp::wire::Icmpv4Repr","","","","","","","","","smoltcp::wire::Icmpv6Repr","","","","","","","","","","","","","","","","","","","smoltcp::wire::IpRepr","","","","","smoltcp::wire::Ipv6OptionRepr","","","smoltcp::wire::Ipv6RoutingRepr","","","","","","","","","","","smoltcp::wire::MldRepr","","","","","","","","","smoltcp::wire::NdiscOptionRepr","","","smoltcp::wire::NdiscRepr","","","","","","","","","","","","","","","","","","smoltcp::wire::TcpOption","","smoltcp::wire::pretty_print","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An incoming packet had an incorrect checksum and was …","An incoming packet was recognized but contradicted …","The error type for the networking stack.","An operation cannot proceed because a buffer is empty or …","The operation is finished. E.g. when reading from a TCP …","An incoming IP packet has been split into several IP …","An operation is not permitted in the current state.","An incoming packet was recognized but was …","The result type for the networking stack.","An incoming packet could not be parsed because some of …","An endpoint or address of a remote host could not be …","An incoming packet could not be recognized and was …","","","","","","","","","Network interface logic.","","Access to networking hardware.","Communication between endpoints.","Specialized containers.","Time structures.","","","","","","Low-level packet access and construction.","An Ethernet network interface.","A builder structure used for creating a Ethernet network …","A cached neighbor.","A neighbor cache backed by a map.","A prefix of addresses that should be routed via a router","A routing table.","Add a default ipv4 gateway (ie. “ip route add 0.0.0.0/0 …","Add a default ipv6 gateway (ie. “ip -6 route add ::/0 …","Enable or disable the AnyIP capability, allowing packets …","","","","","","","","","","","","","","","","","Get a reference to the inner device.","Get a mutable reference to the inner device.","Get the Ethernet address of the interface.","Set the Ethernet address the interface will use. See also …","<code>None</code> means “forever”.","","Create a network interface using the previously provided …","","","","","","","","","","","Check whether the interface has the given IP address …","Check whether the interface listens to given destination …","","","","","","","Get the IP addresses of the interface.","Set the IP addresses the interface will use. See also …","Get the first IPv4 address if present.","Get the first IPv4 address of the interface.","Add an address to a list of subscribed multicast IP …","Remove an address from the subscribed multicast IP …","Set the Neighbor Cache the interface will use.","Create a builder used for creating a network interface …","Create a cache. The backing storage is cleared upon …","Creates a routing tables. The backing storage is <strong>not</strong> …","Returns a route to 0.0.0.0/0 via the <code>gateway</code>, with no …","Returns a route to ::/0 via the <code>gateway</code>, with no expiry.","","Transmit packets queued in the given sockets, and receive …","Return a <em>soft deadline</em> for calling poll the next time. …","Return an <em>advisory wait time</em> for calling poll the next …","<code>None</code> means “forever”.","","Set the IP routes the interface will use. See also routes.","","Set the Ethernet address of the interface.","","","","","","","","","","","","","","","","","","","","","Update the routes of this node.","Update the IP addresses of the interface.","","Capture both received and transmitted packets.","Verify checksum when receiving and compute checksum when …","A description of checksum behavior for a particular …","A description of checksum behavior for every supported …","An interface for sending and receiving raw network frames.","A description of device capabilities.","Ethernet frames","A tracer device for Ethernet frames.","A fault injector device.","A fuzz injector device.","Represents a fuzzer. It is expected to replace bytes in …","IPv4 or IPv6 packets (depending on the version field)","A loopback device.","Ignore checksum completely.","Captured packet header type.","Packet capture mode.","A packet capture sink.","A packet capture writer device.","Verify checksum when receiving.","Capture only received packets.","A token to receive a single network packet.","","A tracer device.","Compute checksum before sending.","Capture only transmitted packets.","A token to transmit a single network packet.","","","","","","","","","","","","","","","","","","","","","","","Return the interval for packet rate limiting, in …","Get a description of device capabilities.","","","","","","Checksum behavior.","","","","","","","","","","","","Consumes the token to receive a single network packet.","Consumes the token to send a single network packet.","Return the probability of corrupting a packet, in …","","","","Return the probability of dropping a packet, in percents.","","","","","","","","","","","","","","","","","","","","","","","Modify a single packet with fuzzed data.","Get a mutable reference to the underlying device.","Get a reference to the underlying device.","Write the libpcap global header into the sink.","Write the libpcap global header into the sink.","","","Checksum behavior that results in not computing or …","","","","","","","","","","","Return the underlying device, consuming the tracer.","Return the underlying device, consuming the fault …","Return the underlying device, consuming the fuzz injector.","","Maximum burst size, in terms of MTU.","Return the maximum packet size, in octets.","Return the maximum packet reception rate, in packets per …","Maximum transmission unit.","Return the maximum packet transmission rate, in packets …","","Create a tracer device.","Create a fault injector device, using the given random …","Create a fuzz injector device.","Creates a packet capture writer.","Creates a loopback device.","Write the libpcap packet header followed by packet data …","Write the libpcap packet header followed by packet data …","Write the libpcap packet header into the sink.","Write the libpcap packet header into the sink.","","Construct a token pair consisting of one receive token …","","","","","","Returns whether checksum should be verified when …","Set the interval for packet rate limiting, in …","Set the probability of corrupting a packet, in percents.","Set the probability of dropping a packet, in percents.","Set the maximum packet size, in octets.","Set the maximum packet reception rate, in packets per …","Set the maximum packet transmission rate, in packets per …","","","","","","","Construct a transmit token.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether checksum should be verified when sending.","","","","","","","","","","","","Write data into the sink.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","A conversion trait for network sockets.","","","","","","","","","A network socket.","A handle, identifying a socket in a set.","A smart pointer to a socket.","An extensible set of sockets.","An item of a socket set.","Immutable socket set iterator.","Mutable socket set iterator.","","","","A Transmission Control Protocol socket.","A TCP socket ring buffer.","The state of a TCP socket, according to RFC 793.","","","A UDP packet metadata.","A User Datagram Protocol socket.","A UDP packet ring buffer.","Aborts the connection, if any.","Return the ACK delay duration.","Add a socket to the set with the reference count 1, and …","Bind the socket to the given endpoint.","","","","","","","","","","","","","","","","","","","","","Check whether the receive buffer is not empty.","Check whether the receive half of the full-duplex …","Check whether the transmit buffer is full.","Check whether the transmit half of the full-duplex …","","","","","Close the transmit half of the full-duplex connection.","","Connect to a given endpoint.","","","","","","","","Return the bound endpoint.","","","","","","","","","","","","","","","","","","","","","","Get a socket from the set by its handle, as mutable.","Return the socket handle.","Return the socket handle.","Return the socket handle.","","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Return the time-to-live (IPv4) or hop limit (IPv6) value …","","","","","","","","","","","","","Unwrap a smart pointer to a socket.","","","Return whether a connection is active.","Return whether the socket is passively listening for …","Check whether the socket is open.","Return whether the socket is open.","Iterate every socket in this set.","Iterate every socket in this set, as SocketRef.","Return the keep-alive interval.","Start listening on the given endpoint.","Return the local endpoint.","Return whether the receive half of the full-duplex …","Return whether the transmit half of the full-duplex …","","Wrap a pointer to a socket to make a smart pointer.","Create an UDP socket with the given buffers.","Create a socket using the given buffers.","Create a socket set using the provided storage.","","","Return the maximum number packets the socket can receive.","Return the maximum number packets the socket can transmit.","","Return the maximum number of bytes inside the recv buffer.","Return the maximum number of bytes inside the transmit …","Peek at a packet received from a remote endpoint, and …","Peek at a sequence of received octets without removing …","Peek at a packet received from a remote endpoint, copy …","Peek at a sequence of received octets without removing …","Prune the sockets in this set.","Dequeue a packet received from a remote endpoint, and …","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the recv buffer.","Return the amount of octets queued in the receive buffer. …","Dequeue a packet received from a remote endpoint, copy …","Dequeue a sequence of received octets, and fill a slice …","Decrease reference count by 1.","Return the remote endpoint.","Remove a socket from the set, without changing its state.","Increase reference count by 1.","Enqueue a packet to be sent to a given remote endpoint, …","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the transmit …","Return the amount of octets queued in the transmit buffer.","Enqueue a packet to be sent to a given remote endpoint, …","Enqueue a sequence of octets to be sent, and fill it from …","Set the ACK delay duration.","Set the time-to-live (IPv4) or hop limit (IPv6) value …","Set the time-to-live (IPv4) or hop limit (IPv6) value …","Set the keep-alive interval.","Set the timeout duration.","Return the connection state, in terms of the TCP state …","Return the timeout duration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A buffer (re)assembler.","Empty packet description.","An UDP packet ring buffer.","Size and header of a packet.","A trait for setting a value to a known state.","A ring buffer.","Add a new contiguous range to the assembler, and return …","","","","","","","","","Return the maximum number of elements in the ring buffer.","Clear the ring buffer.","","","Return the largest number of elements that can be added …","Dequeue a single packet from the buffer, and return a …","Dequeue the given number of allocated buffer elements.","Dequeue a slice of elements up to the given size from the …","Call <code>f</code> with the largest contiguous slice of allocated …","Dequeue an element from the buffer, and return a …","Call <code>f</code> with a single buffer element, and dequeue the …","Dequeue as many elements from the buffer into the given …","Call <code>f</code> with a single packet from the buffer, and dequeue …","Enqueue a single packet with the given header into the …","Enqueue a slice of elements up to the given size into the …","Call <code>f</code> with the largest contiguous slice of unallocated …","Enqueue a single element into the buffer, and return a …","Call <code>f</code> with a single buffer element, and enqueue the …","Enqueue as many elements from the given slice into the …","Enqueue the given number of unallocated buffer elements.","","","","","","","","","","","Return the largest contiguous slice of allocated buffer …","Return the largest contiguous slice of unallocated buffer …","","","","","Return whether the assembler contains no data.","Query whether the buffer is empty.","Query whether the buffer is empty.","Query whether the buffer is full.","Query whether the buffer is full.","Iterate over all of the contiguous data ranges.","Return the current number of elements in the ring buffer.","Create a new buffer assembler for buffers of the given …","Create a ring buffer with the given storage.","Create a new packet buffer with the provided metadata and …","Return the maximum number packets that can be stored.","Return the maximum number of bytes in the payload ring …","Peek at a single packet from the buffer without removing …","Read as many elements from allocated buffer elements into …","Remove a contiguous range from the front of the assembler …","","Clear the ring buffer, and reset every element.","","","","","","","","","","","","","","","Return the number of elements that can be added to the …","Write as many elements from the given slice into …","A relative amount of time.","A representation of an absolute time value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Duration</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of seconds.","Create a new <code>Instant</code> from a number of seconds.","","","","","The fractional number of milliseconds that have passed …","The fractional number of milliseconds in this <code>Duration</code>.","","","","","","","Create a new <code>Instant</code> from the current …","","","The number of whole seconds that have passed since the …","The number of whole seconds in this <code>Duration</code>.","","","","","","","","","","The total number of milliseconds that have passed since …","The total number of milliseconds in this <code>Duration</code>.","","","","","","","","","","","","Address unreachable.","Communication with destination administratively …","","ARP hardware type.","ARP operation type.","A read/write wrapper around an Address Resolution …","A high-level representation of an Address Resolution …","Pointer indicates the error","The broadcast address.","The broadcast address.","Bad length","Beyond scope of source address.","Communication administratively prohibited","Discard the containing packet","Discard the containing packet and notify the sender","Discard the containing packet and only notify the sender …","Destination host unknown","Destination network unknown","Destination unreachable","","Destination Unreachable.","","Echo reply","","Echo Reply","","Echo request","","Echo Request","","","Erroneous header field encountered.","","A six-octet Ethernet II address.","A read/write wrapper around an Ethernet II frame buffer.","An Ethernet and IPv4 Address Resolution Protocol packet.","Ethernet protocol type.","A high-level representation of an Internet Protocol …","Source address failed ingress/egress policy.","","Fragment reassembly time exceeded","Fragment reassembly time exceeded.","Fragmentation required, and DF flag set","","Hop limit exceeded in transit.","Redirect Datagram for the Host","Host precedence violation","Host administratively prohibited","Redirect Datagram for the ToS & host","Host unreachable for ToS","Destination host unreachable","Minimum MTU required of all links supporting IPv4. See …","Minimum MTU required of all links supporting IPv6. See …","","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for type “…","Internet protocol control message subtype for type “…","A high-level representation of an Internet Control …","Internet protocol control message subtype for type “…","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for the type “…","A high-level representation of an Internet Control …","Internet protocol control message subtype for the type “…","","An internetworking address.","A specification of a CIDR block, containing an address …","An internet endpoint address.","IP datagram encapsulated protocol.","An IP packet representation.","Internet protocol version.","","","An IPv4 address.","","","","A four-octet IPv4 address.","A specification of an IPv4 CIDR block, containing an …","A read/write wrapper around an Internet Protocol version …","A high-level representation of an Internet Protocol …","","","An IPv6 address.","","","","A sixteen-octet IPv6 address.","A specification of an IPv6 CIDR block, containing an …","","A read/write wrapper around an IPv6 Fragment Header.","A high-level representation of an IPv6 Fragment header.","A read/write wrapper around an IPv6 Hop-by-Hop Options …","A high-level representation of an IPv6 Hop-by-Hop Options …","","A read/write wrapper around an IPv6 Extension Header …","Action required when parsing the given IPv6 Extension …","A high-level representation of an IPv6 Extension Header …","IPv6 Extension Header Option Type","","A read/write wrapper around an Internet Protocol version …","A high-level representation of an Internet Protocol …","","A read/write wrapper around an IPv6 Routing Header buffer.","A high-level representation of an IPv6 Routing Header.","The link-local all routers multicast address.","The link-local all nodes multicast address.","The loopback address.","","All multicast-capable routers","All multicast-capable nodes","","Missing a required option","","A read/write wrapper around an MLDv2 Listener Report …","Multicast Listener Query","Multicast Listener Report","A high-level representation of an MLDv2 packet header.","MTU","","","","A read/write wrapper around an NDISC Option.","A high-level representation of an NDISC Option.","NDISC Option Type","","","","A high-level representation of an Neighbor Discovery …","","Neighbor Advertisement","","Neighbor Solicitation","","Redirect Datagram for the Network","Network administratively prohibited","Redirect Datagram for the ToS & network","Network unreachable for ToS","Destination network unreachable","","No Route to destination.","","","","","1 byte of padding","","Multiple bytes of padding","","Parameter problem","Parameter Problem.","","Packet Too Big.","","Destination port unreachable","Port unreachable.","Precedence cutoff in effect","Prefix Information","","Destination protocol unreachable","","","","Message redirect","Redirect","","Redirected Header","","Reject route to destination.","","","","Router advertisement","Router Advertisement","","Router solicitation","Router Solicitation","","","","","The solicited node prefix.","","","Skip this option and continue processing the packet","Source Link-layer Address","","Source host isolated","Source route failed","","Target Link-layer Address","","","The possible control flags of a Transmission Control …","A representation of a single TCP option.","A read/write wrapper around a Transmission Control …","A high-level representation of a Transmission Control …","A TCP sequence number.","Time exceeded","Time Exceeded.","","Timestamp","Timestamp reply","TTL expired in transit","","An endpoint with unspecified address and port.","An unspecified address.","The unspecified address.","","A read/write wrapper around an User Datagram Protocol …","A high-level representation of an User Datagram Protocol …","","","","","","","","","","","","","","","","","","","","Unrecognized Next Header type encountered.","Unrecognized IPv6 option encountered.","","An unspecified address. May be used as a placeholder for …","","","Return the ACK flag.","Return the acknowledgement number field.","","","","","Return the IP address of this CIDR block.","Return the address of this IPv4 CIDR block.","Return the address of this IPv6 CIDR block.","Return the address vector in bytes","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Return an Ethernet address as a sequence of octets, in …","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","Return an IPv6 address as a sequence of octets, in …","Convert an IPv4 mapped IPv6 address to an IPv4 address.","","","","","","","","","Return the length of the auxilary data.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the broadcast address of this IPv4 CIDR.","Return the length of a buffer required to hold a packet …","Return the length of a header that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length, in bytes, of a header that will be …","Return the length, in bytes, of a header that will be …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","","Return the length of a header that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","","Return the length of a packet that will be emitted from …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Return the header checksum field.","Return the checksum field.","Return the checksum field.","Return the checksum field.","Return the checksum field.","Clear the entire flags field.","Clear the entire flags field.","Clear the reserved bits.","Clear the reserved bits.","Set reserved fields.","Initialize reserved fields to 0.","Clear any reserved fields in the message header.","Clear the Suppress Router-Side Processing flag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of prefix octects elided from the last …","Return the number of prefix octects elided from addresses[…","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPv6 CIDR …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPV6 CIDR …","","Return the current hop limit field.","Return the CWR flag.","Return the option data.","Return a pointer to the type-specific data.","Return the option data.","","Return the length of the data.","Return the length of the data.","Return a mutable pointer to the option data.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the option data.","","","","","","","","","Return the destination address field.","Return the “don’t fragment” flag.","Return the Differential Services Code Point field.","Return the destination address field.","Return the destination address.","Return the destination address field.","Return the destination address field.","","","IPv6 address of the destination node.","Return the destination port field.","Return the destination port field.","","","Return the ECE flag.","Return the identifier field (for echo request and reply …","Return the identifier field (for echo request and reply …","Return the sequence number field (for echo request and …","Return the sequence number field (for echo request and …","Return the Explicit Congestion Notification field.","Emit a high-level representation into an Ethernet II …","Emit a high-level representation into an Address …","Emit this high-level representation into a buffer.","Emit a high-level representation into an Internet …","Emit a high-level representation into an Internet …","Emit a high-level representation into an IPv6 Extension …","Emit a high-level representation into an IPv6 Hop-by-Hop …","Emit a high-level representation into an IPv6 Fragment …","Emit a high-level representation into an IPv6 Routing …","Emit a high-level representation into an Internet Control …","Emit a high-level representation into an Internet Control …","","Emit a high-level representation into an NDISC Option.","Emit a high-level representation into an MLDv2 packet.","Emit a high-level representation into an User Datagram …","","Emit a high-level representation into a Transmission …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the EtherType field, without checking for 802.1Q.","","","","","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Return the FIN flag.","","Return the flow label field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fragment offset, in octets.","Return the fragment offset field.","The offset of the data following this header, relative to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Construct an Ethernet address from a sequence of octets, …","Construct an IPv4 address from a sequence of octets, in …","Construct an IPv6 address from a sequence of octets, in …","","","","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from a sequence of words, in …","Parse a string representation of an Ethernet address.","Parse a string representation of an IP address.","Parse a string representation of an IP CIDR.","","Parse a string representation of an IPv4 address.","Parse a string representation of an IPv4 CIDR.","Parse a string representation of an IPv6 address.","Parse a string representation of an IPv6 CIDR.","Return the hardware length field.","Return the hardware type field.","","","","","","","","","","","","","","Return the length of a frame header.","Return the header length, in octets.","Return the header length.","Return length of the Hop-by-Hop Options header in 8-octet …","Return the header length field. Length of the Routing …","Return the header length. The result depends on the value …","Return the header length. The result depends on the value …","Return the header length, in octets.","Return the length of a header that will be emitted from …","Return the IPv6 Home Address","Return the TTL value.","Return the time to live field.","Return the hop limit field.","","The 8-bit hop limit field.","Return the fragment identification field.","Return the fragment identification value field.","The identification for every packet that is fragmented.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the frame, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the ipv6 option, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the NDISC option, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Query whether this address is the broadcast address.","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return whether the segment has no flags set (except PSH) …","Per RFC 4443 § 2.1 ICMPv6 message types with the highest …","Query whether the IPv6 address is an IPv4 mapped IPv6 …","Query whether the address falls into the “link-local” …","Query whether the IPv6 address is in the link-local scope.","Query whether the “locally administered” bit in the …","Query whether the address falls into the “loopback” …","Query whether the IPv6 address is the loopback address.","Return a boolean value indicating if the given message …","Query whether the “multicast” bit in the OUI is set.","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Query whether the IPv6 address is a multicast address.","Return a boolean value indicating if the given message …","Query whether the endpoint has a specified address and …","Query whether the address is an unicast address.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the IPv6 address is an unicast address.","Query whether the address falls into the “unspecified”…","Query whether the address falls into the “unspecified”…","Query whether the IPv6 address is the unspecified address.","Return the length field.","Return the length of a control flag, in terms of sequence …","Length of the Hop-by-Hop Options header in 8-octet units, …","Return the Source/Target Link-layer Address.","Convert an unspecified representation into a concrete …","Return the maximum response code field.","","Return the address being queried.","Return the multicast address field.","Return the “more fragments” flag.","Return more fragment flag field.","Whethere are not there are more fragments following this …","Return the message code field.","Return the message code field.","Return the message type field.","Return the message type field.","Return the length of the header for the TCP protocol.","Return the MTU value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the Neighbor Solicitation flags.","Return the network mask of this IPv4 CIDR.","Return the network block of this IPv4 CIDR.","Create a CIDR block from the given address and prefix …","Create an endpoint address from given address and port.","Construct an IPv4 address from parts.","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from parts.","Create an IPv6 CIDR block from the given address and …","Create a raw octet buffer with an IPv6 Routing Header …","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Shorthand for a combination of new_unchecked and check_len…","Imbue a raw octet buffer with Ethernet frame structure.","Imbue a raw octet buffer with ARP packet structure.","Imbue a raw octet buffer with IPv4 packet structure.","Create a raw octet buffer with an IPv6 packet structure.","Create a raw octet buffer with an IPv6 Extension Header …","Create a raw octet buffer with an IPv6 Hop-by-Hop Options …","Create a raw octet buffer with an IPv6 Fragment Header …","Imbue a raw octet buffer with ICMPv4 packet structure.","Imbue a raw octet buffer with ICMPv6 packet structure.","Create a raw octet buffer with an NDISC Option structure.","Imbue a raw octet buffer with a Address Record structure.","Imbue a raw octet buffer with UDP packet structure.","Imbue a raw octet buffer with TCP packet structure.","Return the next header field.","Return the next header field.","Return the next header field.","Return the next header field.","Protocol contained in the next header.","The type of header immediately following the Hop-by-Hop …","The type of header immediately following the Fragment …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number of Multicast Address Records.","Return the NS flag.","Return number of sources.","Return the number of sources field.","Return the version of an IP packet stored in the provided …","Return the operation field.","Return the option type.","Return the option type.","Return the option data.","Return an <code>Iterator</code> for the contained options.","Return a pointer to the options.","The options contained in the Hop-by-Hop Options header.","Return a mutable pointer to the option data.","Return a pointer to the options.","Return the number of octects used for padding after …","Return the pointer field (for parameter problem messages).","Parse an Ethernet II frame and return a high-level …","Parse an Address Resolution Protocol packet and return a …","Parse an Internet Protocol version 4 packet and return a …","Parse an Internet Protocol version 6 packet and return a …","Parse an IPv6 Extension Header Option and return a …","Parse an IPv6 Hop-by-Hop Options Header and return a …","Parse an IPv6 Fragment Header and return a high-level …","Parse an IPv6 Routing Header and return a high-level …","Parse an Internet Control Message Protocol version 4 …","Parse an Internet Control Message Protocol version 6 …","Parse an NDISC packet and return a high-level …","Parse an NDISC Option and return a high-level …","Parse an MLDv2 packet and return a high-level …","Parse an User Datagram Protocol packet and return a …","","Parse a Transmission Control Protocol packet and return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a pointer to the payload, without checking for …","Return a pointer to the payload.","Return a pointer to the payload.","Return a pointer to the type-specific data.","Return a pointer to the address records.","Return a pointer to the payload.","Return a pointer to the payload.","","","Return the payload length.","Return the payload length field.","","Length of the payload including the extension headers.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload.","Return a mutable pointer to the type-specific data.","Return a pointer to the address records.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload data.","Return the MTU field (for packet too big messages).","","Return the preferred lifetime of the prefix.","","Return the prefix.","","Return the prefix information flags.","Return the prefix length of this CIDR block.","Return the prefix length of this IPv4 CIDR block.","Return the prefix length of this IPv6 CIDR block.","Return the prefix length.","","Pretty-printing of packet representation.","","","","","","","","","Return the protocol.","Return the protocol field.","","Return the protocol length field.","Return the protocol type field.","Return the PSH flag.","Return the Querier’s Query Interval Code.","Return the Querier’s Robustness Variable.","Turn the PSH flag into no flag, and keep the rest as-is.","Return the reachable time field.","Return the record type for the given sources.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Return the retransmit time field.","Return the Router Advertisement flags.","Return the router lifetime field.","Return the routing type field.","Return the RST flag.","Return the Suppress Router-Side Processing flag.","","","Return the length of the segment, in terms of sequence …","Return the length of the segment, in terms of sequence …","Return the segments left field.","Returns whether the selective acknowledgement SYN flag is …","Return the selective acknowledgement ranges, if any. If …","Return the sequence number field.","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the ACK flag.","Set the acknowledgement number field.","Set address data","Return the length of the auxilary data.","Set the header checksum field.","Set the checksum field.","","Set the checksum field.","Set the checksum field.","Set the number of prefix octects elided from the last …","Set the number of prefix octects elided from addresses[…","Set the current hop limit field.","Set the CWR flag.","Set the option data length.","Set the option data length.","Set the destination address field.","Set the “don’t fragment” flag.","Set the Differential Services Code Point field.","Set the destination address field.","Set the destination address field.","Set the destination address field.","Set the destination port field.","Set the destination port field.","Set the ECE flag.","Set the identifier field (for echo request and reply …","Set the identifier field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the Explicit Congestion Notification field.","Set the EtherType field.","Set the FIN flag.","Set the flow label field.","Set the fragment offset, in octets.","Set the fragment offset field.","Set the hardware length field.","Set the hardware type field.","Set the header length, in octets.","Set the option data length. Length of the Hop-by-Hop …","Set the option data length. Length of the Routing header …","Set the header length, in octets.","Set the Ipv6 Home Address","Set the time to live field.","Set the hop limit field.","Set the fragment identification field.","Set the fragmentation identification field.","Set the length field.","Set the Source/Target Link-layer Address.","Set the maximum response code field.","Set the address being queried.","Return the multicast address field.","Set the “more fragments” flag.","Set the more fragments flag field.","Set the message code field.","Set the message code field.","Set the message type field.","Set the message type field.","Set the MTU value.","Set the Neighbor Solicitation flags.","Set the next header field.","Set the next header field.","Set the next header field.","Set the next header field.","Set the number of Multicast Address Records.","Set the NS flag.","Set number of sources.","Return the number of sources field.","Set the operation field.","Set the option type.","Set the option type.","Set the number of octects used for padding after …","Set the pointer field (for parameter problem messages).","Set the payload length.","Set the payload length field.","Set the MTU field (for packet too big messages).","Set the preferred lifetime of the prefix.","Set the prefix.","Set the prefix information flags.","Set the prefix length.","Set the protocol field.","Set the protocol length field.","Set the protocol type field.","Set the PSH flag.","Set the Querier’s Query Interval Code.","Set the Querier’s Robustness Variable.","Set the reachable time field.","Return the record type for the given sources.","Set the retransmit time field.","Set the Router Advertisement flags.","Set the router lifetime field.","Set the routing type.","Set the RST flag.","Set the Suppress Router-Side Processing flag.","Set the segments left field.","Set the sequence number field.","Set the source hardware address field.","Set the source protocol address field.","Set the source address field.","Set the source address field.","Set the source address field.","Set the source port field.","Set the source port field.","Set the SYN flag.","Set the target address field.","Set the target hardware address field.","Set the target protocol address field.","Set the total length field.","Set the traffic class field.","Set the URG flag.","Set the urgent pointer field.","Set the valid lifetime of the prefix.","Set the version field.","Set the version field.","Return the window size field.","The solicited node for the given unicast address.","Return the source hardware address field.","Return the source protocol address field.","Return the source address field.","Return the source address.","Return the source address field.","Return the source address field.","","","IPv6 address of the source node.","Return the source port field.","Return the source port field.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Return the SYN flag.","Return the target address field.","Return the target hardware address field.","Return the target protocol address field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>self</code> is a CIDR-compatible subnet mask, return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an unspecified address that has the same IP …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Return the total length of a packet that will be emitted …","Return the total length field.","Return the payload length added to the known header …","Return the traffic classeturn the URG flag.","Return the urgent pointer field.","Create an address wrapping an IPv4 address with the given …","Create an address wrapping an IPv6 address with the given …","Return the valid lifetime of the prefix.","","Validate the header checksum.","Validate the header checksum.","Validate the header checksum.","Validate the packet checksum.","Validate the packet checksum.","Return the protocol version.","Return the version field.","Return the version field.","Return the window size field.","","","Write a IPv6 address to the given slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of addresses, numbered 1 to <code>n</code>.","Number of prefix octets from the last segment that are …","Number of prefix octets from each segment, except the …","The home address of the destination mobile node.","Length of the Routing header in 8-octet units, not …","Length of the Routing header in 8-octet units, not …","The type of header immediately following the Routing …","The type of header immediately following the Routing …","Number of octets that are used for padding after …","Number of route segments remaining.","Number of route segments remaining.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indentation state.","Interface for printing listings.","Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is …","","","","","","","","","","Increase indentation level.","","","Format the listing with the recorded parameters when …","Create an indentation state. The entire listing will be …","Write a concise, formatted representation of a packet …","Create a <code>PrettyPrinter</code> which prints the given object.","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,2,2,3,4,3,5,6,7,2,4,3,5,6,7,2,5,7,5,7,4,4,4,3,7,6,3,5,6,7,2,4,3,5,6,7,2,4,4,4,3,5,6,7,2,4,3,4,4,4,4,3,3,6,2,7,7,6,4,4,4,7,4,3,4,4,5,7,4,3,5,6,7,2,4,3,5,6,7,2,4,3,5,6,7,2,2,4,7,8,9,0,0,0,0,10,0,0,0,0,10,0,9,0,0,0,0,9,8,0,11,0,9,8,0,11,10,12,13,14,10,8,15,16,9,17,18,12,13,14,10,8,15,16,9,17,18,13,11,12,13,14,15,16,18,10,8,9,17,18,10,8,9,17,18,10,19,20,13,9,17,18,13,10,8,13,14,10,8,15,16,9,17,18,12,13,14,10,10,8,15,16,9,17,18,21,12,12,22,22,17,17,17,12,13,14,10,8,15,16,9,17,18,12,13,14,17,18,13,13,18,13,10,12,13,14,15,16,22,22,22,22,10,11,12,13,14,15,16,9,13,13,13,13,13,13,17,10,8,9,17,18,11,12,13,14,15,16,12,13,14,10,8,15,16,9,17,18,12,13,14,10,8,15,16,9,17,18,9,12,13,14,10,8,15,16,9,17,18,17,22,22,22,22,22,0,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,23,23,24,0,0,0,23,24,0,0,0,25,25,26,27,28,29,30,27,23,25,31,32,26,24,28,29,30,27,23,25,31,32,26,24,27,25,27,25,23,32,23,32,25,32,25,32,30,30,33,27,25,30,27,23,32,27,23,23,25,31,32,32,26,24,28,29,30,27,23,25,31,32,26,24,26,27,25,24,32,27,25,28,29,30,27,27,23,25,25,31,32,26,24,30,28,29,25,25,27,25,26,26,25,25,25,25,25,32,30,27,25,26,28,29,27,27,32,27,27,27,25,27,25,26,27,25,25,25,27,25,26,25,26,26,27,25,25,25,27,25,25,27,25,25,25,25,25,23,32,23,32,28,29,30,27,23,25,31,32,26,24,28,29,30,27,23,25,31,32,26,24,28,29,30,27,23,25,31,32,26,24,25,0,34,0,0,0,0,35,35,36,34,37,35,36,34,37,36,36,34,34,36,37,36,36,36,36,36,36,37,37,36,36,36,36,36,36,35,35,36,34,37,35,36,36,34,37,36,36,35,36,34,37,35,36,37,36,37,35,36,35,36,37,37,37,37,36,35,38,36,34,35,35,36,34,37,35,36,34,37,35,36,34,37,36,36,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,40,40,40,39,40,39,39,40,40,39,39,39,40,40,39,40,39,40,39,39,40,40,39,40,39,40,40,40,39,40,39,39,40,39,40,39,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,41,42,43,44,45,46,46,47,0,0,0,0,48,41,42,48,46,49,50,50,50,49,49,51,52,53,54,51,52,53,54,51,52,53,54,55,56,57,0,0,58,0,0,46,59,60,61,49,62,61,63,49,49,63,49,49,0,0,62,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,62,0,0,0,0,0,0,47,64,65,66,67,68,0,0,0,0,47,64,65,66,67,68,0,0,62,0,0,0,0,62,0,0,0,0,62,0,0,62,0,0,43,43,43,69,42,42,55,48,54,0,53,53,0,70,71,54,0,0,0,0,0,0,0,0,0,53,72,53,72,63,49,63,49,49,55,46,59,45,69,73,74,75,74,75,51,53,54,53,54,49,46,49,70,71,49,59,76,73,51,53,72,70,71,46,77,76,77,51,53,72,51,53,72,78,59,73,79,55,55,50,70,71,49,49,59,70,71,62,0,0,0,0,0,51,53,54,51,51,60,78,80,42,43,62,0,0,47,57,77,62,74,50,75,51,49,63,60,48,53,46,56,61,70,71,55,56,56,64,65,67,55,81,81,82,44,44,80,66,83,79,84,69,73,45,41,65,42,43,43,85,86,87,88,89,90,91,81,92,69,73,45,69,73,45,69,73,45,69,73,45,69,73,45,69,73,45,69,73,45,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,83,85,93,58,67,94,95,75,98,100,78,52,54,72,71,76,104,55,82,85,86,87,88,96,97,99,84,89,90,101,92,91,81,87,89,90,91,81,87,81,101,101,99,84,90,90,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,75,98,100,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,102,103,71,92,76,91,104,44,81,55,59,82,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,75,98,100,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,102,103,71,92,76,91,104,44,81,55,59,82,47,41,57,77,64,62,65,66,80,42,83,43,79,74,50,51,49,63,60,48,53,46,56,61,69,73,70,45,84,84,69,73,45,66,83,79,66,83,79,82,90,81,96,89,101,103,96,101,96,89,101,41,65,80,42,83,43,79,44,90,87,87,85,67,87,88,93,94,95,91,81,104,82,81,89,90,89,90,87,93,58,67,94,95,75,98,100,78,52,54,72,71,76,104,55,82,69,73,45,47,41,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,85,93,69,73,45,87,89,90,91,81,81,102,88,47,47,41,41,85,85,93,57,77,86,86,58,58,64,64,62,62,65,65,66,66,80,80,67,42,42,83,83,87,87,94,94,43,43,79,79,88,88,95,95,74,74,50,50,96,96,75,75,97,97,98,98,99,99,100,100,84,84,78,78,51,51,49,49,63,60,48,89,89,52,52,53,53,46,46,56,56,61,61,90,54,68,69,69,69,69,69,73,73,73,73,73,72,70,70,45,45,45,45,45,101,101,102,103,71,71,92,76,91,91,104,104,44,44,81,81,55,59,82,82,87,99,100,47,47,41,85,93,57,57,77,77,86,58,64,62,62,65,65,65,65,65,65,66,66,66,80,80,80,80,80,80,67,67,67,42,42,83,87,94,43,43,43,79,88,95,74,74,50,50,50,96,75,97,98,99,100,84,78,51,51,49,49,63,63,60,60,48,48,89,52,53,53,46,46,56,56,61,61,90,54,68,68,68,69,73,72,70,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,69,73,45,69,73,45,69,73,45,41,42,43,69,73,45,83,43,41,65,66,80,42,83,43,79,86,86,41,64,65,66,80,42,83,43,79,69,73,45,103,85,87,88,97,84,89,90,81,82,84,67,87,88,94,95,87,99,100,69,73,45,69,73,45,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,85,86,87,88,96,97,99,84,89,90,101,92,91,81,69,73,45,41,65,42,69,73,45,82,53,43,42,43,41,42,43,53,41,65,42,43,53,80,41,65,42,43,65,42,43,91,59,98,101,67,90,82,90,92,87,99,100,89,90,89,90,82,101,47,41,93,57,77,86,58,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,82,90,83,83,66,80,42,83,43,79,84,85,86,87,88,96,97,99,84,89,90,101,92,91,81,85,86,87,88,96,97,99,89,90,101,92,91,81,88,97,99,84,95,98,100,69,73,45,90,81,90,92,64,86,96,101,97,98,81,98,97,81,84,90,93,58,94,95,75,98,100,78,52,54,72,71,76,104,55,82,47,41,57,77,64,62,65,66,80,42,83,43,79,74,50,51,49,63,60,48,53,46,56,61,69,73,70,45,44,85,87,88,90,92,91,81,104,82,67,88,94,95,85,87,88,90,92,91,81,90,80,101,102,101,102,101,66,83,79,101,102,0,85,86,87,88,89,101,91,81,67,87,94,86,86,81,90,90,59,90,92,69,73,45,90,90,90,84,81,90,82,82,81,82,84,81,81,81,82,69,73,45,81,81,84,92,87,89,90,91,81,84,84,90,81,96,101,90,87,87,85,87,88,91,81,81,89,90,89,90,87,85,81,88,87,99,86,86,87,97,84,81,84,87,88,87,99,91,101,90,90,92,87,99,89,90,89,90,101,90,88,97,99,84,90,81,90,92,86,96,101,84,90,67,88,90,101,101,101,101,87,86,86,81,90,90,90,92,90,90,90,84,81,90,84,81,86,86,85,87,88,91,81,81,90,86,86,87,88,81,81,101,87,88,81,43,86,86,85,67,87,88,93,94,95,91,81,104,82,69,73,45,44,44,69,73,45,81,90,86,86,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,75,98,100,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,102,103,71,92,76,91,104,44,81,55,59,82,65,47,41,85,86,58,64,62,65,66,80,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,89,52,53,46,56,61,70,101,71,91,104,44,81,82,65,69,73,45,67,87,88,88,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,47,41,85,93,57,77,86,58,64,62,65,66,80,67,42,83,87,94,43,79,88,95,74,50,96,75,97,98,99,100,84,78,51,49,63,60,48,89,52,53,46,56,61,90,54,68,69,73,72,70,45,101,102,103,71,92,76,91,104,44,81,55,59,82,81,81,65,65,101,102,87,89,90,91,81,67,87,88,81,82,82,43,105,105,105,105,105,106,107,108,108,106,107,108,106,107,109,110,111,112,113,114,109,110,111,112,113,114,110,112,109,111,112,113,114,115,115,115,115,115,116,116,116,117,117,117,118,118,117,118,117,117,118,117,119,120,119,119,120,119,119,119,119,121,121,121,122,123,124,123,125,123,126,124,122,123,123,123,122,123,123,126,124,122,127,127,0,0,0,128,129,128,129,128,129,129,128,129,129,128,129,128,129,130,128,128,129,128,129,128,129,128,129],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],null,null,null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["ipv4address",3]],[["result",6],["option",4]]],[[["ipv6address",3]],[["result",6],["option",4]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["neighbor",3]],[[],["route",3]],[[]],[[]],[[]],[[]],[[],["ethernetaddress",3]],[[["ethernetaddress",3]]],null,[[["instant",3],["ethernetaddress",3],["ipaddress",4]]],[[],["interface",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8],["ipaddress",4]],["bool",15]],[[["into",8],["ipaddress",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["ipv4address",3]]],[[],[["option",4],["ipv4address",3]]],[[["into",8],["instant",3],["ipaddress",4]],[["bool",15],["result",6]]],[[["into",8],["instant",3],["ipaddress",4]],[["bool",15],["result",6]]],[[["neighborcache",3]]],[[]],[[],["cache",3]],[[],["routes",3]],[[["ipv4address",3]],["route",3]],[[["ipv6address",3]],["route",3]],[[["usize",15]],["cache",3]],[[["instant",3],["socketset",3]],[["bool",15],["result",6]]],[[["socketset",3],["instant",3]],[["option",4],["instant",3]]],[[["socketset",3],["instant",3]],[["option",4],["duration",3]]],null,[[],["routes",3]],[[],["interfacebuilder",3]],[[],["routes",3]],[[["ethernetaddress",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["fnonce",8]]],[[["fnonce",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],[[],["devicecapabilities",3]],[[],["devicecapabilities",3]],[[],["devicecapabilities",3]],[[],["devicecapabilities",3]],[[],["devicecapabilities",3]],[[],["devicecapabilities",3]],null,[[],["pcaplinktype",4]],[[],["pcapmode",4]],[[],["checksum",4]],[[],["checksumcapabilities",3]],[[],["devicecapabilities",3]],[[]],[[]],[[]],[[]],[[]],[[["pcaplinktype",4]],["ordering",4]],[[["instant",3]],["result",6]],[[["usize",15],["instant",3]],["result",6]],[[],["u8",15]],[[],["checksum",4]],[[],["checksumcapabilities",3]],[[],["devicecapabilities",3]],[[],["u8",15]],[[["pcaplinktype",4]],["bool",15]],[[["pcapmode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pcaplinktype",4]]],[[["pcaplinktype",4]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["u64",15]],null,[[],["u64",15]],[[["pcaplinktype",4]],["bool",15]],[[],["tracer",3]],[[["u32",15]],["faultinjector",3]],[[],["fuzzinjector",3]],[[["pcapmode",4],["pcaplinktype",4]],["pcapwriter",3]],[[],["loopback",3]],[[["instant",3]]],[[["instant",3]]],[[["usize",15],["instant",3]]],[[["usize",15],["instant",3]]],[[["pcaplinktype",4]],[["option",4],["ordering",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[["duration",3]]],[[["u8",15]]],[[["u8",15]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[["u16",15]]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],[["option",4],["duration",3]]],[[],["handle",3]],[[["ipendpoint",3],["into",8]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["state",4]],[[],["handle",3]],[[]],[[]],[[]],[[["handle",3]],["ordering",4]],[[],["result",6]],[[],["handle",3]],[[]],[[]],[[["socketref",3],["socket",4]],[["option",4],["socketref",3]]],[[["socketref",3],["socket",4]],[["option",4],["socketref",3]]],[[["socketref",3],["socket",4]],[["option",4],["socketref",3]]],[[]],[[],["ipendpoint",3]],[[["state",4]],["bool",15]],[[["handle",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["handle",3]],[["socketref",3],["anysocket",8]]],[[],["sockethandle",3]],[[],["sockethandle",3]],[[],["sockethandle",3]],[[]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u8",15]]],[[]],[[]],[[]],[[],["socket",4]],[[]],[[]],[[],["socket",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],[["option",4],["duration",3]]],[[],["result",6]],[[],["ipendpoint",3]],[[],["bool",15]],[[],["bool",15]],[[["handle",3]],["bool",15]],[[]],[[["udpsocketbuffer",6]],["udpsocket",3]],[[],["tcpsocket",3]],[[],["set",3]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[["handle",3]],[["option",4],["ordering",4]]],[[],["usize",15]],[[],["usize",15]],[[],["result",6]],[[["usize",15]],["result",6]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[]],[[],["result",6]],[[],["result",6]],[[],["usize",15]],[[],["usize",15]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[["handle",3]]],[[],["ipendpoint",3]],[[["handle",3]],["socket",4]],[[["handle",3]]],[[["usize",15],["ipendpoint",3]],["result",6]],[[],["result",6]],[[],["usize",15]],[[],["usize",15]],[[["ipendpoint",3]],["result",6]],[[],[["usize",15],["result",6]]],[[["option",4],["duration",3]]],[[["option",4],["u8",15]]],[[["option",4],["u8",15]]],[[["option",4],["duration",3]]],[[["option",4],["duration",3]]],[[],["state",4]],[[],[["option",4],["duration",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["result",6]],null,null,null,null,null,null,[[["usize",15]],[["toomanyholeserror",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["packetmetadata",3]],[[]],[[],["usize",15]],[[],["result",6]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["result",6]],[[],["result",6]],[[],["usize",15]],[[],["result",6]],[[["usize",15]],["result",6]],[[["usize",15]]],[[]],[[],["result",6]],[[],["result",6]],[[],["usize",15]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["managedslice",4]],["ringbuffer",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["assembleriter",3]],[[],["usize",15]],[[["usize",15]],["assembler",3]],[[],["ringbuffer",3]],[[],["packetbuffer",3]],[[],["usize",15]],[[],["usize",15]],[[],["result",6]],[[["usize",15]],["usize",15]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]],["usize",15]],null,null,[[["duration",3]],["instant",3]],[[["duration",3]],["duration",3]],[[["duration",3]]],[[["duration",3]]],[[]],[[]],[[]],[[]],[[],["instant",3]],[[],["duration",3]],[[]],[[]],[[["instant",3]],["ordering",4]],[[["duration",3]],["ordering",4]],[[],["duration",3]],[[["u32",15]],["duration",3]],[[["u32",15]]],[[["instant",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["instant",3]],["instant",3]],[[]],[[["systemtime",3]],["instant",3]],[[["duration",3]],["duration",3]],[[]],[[["into",8],["i64",15]],["instant",3]],[[["u64",15]],["duration",3]],[[["into",8],["i64",15]],["instant",3]],[[["u64",15]],["duration",3]],[[]],[[],["systemtime",3]],[[]],[[],["duration",3]],[[],["i64",15]],[[],["u64",15]],null,null,[[["u32",15]],["duration",3]],[[["u32",15]]],[[["instant",3]],["bool",15]],[[["duration",3]],["bool",15]],[[],["instant",3]],[[["instant",3]],[["option",4],["ordering",4]]],[[["duration",3]],[["option",4],["ordering",4]]],[[],["i64",15]],[[],["u64",15]],[[["instant",3]],["duration",3]],[[["duration",3]],["instant",3]],[[["duration",3]],["duration",3]],[[["duration",3]]],[[["duration",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["i64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["seqnumber",3]],null,[[["usize",15]],["seqnumber",3]],[[["usize",15]]],null,[[],["address",4]],[[],["address",3]],[[],["address",3]],[[]],[[],["routerflags",3]],[[],["neighborflags",3]],[[],["prefixinfoflags",3]],[[]],[[]],[[]],[[]],[[],[["option",4],["address",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[["routerflags",3]],["routerflags",3]],[[["neighborflags",3]],["neighborflags",3]],[[["prefixinfoflags",3]],["prefixinfoflags",3]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[["routerflags",3]],["routerflags",3]],[[["neighborflags",3]],["neighborflags",3]],[[["prefixinfoflags",3]],["prefixinfoflags",3]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["routerflags",3]],["routerflags",3]],[[["neighborflags",3]],["neighborflags",3]],[[["prefixinfoflags",3]],["prefixinfoflags",3]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["address",3],["option",4]]],[[["usize",15]],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ethertype",4]],[[],["address",3]],[[],["frame",3]],[[],["repr",3]],[[],["hardware",4]],[[],["operation",4]],[[],["packet",3]],[[],["repr",4]],[[],["version",4]],[[],["protocol",4]],[[],["address",4]],[[],["cidr",4]],[[],["endpoint",3]],[[],["repr",4]],[[],["address",3]],[[],["cidr",3]],[[],["packet",3]],[[],["repr",3]],[[],["address",3]],[[],["cidr",3]],[[],["packet",3]],[[],["repr",3]],[[],["type",4]],[[],["failuretype",4]],[[],["repr",4]],[[],["repr",3]],[[],["repr",3]],[[],["repr",4]],[[],["message",4]],[[],["dstunreachable",4]],[[],["redirect",4]],[[],["timeexceeded",4]],[[],["paramproblem",4]],[[],["packet",3]],[[],["repr",4]],[[],["message",4]],[[],["dstunreachable",4]],[[],["paramproblem",4]],[[],["timeexceeded",4]],[[],["packet",3]],[[],["repr",4]],[[],["repr",4]],[[],["routerflags",3]],[[],["neighborflags",3]],[[],["repr",4]],[[],["type",4]],[[],["prefixinfoflags",3]],[[],["prefixinformation",3]],[[],["redirectedheader",3]],[[],["repr",4]],[[],["addressrecord",3]],[[],["repr",4]],[[],["packet",3]],[[],["repr",3]],[[],["seqnumber",3]],[[],["packet",3]],[[],["tcpoption",4]],[[],["control",4]],[[],["repr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ethertype",4]],["ordering",4]],[[["address",3]],["ordering",4]],[[["hardware",4]],["ordering",4]],[[["operation",4]],["ordering",4]],[[["version",4]],["ordering",4]],[[["protocol",4]],["ordering",4]],[[["address",4]],["ordering",4]],[[["cidr",4]],["ordering",4]],[[["endpoint",3]],["ordering",4]],[[["address",3]],["ordering",4]],[[["cidr",3]],["ordering",4]],[[["address",3]],["ordering",4]],[[["cidr",3]],["ordering",4]],[[["type",4]],["ordering",4]],[[["failuretype",4]],["ordering",4]],[[["message",4]],["ordering",4]],[[["dstunreachable",4]],["ordering",4]],[[["redirect",4]],["ordering",4]],[[["timeexceeded",4]],["ordering",4]],[[["paramproblem",4]],["ordering",4]],[[["message",4]],["ordering",4]],[[["dstunreachable",4]],["ordering",4]],[[["paramproblem",4]],["ordering",4]],[[["timeexceeded",4]],["ordering",4]],[[["routerflags",3]],["ordering",4]],[[["neighborflags",3]],["ordering",4]],[[["type",4]],["ordering",4]],[[["prefixinfoflags",3]],["ordering",4]],[[],["u8",15]],[[],["u8",15]],[[["routerflags",3]],["bool",15]],[[["neighborflags",3]],["bool",15]],[[["prefixinfoflags",3]],["bool",15]],[[["address",4]],["bool",15]],[[["address",3]],["bool",15]],[[["address",3]],["bool",15]],[[["cidr",4]],["bool",15]],[[["cidr",3]],["bool",15]],[[["cidr",3]],["bool",15]],null,[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],null,[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[],["address",3]],[[],["address",4]],[[],["endpoint",3]],[[],["address",3]],[[],["cidr",3]],[[],["address",3]],[[],["cidr",3]],[[],["seqnumber",3]],[[],["ipv6address",3]],[[],["bool",15]],[[],["u8",15]],[[],["address",3]],[[],["address",4]],[[],["address",3]],[[],["address",3]],null,null,null,[[],["u16",15]],[[],["u16",15]],null,null,[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[["frame",3]]],[[["packet",3]]],[[["asmut",8],["asref",8],["checksumcapabilities",3]]],[[["checksumcapabilities",3],["packet",3]]],[[["packet",3]]],[[["ipv6option",3]]],[[["header",3]]],[[["header",3]]],[[["header",3]]],[[["checksumcapabilities",3],["packet",3]]],[[["checksumcapabilities",3],["packet",3],["ipaddress",4]]],[[["packet",3]]],[[["ndiscoption",3]]],[[["packet",3]]],[[["checksumcapabilities",3],["ipaddress",4],["packet",3]]],[[]],[[["checksumcapabilities",3],["packet",3],["ipaddress",4]]],[[],["routerflags",3]],[[],["neighborflags",3]],[[],["prefixinfoflags",3]],[[["ethertype",4]],["bool",15]],[[["address",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["hardware",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["version",4]],["bool",15]],[[["protocol",4]],["bool",15]],[[["address",4]],["bool",15]],[[["cidr",4]],["bool",15]],[[["endpoint",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["address",3]],["bool",15]],[[["cidr",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["address",3]],["bool",15]],[[["cidr",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["type",4]],["bool",15]],[[["failuretype",4]],["bool",15]],[[["ipv6option",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["message",4]],["bool",15]],[[["dstunreachable",4]],["bool",15]],[[["redirect",4]],["bool",15]],[[["timeexceeded",4]],["bool",15]],[[["paramproblem",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["message",4]],["bool",15]],[[["dstunreachable",4]],["bool",15]],[[["paramproblem",4]],["bool",15]],[[["timeexceeded",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["repr",4]],["bool",15]],[[["routerflags",3]],["bool",15]],[[["neighborflags",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["type",4]],["bool",15]],[[["prefixinfoflags",3]],["bool",15]],[[["ndiscoption",3]],["bool",15]],[[["prefixinformation",3]],["bool",15]],[[["redirectedheader",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["addressrecord",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["seqnumber",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["tcpoption",4]],["bool",15]],[[["control",4]],["bool",15]],[[["repr",3]],["bool",15]],[[],["ethertype",4]],null,[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[["ipaddress",4]]],[[["ipaddress",4]]],[[["ipaddress",4]]],[[],["bool",15]],null,[[],["u32",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["u16",15]],[[],["u16",15]],null,[[]],[[["u16",15]]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[["ipv6addr",3]],["address",4]],[[]],[[["ipv4address",3]]],[[["ipv6address",3]]],[[["ipaddr",4]],["address",4]],[[["ipv4addr",3]],["address",4]],[[["ipv4cidr",3]]],[[]],[[["ipv6cidr",3]]],[[]],[[],["endpoint",3]],[[["u16",15]],["endpoint",3]],[[["socketaddrv6",3]],["endpoint",3]],[[["socketaddrv4",3]],["endpoint",3]],[[["socketaddr",4]],["endpoint",3]],[[["ipv6repr",3]],["repr",4]],[[]],[[["ipv4repr",3]],["repr",4]],[[]],[[["ipv4addr",3]],["address",3]],[[]],[[]],[[]],[[["address",3]]],[[["ipv6addr",3]],["address",3]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[["u8",15]]],[[]],[[["type",4]],["failuretype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[["u8",15]]],[[]],[[["u8",15]]],[[]],[[]],[[["u8",15]]],[[]],[[["u8",15]]],[[]],[[]],[[["u8",15]]],[[]],[[]],[[["u8",15]]],[[["u8",15]]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[["repr",4]]],[[]],[[["repr",4]]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["routerflags",3],["option",4]]],[[["u8",15]],[["neighborflags",3],["option",4]]],[[["u8",15]],[["option",4],["prefixinfoflags",3]]],[[["u8",15]],["routerflags",3]],[[["u8",15]],["neighborflags",3]],[[["u8",15]],["prefixinfoflags",3]],[[["u8",15]],["routerflags",3]],[[["u8",15]],["neighborflags",3]],[[["u8",15]],["prefixinfoflags",3]],[[],["address",3]],[[],["address",3]],[[],["address",3]],[[["intoiterator",8]],["routerflags",3]],[[["intoiterator",8]],["neighborflags",3]],[[["intoiterator",8]],["prefixinfoflags",3]],[[["address",3]],[["cidr",3],["result",6]]],[[],["address",3]],[[["str",15]],[["result",4],["ethernetaddress",3]]],[[["str",15]],[["result",4],["ipaddress",4]]],[[["str",15]],[["ipcidr",4],["result",4]]],[[["str",15]],[["ipendpoint",3],["result",4]]],[[["str",15]],[["result",4],["ipv4address",3]]],[[["str",15]],[["result",4],["ipv4cidr",3]]],[[["str",15]],[["result",4],["ipv6address",3]]],[[["str",15]],[["result",4],["ipv6cidr",3]]],[[],["u8",15]],[[],["hardware",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["u8",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["usize",15]],[[],["address",3]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,[[],["u16",15]],[[],["u32",15]],null,[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[["routerflags",3]],["bool",15]],[[["neighborflags",3]],["bool",15]],[[["prefixinfoflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["usize",15]],null,[[],["ethernetaddress",3]],[[],[["repr",4],["result",6]]],[[],["u16",15]],null,[[],["ipv6address",3]],[[],["ipv6address",3]],[[],["bool",15]],[[],["bool",15]],null,[[],["u8",15]],[[],["u8",15]],[[],["message",4]],[[],["message",4]],[[],["usize",15]],[[],["u32",15]],[[["ethertype",4]],["bool",15]],[[["address",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["hardware",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["protocol",4]],["bool",15]],[[["address",4]],["bool",15]],[[["cidr",4]],["bool",15]],[[["endpoint",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["address",3]],["bool",15]],[[["cidr",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["address",3]],["bool",15]],[[["cidr",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["type",4]],["bool",15]],[[["failuretype",4]],["bool",15]],[[["ipv6option",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["header",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["message",4]],["bool",15]],[[["dstunreachable",4]],["bool",15]],[[["redirect",4]],["bool",15]],[[["timeexceeded",4]],["bool",15]],[[["paramproblem",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["message",4]],["bool",15]],[[["dstunreachable",4]],["bool",15]],[[["paramproblem",4]],["bool",15]],[[["timeexceeded",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["repr",4]],["bool",15]],[[["routerflags",3]],["bool",15]],[[["neighborflags",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["type",4]],["bool",15]],[[["prefixinfoflags",3]],["bool",15]],[[["ndiscoption",3]],["bool",15]],[[["prefixinformation",3]],["bool",15]],[[["redirectedheader",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["addressrecord",3]],["bool",15]],[[["repr",4]],["bool",15]],[[["packet",3]],["bool",15]],[[["repr",3]],["bool",15]],[[["seqnumber",3]],["bool",15]],[[["packet",3]],["bool",15]],[[["tcpoption",4]],["bool",15]],[[["repr",3]],["bool",15]],[[],["neighborflags",3]],[[],["address",3]],[[],["cidr",3]],[[["address",4],["u8",15]],["cidr",4]],[[["address",4],["u16",15]],["endpoint",3]],[[["u8",15]],["address",3]],[[["address",3],["u8",15]],["cidr",3]],[[["u16",15]],["address",3]],[[["address",3],["u8",15]],["cidr",3]],[[],["header",3]],[[],[["frame",3],["result",6]]],[[],[["result",6],["packet",3]]],[[],[["result",6],["packet",3]]],[[],[["packet",3],["result",6]]],[[],[["ipv6option",3],["result",6]]],[[],[["header",3],["result",6]]],[[],[["header",3],["result",6]]],[[],[["result",6],["header",3]]],[[],[["result",6],["packet",3]]],[[],[["result",6],["packet",3]]],[[],[["result",6],["ndiscoption",3]]],[[],["result",6]],[[],[["packet",3],["result",6]]],[[],[["packet",3],["result",6]]],[[],["frame",3]],[[],["packet",3]],[[],["packet",3]],[[],["packet",3]],[[],["ipv6option",3]],[[],["header",3]],[[],["header",3]],[[],["packet",3]],[[],["packet",3]],[[],["ndiscoption",3]],[[]],[[],["packet",3]],[[],["packet",3]],[[],["protocol",4]],[[],["protocol",4]],[[],["protocol",4]],[[],["protocol",4]],null,null,null,[[],["routerflags",3]],[[],["neighborflags",3]],[[],["prefixinfoflags",3]],[[],["u16",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],[["result",6],["version",4]]],[[],["operation",4]],[[],["type",4]],[[],["type",4]],[[]],[[],["ipv6optionsiterator",3]],[[]],null,[[]],[[]],[[],["u8",15]],[[],["u32",15]],[[["frame",3]],[["result",6],["repr",3]]],[[["packet",3]],[["result",6],["repr",4]]],[[["checksumcapabilities",3],["packet",3]],[["result",6],["repr",3]]],[[["packet",3]],[["result",6],["repr",3]]],[[["ipv6option",3]],[["result",6],["repr",4]]],[[["header",3]],[["repr",3],["result",6]]],[[["header",3]],[["repr",3],["result",6]]],[[["header",3]],[["repr",4],["result",6]]],[[["checksumcapabilities",3],["packet",3]],[["repr",4],["result",6]]],[[["checksumcapabilities",3],["ipaddress",4],["packet",3]],[["repr",4],["result",6]]],[[["packet",3]],[["result",6],["repr",4]]],[[["ndiscoption",3]],[["repr",4],["result",6]]],[[["packet",3]],[["result",6],["repr",4]]],[[["checksumcapabilities",3],["packet",3],["ipaddress",4]],[["repr",3],["result",6]]],[[],["result",6]],[[["checksumcapabilities",3],["packet",3],["ipaddress",4]],[["repr",3],["result",6]]],[[["ethertype",4]],[["option",4],["ordering",4]]],[[["address",3]],[["option",4],["ordering",4]]],[[["hardware",4]],[["option",4],["ordering",4]]],[[["operation",4]],[["option",4],["ordering",4]]],[[["version",4]],[["option",4],["ordering",4]]],[[["protocol",4]],[["option",4],["ordering",4]]],[[["address",4]],[["option",4],["ordering",4]]],[[["cidr",4]],[["option",4],["ordering",4]]],[[["endpoint",3]],[["option",4],["ordering",4]]],[[["address",3]],[["option",4],["ordering",4]]],[[["cidr",3]],[["option",4],["ordering",4]]],[[["address",3]],[["option",4],["ordering",4]]],[[["cidr",3]],[["option",4],["ordering",4]]],[[["type",4]],[["option",4],["ordering",4]]],[[["failuretype",4]],[["option",4],["ordering",4]]],[[["message",4]],[["option",4],["ordering",4]]],[[["dstunreachable",4]],[["option",4],["ordering",4]]],[[["redirect",4]],[["option",4],["ordering",4]]],[[["timeexceeded",4]],[["option",4],["ordering",4]]],[[["paramproblem",4]],[["option",4],["ordering",4]]],[[["message",4]],[["option",4],["ordering",4]]],[[["dstunreachable",4]],[["option",4],["ordering",4]]],[[["paramproblem",4]],[["option",4],["ordering",4]]],[[["timeexceeded",4]],[["option",4],["ordering",4]]],[[["routerflags",3]],[["option",4],["ordering",4]]],[[["neighborflags",3]],[["option",4],["ordering",4]]],[[["type",4]],[["option",4],["ordering",4]]],[[["prefixinfoflags",3]],[["option",4],["ordering",4]]],[[["seqnumber",3]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["u16",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],null,[[],["duration",3]],null,[[],["ipv6address",3]],null,[[],["prefixinfoflags",3]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[],["protocol",4]],[[],["protocol",4]],null,[[],["u8",15]],[[],["protocol",4]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["control",4]],[[],["duration",3]],[[],["recordtype",4]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[],["duration",3]],[[],["routerflags",3]],[[],["duration",3]],[[],["type",4]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],[["bool",15],["result",6]]],[[],["result",6]],[[],["seqnumber",3]],null,[[["bool",15],["routerflags",3]]],[[["neighborflags",3],["bool",15]]],[[["prefixinfoflags",3],["bool",15]]],[[["bool",15]]],[[["seqnumber",3]]],[[]],[[["u8",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["bool",15]]],[[["u8",15]]],[[["u8",15]]],[[["ipv6address",3]]],[[["bool",15]]],[[["u8",15]]],[[["address",3]]],[[["address",3]]],[[["address",3]]],[[["u16",15]]],[[["u16",15]]],[[["bool",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u8",15]]],[[["ethertype",4]]],[[["bool",15]]],[[["u32",15]]],[[["u16",15]]],[[["u16",15]]],[[["u8",15]]],[[["hardware",4]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["address",3]]],[[["u8",15]]],[[["u8",15]]],[[["u16",15]]],[[["u32",15]]],[[["u16",15]]],[[["ethernetaddress",3]]],[[["u16",15]]],[[["ipv6address",3]]],[[["ipv6address",3]]],[[["bool",15]]],[[["bool",15]]],[[["u8",15]]],[[["u8",15]]],[[["message",4]]],[[["message",4]]],[[["u32",15]]],[[["neighborflags",3]]],[[["protocol",4]]],[[["protocol",4]]],[[["protocol",4]]],[[["protocol",4]]],[[["u16",15]]],[[["bool",15]]],[[["u16",15]]],[[["u16",15]]],[[["operation",4]]],[[["type",4]]],[[["type",4]]],[[["u8",15]]],[[["u32",15]]],[[["usize",15]]],[[["u16",15]]],[[["u32",15]]],[[["duration",3]]],[[["ipv6address",3]]],[[["prefixinfoflags",3]]],[[["u8",15]]],[[["protocol",4]]],[[["u8",15]]],[[["protocol",4]]],[[["bool",15]]],[[["u8",15]]],[[["u8",15]]],[[["duration",3]]],[[["recordtype",4]]],[[["duration",3]]],[[["routerflags",3]]],[[["duration",3]]],[[["type",4]]],[[["bool",15]]],[[]],[[["u8",15]]],[[["seqnumber",3]]],[[]],[[]],[[["address",3]]],[[["address",3]]],[[["address",3]]],[[["u16",15]]],[[["u16",15]]],[[["bool",15]]],[[["ipv6address",3]]],[[]],[[]],[[["u16",15]]],[[["u8",15]]],[[["bool",15]]],[[["u16",15]]],[[["duration",3]]],[[["u8",15]]],[[["u8",15]]],[[["u16",15]]],[[],["address",3]],[[]],[[]],[[],["address",3]],[[],["address",4]],[[],["address",3]],[[],["address",3]],null,null,null,[[],["u16",15]],[[],["u16",15]],null,null,[[["routerflags",3]],["routerflags",3]],[[["neighborflags",3]],["neighborflags",3]],[[["prefixinfoflags",3]],["prefixinfoflags",3]],[[["seqnumber",3]],["usize",15]],[[["usize",15]],["seqnumber",3]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[],["bool",15]],[[],["ipv6address",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["u8",15]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["address",4]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[],["usize",15]],[[],["u16",15]],[[],["usize",15]],[[],["u8",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["bool",15]],[[],["u16",15]],[[["u8",15]],["address",4]],[[["u16",15]],["address",4]],[[],["duration",3]],null,[[],["bool",15]],[[],["bool",15]],[[["ipaddress",4]],["bool",15]],[[["ipaddress",4]],["bool",15]],[[["ipaddress",4]],["bool",15]],[[],["version",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15],["asref",8]],["prettyprinter",3]],[[["str",15]],["prettyindent",3]],[[["formatter",3],["asref",8],["prettyindent",3]],["result",6]],[[],["prettyprinter",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Error"],[3,"Routes"],[3,"EthernetInterfaceBuilder"],[3,"EthernetInterface"],[3,"Neighbor"],[3,"NeighborCache"],[3,"Route"],[4,"PcapMode"],[4,"Checksum"],[4,"PcapLinkType"],[8,"Device"],[3,"Tracer"],[3,"FaultInjector"],[3,"FuzzInjector"],[3,"PcapWriter"],[3,"Loopback"],[3,"ChecksumCapabilities"],[3,"DeviceCapabilities"],[8,"RxToken"],[8,"TxToken"],[8,"Fuzzer"],[8,"PcapSink"],[4,"TcpState"],[4,"Socket"],[3,"TcpSocket"],[3,"SocketSet"],[3,"UdpSocket"],[3,"SocketSetIter"],[3,"SocketSetIterMut"],[3,"SocketRef"],[3,"SocketSetItem"],[3,"SocketHandle"],[8,"AnySocket"],[3,"PacketMetadata"],[3,"Assembler"],[3,"RingBuffer"],[3,"PacketBuffer"],[8,"Resettable"],[3,"Instant"],[3,"Duration"],[3,"EthernetAddress"],[3,"Ipv4Address"],[3,"Ipv6Address"],[3,"TcpSeqNumber"],[3,"NdiscPrefixInfoFlags"],[4,"Icmpv6DstUnreachable"],[4,"EthernetProtocol"],[4,"Icmpv4ParamProblem"],[4,"Icmpv4DstUnreachable"],[4,"Ipv6OptionFailureType"],[4,"Icmpv4Message"],[4,"Icmpv4Repr"],[4,"Icmpv6Message"],[4,"Icmpv6Repr"],[4,"TcpOption"],[4,"Icmpv6ParamProblem"],[4,"ArpHardware"],[4,"ArpRepr"],[4,"TcpControl"],[4,"Icmpv4TimeExceeded"],[4,"Icmpv6TimeExceeded"],[4,"IpProtocol"],[4,"Icmpv4Redirect"],[4,"IpVersion"],[4,"IpAddress"],[4,"IpCidr"],[4,"IpRepr"],[4,"IcmpRepr"],[3,"NdiscRouterFlags"],[4,"NdiscOptionType"],[4,"NdiscOptionRepr"],[4,"NdiscRepr"],[3,"NdiscNeighborFlags"],[4,"Ipv6OptionType"],[4,"Ipv6OptionRepr"],[4,"MldRepr"],[4,"ArpOperation"],[4,"Ipv6RoutingRepr"],[3,"Ipv6Cidr"],[3,"IpEndpoint"],[3,"TcpPacket"],[3,"TcpRepr"],[3,"Ipv4Cidr"],[3,"Ipv6RoutingHeader"],[3,"EthernetFrame"],[3,"ArpPacket"],[3,"Ipv4Packet"],[3,"Ipv6Packet"],[3,"Icmpv4Packet"],[3,"Icmpv6Packet"],[3,"UdpPacket"],[3,"MldAddressRecord"],[3,"EthernetRepr"],[3,"Ipv4Repr"],[3,"Ipv6Repr"],[3,"Ipv6Option"],[3,"Ipv6HopByHopHeader"],[3,"Ipv6HopByHopRepr"],[3,"Ipv6FragmentHeader"],[3,"Ipv6FragmentRepr"],[3,"NdiscOption"],[3,"NdiscPrefixInformation"],[3,"NdiscRedirectedHeader"],[3,"UdpRepr"],[13,"EthernetIpv4"],[13,"EchoRequest"],[13,"EchoReply"],[13,"DstUnreachable"],[13,"DstUnreachable"],[13,"PktTooBig"],[13,"TimeExceeded"],[13,"ParamProblem"],[13,"EchoRequest"],[13,"EchoReply"],[13,"Unspecified"],[13,"Unknown"],[13,"Rpl"],[13,"Type2"],[13,"Query"],[13,"Report"],[13,"Unknown"],[13,"Redirect"],[13,"RouterAdvert"],[13,"NeighborAdvert"],[13,"RouterSolicit"],[13,"NeighborSolicit"],[13,"Unknown"],[3,"PrettyPrinter"],[3,"PrettyIndent"],[8,"PrettyPrint"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","t":[13,6,4,11,11,5,11,11,11,5,11,5,5,5,5,5,5,11,11,11],"n":["DifferentLengthArgs","HammingResult","StrSimError","borrow","borrow_mut","damerau_levenshtein","eq","fmt","from","hamming","into","jaro","jaro_winkler","levenshtein","normalized_damerau_levenshtein","normalized_levenshtein","osa_distance","try_from","try_into","type_id"],"q":["strsim","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Like optimal string alignment, but substrings can be …","","","","Calculates the number of positions in the two strings …","","Calculates the Jaro similarity between two strings. The …","Like Jaro but gives a boost to strings that have a common …","Calculates the minimum number of insertions, deletions, …","Calculates a normalized score of the …","Calculates a normalized score of the Levenshtein …","Like Levenshtein but allows for adjacent transpositions. …","","",""],"i":[1,0,0,1,1,0,1,1,1,0,1,0,0,0,0,0,0,1,1,1],"f":[null,null,null,[[]],[[]],[[["str",15]],["usize",15]],[[["strsimerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["hammingresult",6]],[[]],[[["str",15]],["f64",15]],[[["str",15]],["f64",15]],[[["str",15]],["usize",15]],[[["str",15]],["f64",15]],[[["str",15]],["f64",15]],[[["str",15]],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"StrSimError"]]},\
"textwrap":{"doc":"<code>textwrap</code> provides functions for word wrapping and filling …","t":[3,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11],"n":["HyphenSplitter","IntoWrapIter","NoHyphenation","WordSplitter","WrapIter","Wrapper","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_words","break_words","clone","clone","clone","clone_into","clone_into","clone_into","dedent","fill","fill","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","indent","initial_indent","initial_indent","into","into","into","into","into","into_iter","into_iter","into_wrap_iter","new","next","next","split","split","split","splitter","subsequent_indent","subsequent_indent","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width","with_splitter","wrap","wrap","wrap_iter","wrap_iter"],"q":["textwrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Simple and default way to split words: splitting on …","An iterator over the lines of the input string which owns …","Use this as a <code>Wrapper.splitter</code> to avoid any kind of …","An interface for splitting words.","An iterator over the lines of the input string which …","A Wrapper holds settings for wrapping and filling text. …","","","","","","","","","","","Change <code>self.break_words</code>. This controls if words longer …","Allow long words to be broken if they cannot fit on a …","","","","","","","Removes common leading whitespace from each line.","Fill a line of text at <code>width</code> characters. Strings are …","Fill a line of text at <code>self.width</code> characters. Strings are …","","","","","","","","","","","Add prefix to each non-empty line.","Change <code>self.initial_indent</code>. The initial indentation is …","Indentation used for the first line of output.","","","","","","","","Lazily wrap a line of text at <code>self.width</code> characters. …","Create a new Wrapper for wrapping at the specified width. …","","","Return all possible splits of word. Each split is a triple…","","","The method for splitting words. If the <code>hyphenation</code> feature…","Change <code>self.subsequent_indent</code>. The subsequent indentation …","Indentation used for subsequent lines of output.","","","","","","","","","","","","","","","","","","","The width in columns at which the text will be wrapped.","Use the given <code>WordSplitter</code> to create a new Wrapper for …","Wrap a line of text at <code>width</code> characters. Strings are …","Wrap a line of text at <code>self.width</code> characters. Strings are …","Lazily wrap a line of text at <code>width</code> characters. Strings …","Lazily wrap a line of text at <code>self.width</code> characters. …"],"i":[0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,3,3,1,2,3,1,2,3,0,0,3,1,2,3,4,5,1,2,3,4,5,0,3,3,1,2,3,4,5,4,5,3,3,4,5,6,1,2,3,3,3,1,2,3,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,3,3,0,3,0,3],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["wrapper",3]],null,[[],["nohyphenation",3]],[[],["hyphensplitter",3]],[[],["wrapper",3]],[[]],[[]],[[]],[[["str",15]],["string",3]],[[["usize",15],["str",15]],["string",3]],[[["str",15]],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["string",3]],[[["str",15]],["wrapper",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["intowrapiter",3]],[[["usize",15]],[["wrapper",3],["hyphensplitter",3]]],[[],[["option",4],["cow",4]]],[[],[["option",4],["cow",4]]],[[["str",15]],["vec",3]],[[["str",15]],["vec",3]],[[["str",15]],["vec",3]],null,[[["str",15]],["wrapper",3]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["usize",15]],["wrapper",3]],[[["usize",15],["str",15]],[["cow",4],["vec",3]]],[[["str",15]],[["vec",3],["cow",4]]],[[["usize",15],["str",15]],[["hyphensplitter",3],["intowrapiter",3]]],[[["str",15]],["wrapiter",3]]],"p":[[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"Wrapper"],[3,"IntoWrapIter"],[3,"WrapIter"],[8,"WordSplitter"]]},\
"tiny_http":{"doc":"Simple usage","t":[12,12,12,13,13,13,3,13,3,3,3,4,13,13,13,13,13,8,3,3,6,3,3,3,3,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["0","0","1","Connect","Delete","Get","HTTPVersion","Head","Header","HeaderField","IncomingRequests","Method","NonStandard","Options","Patch","Post","Put","ReadWrite","Request","Response","ResponseBox","Server","ServerConfig","SslConfig","StatusCode","Trace","add_header","addr","as_reader","as_ref","as_str","as_str","body_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","certificate","chunked_threshold","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default_reason_phrase","drop","drop","empty","eq","eq","eq","eq","eq","eq","equiv","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_data","from_file","from_str","from_str","from_str","from_string","headers","http","http_version","incoming_requests","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_writer","method","ne","ne","new","new","new_empty","next","num_connections","partial_cmp","partial_cmp","partial_cmp","partial_cmp","private_key","raw_print","recv","recv_timeout","remote_addr","respond","secure","server_addr","ssl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","url","value","with_chunked_threshold","with_data","with_header","with_status_code"],"q":["tiny_httpd":["","","","<code>CONNECT</code>","<code>DELETE</code>","<code>GET</code>","HTTP version (usually 1.0 or 1.1).","<code>HEAD</code>","Represents a HTTP header.","Field of a header (eg. <code>Content-Type</code>, <code>Content-Length</code>, etc.)","","HTTP request methods","Request methods not standardized by the IETF","<code>OPTIONS</code>","<code>PATCH</code>","<code>POST</code>","<code>PUT</code>","Dummy trait that regroups the <code>Read</code> and <code>Write</code> traits.","Represents an HTTP request made by a client.","Object representing an HTTP response whose purpose is to …","A <code>Response</code> without a template parameter.","The main class of this library.","Represents the parameters required to create a server.","Configuration of the server for SSL.","Status code of a request or response.","<code>TRACE</code>","Adds a header to the list. Does all the checks.","The addresses to listen to.","Allows to read the body of the request.","","","","Returns the length of the body in bytes.","","","","","","","","","","","","","","","","","","","","","","","Turns this response into a <code>Response<Box<Read + Send>></code>.","Contains the public certificate to send to clients.","The current <code>Content-Length</code> threshold for switching over to…","","","","","","","","","","","","","","","","","","","Returns the default reason phrase for this status code. …","","","Builds an empty <code>Response</code> with the given status code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>Header</code> from two <code>Vec<u8></code>s or two <code>&[u8]</code>s.","","","Builds a new <code>Response</code> from a <code>File</code>.","","","","","Returns a list of all headers sent by the client.","Shortcut for a simple server on a specific address.","Returns the HTTP version of the request.","Returns an iterator for all the incoming requests.","","","","","","","","","","","","","Turns the <code>Request</code> into a writer.","Returns the method requested by the client (eg. <code>GET</code>, <code>POST</code>…","","","Creates a new Response object.","Builds a new server that listens on the specified address.","DEPRECATED. Use <code>empty</code> instead.","","Returns the number of clients currently connected to the …","","","","","Contains the ultra-secret private key used to decode …","Prints the HTTP response to a writer.","Blocks until an HTTP request has been submitted and …","Same as <code>recv()</code> but doesn’t block longer than timeout","Returns the address of the client that sent this request.","Sends a response to this request.","Returns true if the request was made through HTTPS.","Returns the address the server is listening to.","If <code>Some</code>, then the server will use SSL to encode the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Same as <code>recv()</code> but doesn’t block.","","","","","","","","","","","","Sends a response with a <code>Connection: upgrade</code> header, then …","Returns the resource requested by the client.","","Set a threshold for <code>Content-Length</code> where we chose chunked …","Returns the same request, but with different data.","Returns the same request, but with an additional header.","Returns the same request, but with a different status …"],"i":[1,2,2,3,3,3,0,3,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,3,4,5,6,1,7,3,6,6,4,8,9,1,10,7,3,2,5,11,6,4,8,9,1,10,7,3,2,5,11,4,11,4,4,1,10,7,3,2,5,11,4,1,10,7,3,2,5,11,1,2,1,6,8,4,1,1,7,3,2,2,7,10,6,1,10,10,7,7,3,3,2,2,5,11,6,4,8,9,1,1,1,1,1,1,1,10,7,3,2,2,5,11,10,7,4,4,10,7,3,4,6,8,6,8,6,4,8,9,1,10,7,3,2,5,11,9,6,6,1,2,4,8,4,9,8,1,1,2,2,11,4,8,8,6,6,6,8,5,4,1,10,7,3,2,5,11,10,7,3,2,6,4,8,9,1,10,7,3,2,5,11,6,4,8,9,1,10,7,3,2,5,11,8,6,4,8,9,1,10,7,3,2,5,11,6,6,10,4,4,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["read",8]],[[],["u16",15]],[[],["asciistr",3]],[[],["str",15]],[[],[["usize",15],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["responsebox",6]],null,[[],["usize",15]],[[],[["empty",3],["response",3]]],[[],["statuscode",3]],[[],["header",3]],[[],["headerfield",3]],[[],["method",4]],[[],["httpversion",3]],[[],["serverconfig",3]],[[],["sslconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["statuscode",3]],["ordering",4]],[[["httpversion",3]],["ordering",4]],[[],["str",15]],[[]],[[]],[[],[["empty",3],["response",3]]],[[["statuscode",3]],["bool",15]],[[["u16",15]],["bool",15]],[[["headerfield",3]],["bool",15]],[[["method",4]],["bool",15]],[[],["bool",15]],[[["httpversion",3]],["bool",15]],[[["str",15]],["bool",15]],null,[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u8",15]],["statuscode",3]],[[["u16",15]],["statuscode",3]],[[["i16",15]],["statuscode",3]],[[["u32",15]],["statuscode",3]],[[["i32",15]],["statuscode",3]],[[]],[[["i8",15]],["statuscode",3]],[[]],[[]],[[]],[[],["httpversion",3]],[[]],[[]],[[]],[[],[["result",4],["header",3]]],[[],[["result",4],["fromasciierror",3],["headerfield",3]]],[[],[["cursor",3],["response",3]]],[[["file",3]],[["response",3],["file",3]]],[[["str",15]],[["result",4],["header",3]]],[[["str",15]],[["headerfield",3],["result",4]]],[[["str",15]],[["result",4],["method",4]]],[[],[["cursor",3],["response",3]]],[[]],[[],[["result",4],["server",3],["box",3]]],[[],["httpversion",3]],[[],["incomingrequests",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3],["write",8]]],[[],["method",4]],[[["statuscode",3]],["bool",15]],[[["httpversion",3]],["bool",15]],[[["option",4],["receiver",3],["vec",3],["option",4],["usize",15],["header",3],["statuscode",3]],["response",3]],[[["serverconfig",3]],[["result",4],["server",3],["box",3]]],[[["statuscode",3]],[["empty",3],["response",3]]],[[],[["request",3],["option",4]]],[[],["usize",15]],[[["u16",15]],[["ordering",4],["option",4]]],[[["statuscode",3]],[["option",4],["ordering",4]]],[[["httpversion",3]],[["ordering",4],["option",4]]],[[],[["ordering",4],["option",4]]],null,[[["httpversion",3],["bool",15],["write",8],["option",4],["str",15]],["ioresult",6]],[[],[["request",3],["ioresult",6]]],[[["duration",3]],[["ioresult",6],["option",4]]],[[],["socketaddr",4]],[[["response",3]],[["result",4],["ioerror",3]]],[[],["bool",15]],[[],["socketaddr",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["ioresult",6],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["read",8],["str",15],["response",3]],[["box",3],["readwrite",8]]],[[],["str",15]],null,[[["usize",15]],["response",3]],[[["usize",15],["option",4]],["response",3]],[[],["response",3]],[[],["response",3]]],"p":[[3,"StatusCode"],[3,"HTTPVersion"],[4,"Method"],[3,"Response"],[3,"ServerConfig"],[3,"Request"],[3,"HeaderField"],[3,"Server"],[3,"IncomingRequests"],[3,"Header"],[3,"SslConfig"]]},\
"tinyvec":{"doc":"<code>tinyvec</code> provides 100% safe vec-like data structures.","t":[8,3,3,3,3,18,18,13,13,13,13,13,13,16,3,3,4,4,4,3,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Array","ArrayVec","ArrayVecDrain","ArrayVecIterator","ArrayVecSplice","CAPACITY","CAPACITY","Heap","Heap","Heap","Inline","Inline","Inline","Item","SliceVec","SliceVecDrain","TinyVec","TinyVecDrain","TinyVecIterator","TinyVecSplice","append","append","append","array_vec","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_slice","as_mut_slice","as_mut_slice","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_slice","as_slice","as_slice","as_slice","as_slice","as_slice","as_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clear","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","cmp","count","count","count","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drain","drain","drain","drain_to_vec","drain_to_vec_and_reserve","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend_from_slice","extend_from_slice","extend_from_slice","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array_len","from_array_len","from_iter","from_iter","from_slice_len","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","is_heap","is_inline","last","last","last","last","len","len","len","len","len","move_to_the_heap","move_to_the_heap_and_reserve","new","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop","push","push","push","remove","remove","remove","reserve","reserve_exact","resize","resize","resize","resize_with","resize_with","resize_with","retain","retain","retain","set_len","set_len","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","splice","splice","split_off","split_off","split_off","swap_remove","swap_remove","swap_remove","tiny_vec","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","truncate","try_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_array_len","try_from_array_len","try_from_slice_len","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity"],"q":["tinyvecd":["A trait for types that are an array.","An array-backed, vector-like data structure.","Draining iterator for [<code>ArrayVec</code>]","Iterator for consuming an <code>ArrayVec</code> and returning owned …","Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>","The number of slots in the thing.","The number of slots in the thing.","","","","","","","The type of the items in the thing.","A slice-backed vector-like data structure.","Draining iterator for [<code>SliceVec</code>]","A vector that starts inline, but can automatically move …","Draining iterator for <code>TinyVecDrain</code>","Iterator for consuming an <code>TinyVec</code> and returning owned …","Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>","","Move all values from <code>other</code> into this vec.","Move all values from <code>other</code> into this vec.","Helper to make an <code>ArrayVec</code>.","","","","A <code>*mut</code> pointer to the backing slice.","A <code>*mut</code> pointer to the backing array.","A mutable pointer to the backing array.","Performs a <code>deref_mut</code>, into unique slice form.","Performs a <code>deref_mut</code>, into unique slice form.","Helper for getting the mut slice.","A <code>*const</code> pointer to the backing slice.","A <code>*const</code> pointer to the backing array.","A const pointer to the backing array.","","","","Gives a shared slice over the whole thing.","Returns the remaining items of this iterator as a slice.","Performs a <code>deref</code>, into shared slice form.","Returns the remaining items of this iterator as a slice.","Performs a <code>deref</code>, into shared slice form.","Helper for getting the shared slice.","Gives a unique slice over the whole thing.","","","","","","","","","","","","","","","","","","","","","","","","","","","The capacity of the <code>SliceVec</code>.","The capacity of the <code>ArrayVec</code>.","The capacity of the <code>TinyVec</code>.","Truncates the <code>SliceVec</code> down to length 0.","Truncates the <code>ArrayVec</code> down to length 0.","Removes all elements from the vec.","","","","","","","","","","","Create a default-initialized instance of ourself, similar …","","","","","","","","","","Creates a draining iterator that removes the specified …","Creates a draining iterator that removes the specified …","Creates a draining iterator that removes the specified …","Drains all elements to a Vec","Drains all elements to a Vec, but reserves additional …","","","","","","","","","","","","","","","","Clone each element of the slice into this <code>ArrayVec</code>.","Clone each element of the slice into this vec.","Fill the vector until its capacity has been reached.","Fill the vector until its capacity has been reached.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uses the full slice as the initial length.","Calls <code>AsRef::as_mut</code> then uses the full slice as the …","","","","","","The output has a length equal to the full array.","","","","","","","","","Wraps up an array and uses the given length as the …","Wraps up an array and uses the given length as the …","","","Wraps up a slice and uses the given length as the initial …","","","","","","","","","","Inserts an item at the position given, moving all …","Inserts an item at the position given, moving all …","Inserts an item at the position given, moving all …","","","","","","","","","","","Returns the inner array of the <code>ArrayVec</code>.","","","","","","","","","","","Checks if the length is 0.","Checks if the length is 0.","If the vec is empty.","Returns whether elements are on heap","Returns whether elements are on stack","","","","","","The length of the <code>SliceVec</code> (in elements).","","The length of the <code>ArrayVec</code> (in elements).","The length of the vec (in elements).","Moves the content of the TinyVec to the heap, if it’s …","If TinyVec is inline, moves the content of it to the heap.…","Makes a new, empty <code>ArrayVec</code>.","Makes a new, empty vec.","","","","","","","","","","","","","","","","","","","","Remove and return the last element of the vec, if there …","Remove and return the last element of the vec, if there …","Remove and return the last element of the vec, if there …","Place an element onto the end of the vec.","Place an element onto the end of the vec.","Place an element onto the end of the vec.","Removes the item at <code>index</code>, shifting all others down by …","Removes the item at <code>index</code>, shifting all others down by …","Removes the item at <code>index</code>, shifting all others down by …","Reserves additional space. Moves to the heap if array can…","Reserves additional space. Moves to the heap if array can…","As <code>resize_with</code> and it clones the value as the closure.","As <code>resize_with</code> and it clones the value as the closure.","Resize the vec to the new length.","Resize the vec to the new length.","Resize the vec to the new length.","Resize the vec to the new length.","Walk the vec and keep only the elements that pass the …","Walk the vec and keep only the elements that pass the …","Walk the vec and keep only the elements that pass the …","Forces the length of the vector to <code>new_len</code>.","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector as much as possible. …","","","","","","","Creates a splicing iterator that removes the specified …","Creates a splicing iterator that removes the specified …","Splits the collection at the point given.","Splits the collection at the point given.","Splits the collection at the point given.","Remove an element, swapping the end of the vec into its …","Remove an element, swapping the end of the vec into its …","Remove an element, swapping the end of the vec into its …","Helper to make a <code>TinyVec</code>.","","","","","","Reduces the vec’s length to the given value.","Reduces the vec’s length to the given value.","Reduces the vec’s length to the given value.","Move all values from <code>other</code> into this vec. If appending …","","","","","","","","","","","Wraps an array, using the given length as the starting …","Wraps an array, using the given length as the starting …","Wraps a slice, using the given length as the starting …","Tries to insert an item at the position given, moving all …","","","","","","","","","","","Tries to place an element onto the end of the vec. …","","","","","","","","","","","Makes a new TinyVec with <em>at least</em> the given capacity."],"i":[0,0,0,0,0,1,1,2,3,4,2,3,4,1,0,0,0,0,0,0,5,6,4,0,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,1,7,5,3,6,4,1,8,7,9,5,5,10,2,11,3,6,6,4,4,8,7,9,5,5,10,2,11,3,6,6,4,4,5,6,4,5,6,4,6,4,6,4,5,6,4,7,2,3,1,5,6,4,5,6,4,5,6,4,5,6,4,6,6,8,10,11,5,5,6,6,6,4,4,4,5,6,4,5,6,4,5,6,7,5,5,5,5,5,5,5,5,5,3,6,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,9,2,8,7,9,5,5,5,10,2,11,3,6,6,6,4,4,4,4,4,4,6,4,6,4,5,5,6,4,5,6,4,5,6,4,5,6,4,8,7,9,5,10,2,11,3,6,4,6,8,7,9,5,10,2,11,3,6,4,5,6,4,4,4,7,9,2,3,8,5,11,6,4,4,4,6,4,8,7,9,10,2,11,3,8,7,9,2,11,7,9,2,3,5,6,4,5,6,4,5,6,4,5,6,4,4,4,5,6,4,5,6,4,5,6,4,5,6,4,8,7,9,2,11,3,6,4,5,6,4,5,6,4,0,6,4,5,6,4,5,6,4,6,8,7,9,5,10,2,11,3,6,4,6,4,5,6,8,7,9,5,10,2,11,3,6,4,6,8,7,9,5,10,2,11,3,6,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["arrayvec",3]],[[],["tinyvec",4]],[[]],[[]],[[],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rangebounds",8],["usize",15]],["slicevecdrain",3]],[[],["arrayvecdrain",3]],[[["rangebounds",8],["usize",15]],["tinyvecdrain",4]],[[],["vec",3]],[[["usize",15]],["vec",3]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arrayvec",3]]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[["usize",15]]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["fnmut",8],["usize",15]]],[[["fnmut",8],["usize",15]]],[[["fnmut",8],["usize",15]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["fuse",3],["arrayvecsplice",3]]],[[],[["tinyvecsplice",3],["fuse",3]]],[[["usize",15]],["slicevec",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]]],"p":[[8,"Array"],[4,"TinyVecDrain"],[4,"TinyVecIterator"],[4,"TinyVec"],[3,"SliceVec"],[3,"ArrayVec"],[3,"ArrayVecIterator"],[3,"ArrayVecSplice"],[3,"ArrayVecDrain"],[3,"SliceVecDrain"],[3,"TinyVecSplice"]]},\
"tinyvec_macros":{"doc":"","t":[14],"n":["impl_mirrored"],"q":["tinyvec_macros"],"d":[""],"i":[0],"f":[null],"p":[]},\
"unicode_bidi":{"doc":"This crate implements the Unicode Bidirectional Algorithm …","t":[13,13,13,13,4,3,13,13,13,13,13,3,13,13,13,13,6,13,13,13,13,3,13,13,13,13,13,17,13,5,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,17,17,17,17,17,17,17,17,17,17,17,17,4,17,3,17,17,13,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AL","AN","B","BN","BidiClass","BidiInfo","CS","EN","ES","ET","FSI","InitialInfo","L","LRE","LRI","LRO","LevelRun","NSM","ON","PDF","PDI","ParagraphInfo","R","RLE","RLI","RLO","S","UNICODE_VERSION","WS","bidi_class","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deprecated","eq","eq","eq","eq","fmt","fmt","fmt","fmt","format_chars","from","from","from","from","has_rtl","into","into","into","into","level","level","levels","ne","ne","ne","new","new","original_classes","original_classes","paragraphs","paragraphs","range","reorder_line","reordered_levels","reordered_levels_per_char","text","text","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visual_runs","visual_runs","ALM","FSI","LRE","LRI","LRM","LRO","PDF","PDI","RLE","RLI","RLM","RLO","Error","LTR_LEVEL","Level","MAX_EXPLICIT_DEPTH","MAX_IMPLICIT_DEPTH","OutOfRangeNumber","RTL_LEVEL","bidi_class","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","eq","eq","eq","fmt","fmt","from","from","from","has_rtl","into","into","into","is_ltr","is_rtl","lower","ltr","max_explicit_depth","max_implicit_depth","ne","new","new_explicit","new_explicit_next_ltr","new_explicit_next_rtl","new_lowest_ge_rtl","number","partial_cmp","raise","raise_explicit","rtl","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vec"],"q":["unicode_bidi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode_bidi::deprecated","unicode_bidi::format_chars","","","","","","","","","","","","unicode_bidi::level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Represents values of the Unicode character property …","Bidi information of the text.","","","","","","Initial bidi information of the text.","","","","","A maximal substring of characters with the same embedding …","","","","","Bidi information about a single paragraph","","","","","","The Unicode version of data","","Find the <code>BidiClass</code> of a single char.","","","","","","","","","","","This module holds deprecated assets only.","","","","","","","","","Directional Formatting Characters","","","","","If processed text has any computed RTL levels","","","","","Bidi Embedding Level","The paragraph embedding level.","The directional embedding level of each byte in the text.","","","","Find the paragraphs and BidiClasses in a string of text.","Split the text into paragraphs and determine the bidi …","The BidiClass of the character at each byte in the text. …","The BidiClass of the character at each byte in the text.","The boundaries and level of each paragraph within the …","The boundaries and paragraph embedding level of each …","The paragraphs boundaries within the text, as byte …","Re-order a line based on resolved levels and return the …","Re-order a line based on resolved levels and return only …","Re-order a line based on resolved levels and return only …","The text","The text","","","","","","","","","","","","","","Find the level runs within a line and return them in …","Find the level runs within a line and return them in …","ARABIC LETTER MARK","FIRST STRONG ISOLATE","LEFT-TO-RIGHT EMBEDDING","LEFT‑TO‑RIGHT ISOLATE","LEFT-TO-RIGHT MARK","LEFT-TO-RIGHT OVERRIDE","POP DIRECTIONAL FORMATTING","POP DIRECTIONAL ISOLATE","RIGHT-TO-LEFT EMBEDDING","RIGHT‑TO‑LEFT ISOLATE","RIGHT-TO-LEFT MARK","RIGHT-TO-LEFT OVERRIDE","Errors that can occur on Level creation or mutation","","Embedding Level","During explicit level resolution, embedding level can go …","During implicit level resolution, embedding level can go …","Out-of-range (invalid) embedding level number.","","Generate a character type based on a level (as specified …","","","","","","","","","","","","","","","Create level by number","","If levels has any RTL (odd) level","","Convert to the level number","","If this level is left-to-right.","If this level is right-to-left.","Lower level by <code>amount</code>, fail if number goes below zero.","New LTR level with smallest number value (0).","Maximum depth of the directional status stack during …","Maximum depth of the directional status stack during …","","Create new level, fail if number is larger than …","Create new level, fail if number is larger than <code>max_depth</code>.","The next LTR (even) level greater than this, or fail if …","The next RTL (odd) level greater than this, or fail if …","The lowest RTL (odd) level greater than or equal to this, …","The level number.","","Raise level by <code>amount</code>, fail if number is larger than …","Raise level by <code>amount</code>, fail if number is larger than …","New RTL level with smallest number value (1).","","","","","","","",""],"i":[1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,2,3,4,1,2,3,4,1,1,0,1,2,3,4,1,2,3,4,0,1,2,3,4,4,1,2,3,4,0,2,4,2,3,4,3,4,3,4,3,4,2,4,4,4,3,4,1,1,2,3,4,1,2,3,4,1,2,3,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,6,6,5,6,5,6,6,6,6,6,6,5,6,5,6,6,5,0,6,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,6,5,6,5,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["char",15]],["bidiclass",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bidiclass",4]],[[]],null,[[["bidiclass",4]],["bool",15]],[[["paragraphinfo",3]],["bool",15]],[[["initialinfo",3]],["bool",15]],[[["bidiinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],null,null,null,[[["paragraphinfo",3]],["bool",15]],[[["initialinfo",3]],["bool",15]],[[["bidiinfo",3]],["bool",15]],[[["level",3],["str",15],["option",4]],["initialinfo",3]],[[["level",3],["str",15],["option",4]],["bidiinfo",3]],null,null,null,null,null,[[["usize",15],["paragraphinfo",3],["range",3]],[["cow",4],["str",15]]],[[["usize",15],["paragraphinfo",3],["range",3]],[["vec",3],["level",3]]],[[["usize",15],["paragraphinfo",3],["range",3]],[["vec",3],["level",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["paragraphinfo",3],["range",3]]],[[["usize",15],["range",3]],[["vec",3],["levelrun",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bidiclass",4]],[[]],[[]],[[]],[[]],[[],["level",3]],[[]],[[["level",3]],["ordering",4]],[[["level",3]],["bool",15]],[[],["bool",15]],[[["string",3]],["bool",15]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u8",15]],["level",3]],[[]],[[],["bool",15]],[[]],[[],["u8",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["u8",15]],[["error",4],["result",4]]],[[],["level",3]],[[],["u8",15]],[[],["u8",15]],[[["level",3]],["bool",15]],[[["u8",15]],[["result",4],["level",3],["error",4]]],[[["u8",15]],[["result",4],["level",3],["error",4]]],[[],[["result",4],["level",3],["error",4]]],[[],[["result",4],["level",3],["error",4]]],[[],[["result",4],["level",3],["error",4]]],[[],["u8",15]],[[["level",3]],[["option",4],["ordering",4]]],[[["u8",15]],[["error",4],["result",4]]],[[["u8",15]],[["error",4],["result",4]]],[[],["level",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["vec",3],["level",3]]]],"p":[[4,"BidiClass"],[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"Error"],[3,"Level"]]},\
"unicode_normalization":{"doc":"Unicode character composition and decomposition utilities …","t":[3,4,13,13,3,3,17,8,13,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5],"n":["Decompositions","IsNormalized","Maybe","No","Recompositions","StreamSafe","UNICODE_VERSION","UnicodeNormalization","Yes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","is_nfc","is_nfc_quick","is_nfc_stream_safe","is_nfc_stream_safe_quick","is_nfd","is_nfd_quick","is_nfd_stream_safe","is_nfd_stream_safe_quick","is_nfkc","is_nfkc_quick","is_nfkd","is_nfkd_quick","next","next","next","nfc","nfc","nfc","nfc","nfd","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","nfkd","size_hint","stream_safe","stream_safe","stream_safe","stream_safe","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","canonical_combining_class","compose","decompose_canonical","decompose_compatible","is_combining_mark"],"q":["unicode_normalization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode_normalization::char","","","",""],"d":["External iterator for a string decomposition’s …","The QuickCheck algorithm can quickly determine if a text …","The text may be normalized.","The text is definitely not normalized.","External iterator for a string recomposition’s …","UAX15-D4: This iterator keeps track of how many …","","Methods for iterating over strings while applying Unicode …","The text is definitely normalized.","","","","","","","","","Methods for composing and decomposing characters.","","","","","","","","","","","","","","","","","","","","Authoritatively check if a string is in NFC.","Quickly check if a string is in NFC, potentially returning…","Authoritatively check if a string is Stream-Safe NFC.","Quickly check if a string is Stream-Safe NFC.","Authoritatively check if a string is in NFD.","Quickly check if a string is in NFD.","Authoritatively check if a string is Stream-Safe NFD.","Quickly check if a string is Stream-Safe NFD.","Authoritatively check if a string is in NFKC.","Quickly check if a string is in NFKC.","Authoritatively check if a string is in NFKD.","Quickly check if a string is in NFKD.","","","","An Iterator over the string in Unicode Normalization Form …","","","","Returns an iterator over the string in Unicode …","","","","An Iterator over the string in Unicode Normalization Form …","","","","Returns an iterator over the string in Unicode …","","","","","An Iterator over the string with Conjoining Grapheme …","","","","","","","","","","","","","","","","","","","","Look up the canonical combining class for a codepoint.","Compose two characters into a single character, if …","Compute canonical Unicode decomposition for character. …","Compute canonical or compatible Unicode decomposition for …","Return whether the given character is a combining mark (…"],"i":[0,0,1,1,0,0,0,0,1,2,3,1,4,2,3,1,4,0,3,4,3,4,1,3,1,4,2,3,1,4,2,3,1,4,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,3,5,2,3,4,3,4,3,4,2,3,1,4,2,3,1,4,2,3,1,4,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["decompositions",3]],[[],["recompositions",3]],[[]],[[]],[[["isnormalized",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[["str",15]],["bool",15]],[[["iterator",8]],["isnormalized",4]],[[],[["option",4],["char",15]]],[[],[["option",4],["char",15]]],[[],[["option",4],["char",15]]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[],["decompositions",3]],[[]],[[],["streamsafe",3]],[[],["streamsafe",3]],[[],["streamsafe",3]],[[],["streamsafe",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["char",15]],["u8",15]],[[["char",15]],[["option",4],["char",15]]],[[["char",15]]],[[["fnmut",8],["char",15]]],[[["char",15]],["bool",15]]],"p":[[4,"IsNormalized"],[3,"StreamSafe"],[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","t":[17,8,8,10,10,10,10],"n":["UNICODE_VERSION","UnicodeWidthChar","UnicodeWidthStr","width","width","width_cjk","width_cjk"],"q":["unicode_width","","","","","",""],"d":["The version of Unicode that this version of unicode-width …","Methods for determining displayed width of Unicode …","Methods for determining displayed width of Unicode …","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns.","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns."],"i":[0,0,0,1,2,1,2],"f":[null,null,null,[[],[["option",4],["usize",15]]],[[],["usize",15]],[[],[["option",4],["usize",15]]],[[],["usize",15]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"url":{"doc":"rust-url is an implementation of the URL Standard for the …","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,4,13,4,3,3,13,4,13,13,13,4,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AfterFragment","AfterHost","AfterPassword","AfterPath","AfterPort","AfterQuery","AfterScheme","AfterUsername","Backslash","BeforeFragment","BeforeHost","BeforePassword","BeforePath","BeforePort","BeforeQuery","BeforeScheme","BeforeUsername","C0SpaceIgnored","Domain","EmbeddedCredentials","EmptyHost","EncodingOverride","ExpectedDoubleSlash","ExpectedFileDoubleSlash","FileWithHostAndWindowsDrive","Host","IdnaError","InvalidDomainCharacter","InvalidIpv4Address","InvalidIpv6Address","InvalidPort","Ipv4","Ipv6","NonUrlCodePoint","NullInFragment","Opaque","OpaqueOrigin","Origin","Overflow","ParseError","ParseOptions","PathSegmentsMut","PercentDecode","Position","RelativeUrlWithCannotBeABaseBase","RelativeUrlWithoutBase","SetHostOnCannotBeABaseUrl","SyntaxViolation","TabOrNewlineIgnored","Tuple","UnencodedAtSign","Url","UrlQuery","as_mut_string","as_ref","as_str","ascii_serialization","base_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cannot_be_a_base","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","description","domain","drop","drop","encoding_override","eq","eq","eq","eq","eq","eq","extend","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from_str","has_authority","has_host","hash","hash","hash","hash","host","host_str","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into_string","is_tuple","join","ne","ne","ne","new_opaque","options","origin","parse","parse","parse","parse_opaque","parse_with_params","partial_cmp","partial_cmp","password","path","path_segments","path_segments_mut","pop","pop_if_empty","port","port_or_known_default","push","query","query_pairs","query_pairs_mut","scheme","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","syntax_violation_callback","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_serialization","username"],"q":["urld":["","","","","","","","","","","","","","","","","","","A DNS domain name, as ‘.’ dot-separated labels. …","","","","","","","The host name of an URL.","","","","","","An IPv4 address. <code>Url::host_str</code> returns the serialization …","An IPv6 address. <code>Url::host_str</code> returns the serialization …","","","A globally unique identifier","Opaque identifier for URLs that have file or other schemes","The origin of an URL","","Errors that can occur during parsing.","Full configuration for the URL parser.","Exposes methods to manipulate the path of an URL that is …","","Indicates a position within a URL based on its components.","","","","Non-fatal syntax violations that can occur during parsing.","","Consists of the URL’s scheme, host and port","","A parsed URL record.","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …","","","Return the serialization of this URL.","…","Change the base URL","","","","","","","","","","","","","","","","","","","","","Return whether this URL is a cannot-be-a-base URL, …","Remove all segments in the path, leaving the minimal …","","","","","","","","","","","","","","","","","","","","If this URL has a host and it is a domain name (not an IP …","","","Override the character encoding of query strings. This is …","","","","","","","Append each segment from the given iterator at the end of …","","","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","","","","","","","","","","","","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","","","","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","","","","","","","","","","","","","","","Return the serialization of this URL.","Return whether this origin is a (scheme, host, port) tuple…","Parse a string as an URL, with this URL as the base URL.","","","","Creates a new opaque origin that is only equal to itself.","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","Parse a host: either an IPv6 address in [] square …","Parse an absolute URL from a string.","Parse an URL string with the configuration so far.","","Parse an absolute URL from a string and add params to its …","","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","Remove the last segment of this URL’s path.","Remove the last segment of this URL’s path if it is …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Append the given segment at the end of this URL’s path.","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","Return the scheme of this URL, lower-cased, as an ASCII …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Call the provided function or closure for a non-fatal …","","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","…","Return the username for this URL (typically the empty …"],"i":[1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,3,2,4,0,2,2,2,0,4,4,4,4,4,3,3,2,2,5,0,0,4,0,0,0,2,0,4,4,4,0,2,5,2,0,0,6,7,7,5,8,3,5,9,4,2,10,1,7,8,6,3,5,9,4,2,10,1,7,8,6,7,10,3,5,9,4,2,1,7,8,3,5,9,4,2,1,7,8,3,7,2,7,10,6,8,3,5,9,4,2,7,10,6,3,3,5,9,4,4,2,2,10,1,7,7,6,7,3,5,9,4,4,2,10,1,7,8,6,7,7,7,3,5,9,7,7,7,7,7,7,7,3,5,9,4,2,10,1,7,8,6,7,5,7,3,5,9,5,7,7,3,7,8,3,7,3,7,7,7,7,7,10,10,7,7,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,3,3,5,9,4,2,1,7,8,3,4,2,7,3,5,9,4,2,10,1,7,7,8,6,3,5,9,4,2,10,1,7,8,6,3,5,9,4,2,10,1,7,8,6,5,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["str",15]],[[],["str",15]],[[],["string",3]],[[["url",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["host",4]],[[],["origin",4]],[[],["opaqueorigin",3]],[[],["parseerror",4]],[[],["syntaxviolation",4]],[[],["position",4]],[[],["url",3]],[[],["parseoptions",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["host",4]],["ordering",4]],[[],["ordering",4]],[[],["str",15]],[[],[["option",4],["str",15]]],[[]],[[]],[[["encodingoverride",6]]],[[["host",4]],["bool",15]],[[["origin",4]],["bool",15]],[[["opaqueorigin",3]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["syntaxviolation",4]],["bool",15]],[[],["bool",15]],[[]],[[],["url",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[["errors",3]],["parseerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["option",4],["host",4]]],[[],[["option",4],["str",15]]],[[["range",3],["position",4]],["str",15]],[[["rangeto",3],["position",4]],["str",15]],[[["rangefrom",3],["position",4]],["str",15]],[[["rangefull",3]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["host",4]],["bool",15]],[[["origin",4]],["bool",15]],[[["opaqueorigin",3]],["bool",15]],[[],["origin",4]],[[],["parseoptions",3]],[[],["origin",4]],[[["str",15]],[["parseerror",4],["result",4]]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["str",15]],[["parseerror",4],["result",4]]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["host",4]],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["str",15]]],[[],["str",15]],[[],[["option",4],["split",3]]],[[],[["pathsegmentsmut",3],["result",4]]],[[]],[[]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u16",15]]],[[["str",15]]],[[],[["option",4],["str",15]]],[[],["parse",3]],[[],[["serializer",3],["urlquery",3]]],[[],["str",15]],[[["option",4],["str",15]]],[[["option",4],["str",15]],[["parseerror",4],["result",4]]],[[["ipaddr",4]],["result",4]],[[["option",4],["str",15]],["result",4]],[[["str",15]]],[[["option",4],["u16",15]],["result",4]],[[["option",4],["str",15]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["vec",3],["result",6]]],[[["option",4],["fn",8]]],[[]],[[],[["string",3],["host",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["string",3]],[[],["str",15]]],"p":[[4,"Position"],[4,"SyntaxViolation"],[4,"Host"],[4,"ParseError"],[4,"Origin"],[3,"UrlQuery"],[3,"Url"],[3,"ParseOptions"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","tn":["Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","Vacant","VacantEntry","Values","ValuesMut","VecMap","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","contains_key","default","drain","entry","eq","extend","extend","fmt","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_mut","get_mut","hash","index","index","index_mut","index_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","or_insert","or_insert_with","partial_cmp","remove","remove","reserve_len","reserve_len_exact","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_off","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity"],"q":["vec_mapd":["A draining iterator over the key-value pairs of a map.","A view into a single entry in a map, which may either be …","A consuming iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map, with the …","An iterator over the keys of a map.","An occupied Entry","An occupied Entry.","A vacant Entry","A vacant Entry.","An iterator over the values of a map.","An iterator over the values of a map.","A map optimized for small integer keys.","Moves all elements from <code>other</code> into the map while …","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>VecMap</code> can hold without…","Clears the map, removing all key-value pairs.","","","","","","","","","","","Returns true if the map contains a value for the …","","Returns an iterator visiting all key-value pairs in …","Gets the given key’s corresponding entry in the map for …","","","","","","","","","","","","","","","","","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","","","","","","Inserts a key-value pair into the map. If the key already …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the OccupiedEntry’s …","","","","","","","","","","","","Returns an iterator visiting all key-value pairs in …","","","","","","","","Converts the entry into a mutable reference to its value.","Returns true if the map contains no elements.","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all keys in ascending order …","Returns the number of elements in the map.","Creates an empty <code>VecMap</code>.","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","","Removes a key from the map, returning the value at the …","Takes the value of the entry out of the map, and returns …","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>VecMap</code> to …","Retains only the elements specified by the predicate.","Trims the <code>VecMap</code> of any excess capacity.","","","","","","","","Splits the collection into two at the given key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all values in ascending …","Returns an iterator visiting all values in ascending …","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …"],"i":[0,0,0,0,0,0,1,0,1,0,0,0,0,2,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,2,2,2,5,7,8,2,2,5,7,8,2,2,2,2,2,2,2,2,2,2,1,3,4,5,6,7,8,9,10,11,2,2,4,2,4,2,2,2,2,2,2,3,4,2,1,3,4,5,6,7,8,9,10,11,2,5,6,7,8,9,10,11,4,2,2,2,2,2,2,5,6,7,8,9,10,11,5,6,7,8,9,10,11,1,1,2,2,4,2,2,2,2,5,6,7,8,9,10,11,2,2,5,7,8,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,2,2,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["iter",3]],[[],["keys",3]],[[],["values",3]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[["usize",15]],["bool",15]],[[]],[[],["drain",3]],[[["usize",15]],["entry",4]],[[],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["usize",15]],["option",4]],[[]],[[["usize",15]],["option",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["usize",15]],[[]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[["fnonce",8]]],[[],[["ordering",4],["option",4]]],[[["usize",15]],["option",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["values",3]],[[],["valuesmut",3]],[[["usize",15]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]},\
"x86":{"doc":"","t":[4,13,13,13,13,0,0,0,0,11,11,11,0,0,0,0,11,11,11,5,14,11,0,0,0,0,5,0,14,0,0,0,11,11,11,0,13,13,8,4,13,13,4,4,4,4,13,13,3,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,5,0,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,3,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,11,12,12,12,11,12,12,12,12,11,11,11,0,0,0,0,0,0,0,0,12,12,12,12,12,12,18,18,18,18,17,17,17,18,18,18,18,18,18,17,3,17,3,17,18,18,18,18,17,18,18,3,18,18,18,18,6,3,3,6,3,3,6,3,3,17,18,18,6,3,3,18,18,18,18,3,18,18,18,18,18,18,18,18,3,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,3,18,11,11,11,11,11,11,5,5,11,5,5,5,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,3,13,13,13,13,3,3,3,3,3,3,3,3,3,13,13,13,13,4,3,13,13,13,13,4,3,3,3,3,3,3,13,13,3,13,3,3,3,3,3,13,13,13,3,4,3,13,3,3,3,13,3,4,3,13,13,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,12,11,11,11,11,11,11,5,5,5,12,5,11,11,5,5,11,11,11,5,5,5,5,5,5,17,17,17,17,17,17,17,17,7,17,18,17,17,3,17,17,17,18,17,18,3,18,17,17,17,18,17,18,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,8,8,10,10,5,5,5,5,5,5,5,5,8,13,13,13,4,4,3,3,13,13,13,13,13,13,13,13,8,13,13,13,13,13,8,18,18,18,18,18,13,13,13,13,13,13,13,13,8,3,4,4,18,18,13,13,13,8,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,5,10,11,11,11,11,5,11,11,11,11,11,11,5,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,6,4,13,13,11,11,11,11,11,11,11,11,0,0,0,0,0,18,17,17,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,3,3,18,18,18,18,18,18,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,18,17,17,18,18,17,17,17,17,17,18,17,17,17,17,3,3,18,18,18,18,18,18,18,18,18,17,17,17,18,3,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","dtables","eq","fmt","from","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","lower","ne","ne","new","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","xapic","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","segmentation","stack_jmp","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","contains","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersects","into","is_all","is_empty","ne","new","not","partial_cmp","remove","set","stac","sub","sub_assign","toggle","try_from","try_into","type_id","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","0","0","0","0","0","0","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","US","US","US","US","VAddr","XD","XD","XD","XD","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_usize","as_usize","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains","contains","contains","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","insert","insert","insert","insert","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","large_page_offset","large_page_offset","ne","ne","ne","ne","ne","ne","new","new","new","new","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pt_index","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","set","set","set","set","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","contains","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersects","into","is_all","is_empty","ne","new","not","partial_cmp","read","remove","set","set","sub","sub_assign","toggle","try_from","try_into","type_id","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","ne","ne","ne","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xcr0","xcr0_write","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","DirectCacheAccessInfo","DirectMapped","Disabled","EightWay","Epc","EpcSection","ExtendedFeatures","ExtendedFunctionInfo","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FourWay","FullyAssiciative","General","HyperV","Hypervisor","HypervisorInfo","Instruction","InstructionTLB","Invalid","KVM","L2Associativity","L2CatInfo","L3CatInfo","L3MonitoringInfo","MemBwAllocationInfo","MemoryEncryptionInfo","MonitorMwaitInfo","Null","Null","PerformanceMonitoringInfo","Prefetch","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SixteenWay","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","TLB","ThermalPowerInfo","TopologyType","TscInfo","TwoWay","Unified","UnifiedTLB","Unknown","Unknown","Unknown","VMware","VendorInfo","Xen","apic_frequency","as_string","as_string","associativity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_index","bus_frequency","c_bit_position","cache_level","cache_line_size","cache_size","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpuid","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","denominator","desc","deterministic_address_translation_info","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_cache_info","get_cache_parameters","get_dca_cap_value","get_direct_cache_access_info","get_extended_feature_info","get_extended_function_info","get_extended_state_info","get_extended_topology_info","get_feature_info","get_hypervisor_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_4k_entries","has_4mb_entries","has_64bit_mode","has_acpi","has_adx","has_aesni","has_any_thread_deprecation","has_apic","has_arat","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_bmi1","has_bmi2","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpl","has_dca","has_de","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_f16c","has_fdp","has_flexible_hwp","has_fma","has_fpu","has_fpu_cs_ds_deprecated","has_fsgsbase","has_fxsave_fxstor","has_hdc","has_hle","has_htt","has_hw_coord_feedback","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ignore_idle_processor_hwp_request","has_invariant_tsc","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lzcnt","has_mca","has_mce","has_memory_bandwidth_allocation","has_mmx","has_monitor_mwait","has_movbe","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_occupancy_monitoring","has_ospke","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_prefetchw","has_prefetchwt1","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdrand","has_rdseed","has_rdseet","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_smap","has_sme","has_smep","has_smx","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_ssse3","has_syscall_sysret","has_sysenter_sysexit","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_turbo_boost","has_turbo_boost3","has_umip","has_vme","has_vmx","has_x2apic","has_xgetbv","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","l2_associativity","l2_cat","l3_cat","l3_monitoring","largest_monitor_line","level","level_number","level_type","linear_address_bits","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","ne","new","next","next","next","next","next","next","next","nominal_frequency","num","number_of_counters","numerator","offset","partitioning","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","processor_base_frequency","processor_brand_string","processor_max_frequency","processors","rmid_range","secs_attributes","serial","serial_lower","serial_middle","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","contains","description","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersects","into","into","irqtype","is_all","is_empty","mnemonic","ne","not","partial_cmp","remove","set","source","sub","sub_assign","toggle","try_from","try_from","try_into","try_into","type_id","type_id","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","contains","cs","data_descriptor","data_descriptor","db","default","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_ds","load_es","load_fs","load_gs","load_ss","lower","ne","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","load_tr","tr","rdtsc","rdtscp","flush","flush_all","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","contains","contains","contains","contains","contains","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","ne","ne","ne","ne","ne","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":["x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::ioapic","","","","","","","","","","","","","","x86::apic::x2apic","","","","","","","","","","","","","","","","","","","","","","","x86::apic::xapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits16","x86::bits32","","","","x86::bits32::eflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits32::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64","","","","","","","","x86::bits64::pagingx86::bits64::registers","","","x86::bits64::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::segmentation","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::sgx","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::syscall","","","","","","","x86::bits64::task","","","","","","","","","","","","","","","","","","","","","x86::bits64::vmx","","","","","","","","","x86::controlregsx86::cpuidx86::cpuid::native_cpuid","x86::dtables","","","","","","","","","","","","","","","","","","","","x86::io","","","","","","x86::irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::msrx86::random","","","","","","","","","","","","x86::segmentationx86::task","","x86::time","","x86::tlb","","x86::vmx","","","","","","","","","","","","","x86::vmx::vmcs","","","","x86::vmx::vmcs::controlx86::vmx::vmcs::guest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::host","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::ro","","","","","","","","","","","","","","",""],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions and data-structures for working with descriptor …","","","","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Sepcify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","","","","","","","","","Return APIC ID.","","","","","","","","","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Get lower 32-bits of the Icr register.","","","Short-hand to create a Icr value.","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers …","Information about the xAPIC for the local APIC.","","","","","","","","","","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","","Read local APIC ID.","","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","","Read local APIC ID.","","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","","","","","","","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to …","Dirty; if PS indicates whether software has written to …","Dirty; indicates whether software has written to the …","Global; if PS && CR4.PGE = 1, determines whether the …","Global; if PS && CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to …","User/supervisor; user-mode accesses are not allowed to …","User/supervisor; user-mode accesses are not allowed to …","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 4 KiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Return address of nearest 1 GiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Return address of nearest 2 MiB page (higher or equal …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written …","Dirty; if PD_PS set indicates whether software has …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS && CR4.PGE = 1, determines whether the …","Global; if PS && CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to …","User/supervisor; user-mode accesses are not allowed to …","User/supervisor; user-mode accesses are not allowed to …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","","","","","","","Creates a new PML4Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Physical Address zero.","Physical Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","","","","Entry for IDT, GDT or LDT.","","","","","","","","“Dereferences” the fs register at offset 0.","“Dereferences” the gs register at offset 0.","","Reload code segment register. Note this is special since …","Read FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …","Read GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …","Create a new segment, TSS or LDT descriptor by setting …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for …","Swap the GS register.","","","","Write FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …","Write GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","","","","","","","","Although hardware task-switching is not supported in …","","","","","","","","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported …","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Used to iterate over cache information contained in cpuid …","What type of cache are we dealing with?","","","","","Main type used to query for information about the CPU we…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","","","","","","Iterates over the system topology in order to retrieve …","Gives detailed information about the current level in the …","","","","","","Identifies the different Hypervisor products.","Information about Hypervisor …","Instruction cache","","","","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","","","Processor Frequency Information","","","","","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …","Iterator over the SGX sub-leafs (ECX >= 2).","","","","","","","What type of core we have at this level in the topology …","Time Stamp Counter and Nominal Core Crystal Clock …","","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to …","","","","","","","(Virtual) Bus (local apic timer) frequency in kHz.","Return vendor identification as human readable string.","","Ways of associativity (Bits 31-22)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Brand Index","Bus (Reference) Frequency (in MHz).","","Translation cache level (starts at 1)","Cache Line size in bytes","Cache size in 1K units","Cache Type","Translation cache type field.","Length of the capacity bit mask using minus-one notation.","Length of the capacity bit mask using minus-one notation.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Macro which queries cpuid directly.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature and Feature Bits.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","Version Information: Family","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query basic information about caches. This will just …","Retrieve more elaborate information about caches (as …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …","Direct cache access info.","Find out about more features supported by this CPU.","Extended functionality of CPU described here (including …","Information for saving/restoring extended register state.","Information about topology (how many cores and what kind …","Query a set of features that are available on this CPU.","","","Information about how monitor/mwait works on this CPU.","Info about performance monitoring (how many counters …","Processor Frequency Information.","Retrieve serial number of processor.","Intel Processor Trace Enumeration Information.","","Quality of service enforcement information.","Quality of service informations.","","","","","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information.","","","Return information about vendor. This is typically a …","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","Thermal Monitor and Software Controlled Clock Facilities. …","Supports ADX.","A value of 1 indicates that the processor supports the …","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","BMI1","BMI2","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…","If true, Indicates support of Configurable PSB and …","CPL Qualified Debug Store. A value of 1 indicates the …","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","A value of 1 indicates that processor supports 16-bit …","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Flexible HWP is supported if set.","A value of 1 indicates the processor supports FMA …","Floating Point Unit On-Chip. The processor contains an …","Deprecates FPU CS and FPU DS values if 1.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","Max APIC IDs reserved field is Valid. A value of 0 for …","Hardware Coordination Feedback Capability (Presence of …","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Ignoring Idle Logical Processor HWP request is supported …","Is Invariant TSC available?","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Reports whether the response of the delay values is …","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Machine Check Exception. Exception 18 is defined for …","Supports Memory Bandwidth Allocation.","Intel MMX Technology. The processor supports the Intel …","MONITOR/MWAIT. A value of 1 indicates the processor …","A value of 1 indicates that the processor supports MOVBE …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports RDSEED (deprecated alias).","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","A value of 1 indicates the presence of the Supplemental …","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Thermal Monitor. The processor implements the thermal …","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Intel Turbo Boost Technology Available (see description …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","Virtual Machine Extensions. A value of 1 indicates that …","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area …","Core cycle event not available if 1.","Fully Associative cache","Fully associative structure","True if the bit n (corresponding to the sub-leaf index) …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels >= 2.","Iterator over SGX sub-leafs.","L2 Associativity field","L2 Cache Allocation Information.","L3 Cache Allocation Information.","L3 Cache Monitoring.","Largest monitor-line size in bytes (default is processor…","Cache Level (starts at 1)","Level number.","","#Linear Address Bits","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","","Reports the maximum MBA throttling value supported for …","Maximum number of addressable IDs for logical processors …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","","Bit vector of supported extended SGX features.","Version Information: Model","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","Return new CPUID struct.","Iterate over all cache information.","Iterate over all caches for this CPU. Note: cpuid is …","","","","Iterate over each sub-leaf with an  address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components …","Partitioning (0: Soft partitioning between the logical …","#Physical Address Bits","","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Processor Base Frequency (in MHz).","Retrieve processor brand string.","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","","Bits 00-31 of 96 bit processor serial number. (Available …","Bits 32-63 of 96 bit processor serial number. (Available …","Number of Sets (Bits 31-00)","Number of Sets.","Number of bits to shift right on x2APIC ID to get a …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of C0 sub C-states supported using MWAIT (Bits 03 …","Number of C1 sub C-states supported using MWAIT (Bits 07 …","Number of C2 sub C-states supported using MWAIT (Bits 11 …","Number of C3 sub C-states supported using MWAIT (Bits 15 …","Number of C4 sub C-states supported using MWAIT (Bits 19 …","Number of C5 sub C-states supported using MWAIT (Bits 23 …","Number of C6 sub C-states supported using MWAIT (Bits 27 …","Number of C7 sub C-states supported using MWAIT (Bits 31 …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TSC frequency in kHz.","“TSC frequency” = “core crystal clock frequency” …","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","A struct describing a pointer to a descriptor table (GDT …","Pointer to the memory region containing the DT.","","","","","","","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","Disable Interrupts.","Returns an empty set of flags","Enable Interrupts.","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","","","","","","","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See …","(If CPUID.0AH: EAX[15:8] >  0) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  1) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  2) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  3) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  4) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  5) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  6) & IA32_PERF_CAPABILITIES[ …","(If CPUID.0AH: EAX[15:8] >  7) & IA32_PERF_CAPABILITIES[ …","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] >  8","if IA32_MTRR_CAP[7:0] >  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] >  8","if IA32_MTRR_CAP[7:0] >  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter …","See Table 35-2. See Section 18.4.2, Global Counter …","See Table 35-2. See Section 18.4.2, Global Counter …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table …","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 …","Capability Reporting Register of CR0 Bits Fixed to 1 …","Capability Reporting Register of CR4 Bits Fixed to 0 …","Capability Reporting Register of CR4 Bits Fixed to 1 …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] …","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 …","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register …","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting …","Set D/B. Performs different functions depending on …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads the task register.","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","","","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,0,0,3,3,0,0,0,0,4,5,0,6,5,0,4,7,5,2,5,2,7,5,6,5,0,8,8,5,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,10,8,10,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,10,5,7,6,3,4,2,9,8,0,10,10,10,9,9,8,9,10,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,10,10,5,7,6,3,4,2,9,8,9,10,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,16,17,18,19,20,21,22,23,24,25,0,0,0,23,24,25,23,24,25,0,0,0,0,0,22,23,24,25,0,23,24,0,22,23,24,25,0,0,0,0,0,0,0,0,0,0,23,24,0,0,0,22,23,24,25,0,22,23,24,25,22,23,24,25,0,22,23,24,25,16,16,16,17,17,17,16,16,17,17,17,18,19,20,21,16,17,16,17,16,17,16,17,16,17,16,17,22,23,24,25,17,17,16,17,16,17,16,17,16,16,17,17,17,17,22,23,24,25,22,23,24,25,16,16,17,17,17,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,26,27,28,16,17,22,18,23,19,24,20,25,21,26,27,28,16,17,22,18,23,19,24,20,25,21,16,17,22,18,23,19,24,20,25,21,16,17,22,23,24,25,22,23,24,25,22,23,24,25,16,17,22,23,24,25,22,23,24,25,18,19,20,21,16,16,16,16,16,16,16,17,17,17,17,17,17,17,22,22,22,22,22,18,23,23,23,23,23,19,24,24,24,24,24,20,25,25,25,25,25,21,26,27,28,16,16,16,16,17,17,17,17,22,18,23,19,24,20,25,21,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,17,17,16,17,22,23,24,25,16,17,22,23,24,25,22,23,24,25,26,27,28,16,16,16,17,17,17,22,18,23,19,24,20,25,21,18,19,20,21,16,17,22,23,24,25,16,17,20,21,22,23,24,25,20,21,16,17,18,19,20,21,16,17,19,20,18,19,20,21,18,19,20,21,19,20,18,19,20,21,18,19,20,21,18,19,20,21,16,17,16,17,16,17,22,23,24,25,18,19,20,21,22,23,24,25,16,17,22,23,24,25,0,0,0,0,16,16,16,17,17,17,22,23,24,25,22,23,24,25,16,17,17,17,16,16,16,17,17,17,22,23,24,25,22,23,24,25,22,23,24,25,26,27,28,16,17,22,18,23,19,24,20,25,21,26,27,28,16,17,22,18,23,19,24,20,25,21,26,27,28,16,17,22,18,23,19,24,20,25,21,16,17,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,0,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,0,0,30,0,0,0,30,30,30,0,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,34,34,34,34,34,34,34,34,34,0,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,0,0,0,0,0,0,0,0,32,33,34,32,33,34,32,33,34,32,32,32,32,32,33,33,33,33,33,34,34,34,34,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,0,0,0,35,0,0,0,0,0,0,36,0,0,35,0,0,0,37,38,0,39,39,39,40,0,0,0,0,0,0,0,0,0,39,39,35,41,0,0,37,38,36,41,0,0,0,0,0,0,0,37,38,0,35,0,0,0,0,0,37,36,35,0,0,0,39,0,0,0,35,0,0,0,39,37,38,38,41,39,41,0,41,42,43,44,45,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,51,74,80,76,79,79,45,76,66,67,51,47,35,49,45,45,72,64,57,0,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,79,39,80,73,49,46,54,47,47,57,47,47,37,36,41,39,51,51,79,53,51,57,57,42,46,47,43,43,48,35,49,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,44,41,79,39,80,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,46,46,56,46,46,46,46,46,46,46,46,46,46,46,46,46,77,46,46,46,77,46,77,46,46,77,77,46,76,79,76,76,76,79,51,55,51,57,51,54,51,55,55,55,55,55,55,55,55,55,55,55,51,55,55,51,51,51,51,66,45,72,51,51,51,51,51,54,54,51,69,69,54,79,51,55,54,51,51,55,55,51,54,55,51,54,54,54,54,54,54,54,54,54,51,54,79,55,72,65,65,63,79,68,72,64,79,51,51,65,51,51,51,55,51,72,51,64,55,51,51,80,51,51,51,51,51,51,55,54,51,72,79,55,55,51,51,51,54,72,55,51,55,55,55,55,79,55,72,55,80,80,55,69,69,55,55,72,55,80,55,51,51,51,51,51,51,51,51,79,51,51,51,72,72,64,72,51,55,51,54,54,55,51,51,51,60,51,60,60,60,66,67,68,60,60,42,51,53,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,48,52,58,61,70,75,78,57,57,57,62,57,45,76,62,62,45,57,57,57,45,45,66,67,60,69,79,65,65,63,53,45,59,59,79,55,76,45,45,69,69,80,68,51,64,65,80,69,51,0,41,46,48,52,58,61,70,75,78,73,49,57,73,62,76,79,80,71,45,74,79,74,59,63,69,50,50,50,45,76,59,62,71,53,51,62,53,53,53,53,53,53,53,53,72,72,72,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,42,73,49,42,46,47,43,48,35,49,50,51,52,45,37,53,54,55,56,57,58,59,36,60,61,62,63,64,65,66,67,68,69,70,40,71,72,73,74,75,76,38,77,78,44,41,79,39,80,57,76,59,60,60,60,60,60,60,60,60,60,60,60,60,0,0,81,81,81,81,81,81,81,0,0,0,81,0,81,81,0,0,81,81,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0,0,0,0,0,82,0,82,0,82,0,0,0,82,0,82,0,82,82,82,82,82,82,82,82,83,82,83,82,82,82,82,83,0,82,0,82,82,83,83,82,82,82,82,82,82,83,82,82,82,82,82,82,82,82,83,82,83,82,82,83,82,82,82,82,82,83,82,82,82,83,82,83,82,83,82,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,85,0,0,0,0,0,0,0,0,0,86,87,87,0,0,0,0,88,88,88,88,88,88,88,88,0,86,87,87,86,87,0,89,90,90,90,90,91,91,91,91,91,91,91,91,0,0,0,0,90,90,87,87,87,0,86,87,87,86,87,86,87,90,89,92,90,90,90,90,90,90,90,90,86,87,91,88,92,89,90,86,87,91,88,92,89,93,92,92,92,90,86,87,91,88,89,90,94,92,90,0,94,92,92,89,92,0,90,90,86,87,91,88,0,90,95,92,92,90,90,90,90,90,90,86,87,91,88,92,89,89,90,86,87,91,88,92,89,90,90,90,90,90,0,0,90,90,90,93,92,92,92,90,90,86,87,91,88,92,89,90,90,92,92,96,92,92,92,0,0,0,0,0,89,90,90,90,90,92,90,90,89,89,89,89,89,89,89,89,89,89,0,90,90,97,92,90,93,92,92,92,90,86,87,91,88,92,89,90,86,87,91,88,92,89,93,92,92,92,90,86,87,91,88,92,89,89,0,0,0,0,0,0,0,0,98,98,98,98,98,98,98,98,98,98,0,0,0,0,0,99,0,0,99,99,100,101,99,0,0,102,102,0,0,0,0,0,0,0,102,102,101,100,100,100,100,100,100,100,100,100,100,0,0,100,101,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,103,0,0,102,99,101,100,102,102,0,0,0,0,101,101,101,99,101,99,101,99,101,100,102,102,102,0,0,102,103,102,0,0,102,100,0,0,0,0,0,103,0,0,0,0,0,0,102,100,100,102,99,99,99,99,102,0,0,0,100,0,0,0,0,0,0,102,100,102,102,102,102,100,100,100,100,100,103,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0,0,100,0,0,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,103,103,103,103,102,102,102,102,102,100,100,100,100,100,101,101,101,101,101,99,99,99,99,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,103,102,100,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["ring",4]],null,null,null,null,[[["ring",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],null,null,null,null,[[],["u64",15]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["apicid",4]],[[]],[[["deliverymode",4]],["bool",15]],[[["destinationmode",4]],["bool",15]],[[["deliverystatus",4]],["bool",15]],[[["level",4]],["bool",15]],[[["triggermode",4]],["bool",15]],[[["destinationshorthand",4]],["bool",15]],[[["icr",3]],["bool",15]],[[["apicid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["u32",15]],[[["icr",3]],["bool",15]],[[["apicid",4]],["bool",15]],[[["triggermode",4],["deliverymode",4],["apicid",4],["deliverystatus",4],["destinationmode",4],["destinationshorthand",4],["u8",15],["level",4]],["icr",3]],[[["icr",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["u32",15]],null,null,null,[[]],[[]],[[]],[[["u8",15]]],[[]],[[],["u8",15]],[[]],[[["usize",15]]],[[],["u8",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u8",15]],null,[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["u32",15]],[[]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["x2apic",3]],[[["icr",3]]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["u32",15]],[[]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["xapic",3]],[[["icr",3]]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["u32",15]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["eflags",3]],[[["eflags",3]],["eflags",3]],[[["eflags",3]]],[[["eflags",3]],["eflags",3]],[[["eflags",3]]],[[],["u32",15]],[[["eflags",3]],["eflags",3]],[[["eflags",3]]],[[]],[[]],[[]],[[],["eflags",3]],[[["eflags",3]],["ordering",4]],[[["eflags",3]],["bool",15]],[[],["eflags",3]],[[["eflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]],[["option",4],["eflags",3]]],[[["u32",15]],["eflags",3]],[[["u32",15]],["eflags",3]],[[["intoiterator",8]],["eflags",3]],[[["ring",4]],["eflags",3]],[[]],[[["eflags",3]]],[[["eflags",3]],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["eflags",3]],["bool",15]],[[],["eflags",3]],[[],["eflags",3]],[[["eflags",3]],[["option",4],["ordering",4]]],[[["eflags",3]]],[[["eflags",3],["bool",15]]],[[]],[[["eflags",3]],["eflags",3]],[[["eflags",3]]],[[["eflags",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["taskstatesegment",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,[[],["taskstatesegment",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["paddr",3]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["paddr",3]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pml4flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]]],[[]],[[["usize",15]]],[[["u64",15]]],[[]],[[["i32",15]]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["vaddr",3]],["vaddr",3]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["paddr",3]],[[],["vaddr",3]],[[],["pml4flags",3]],[[],["pml4entry",3]],[[],["pdptflags",3]],[[],["pdptentry",3]],[[],["pdflags",3]],[[],["pdentry",3]],[[],["ptflags",3]],[[],["ptentry",3]],[[["paddr",3]],["ordering",4]],[[["vaddr",3]],["ordering",4]],[[["pml4flags",3]],["ordering",4]],[[["pdptflags",3]],["ordering",4]],[[["pdflags",3]],["ordering",4]],[[["ptflags",3]],["ordering",4]],[[["pml4flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[],["pml4flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[["paddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["pml4flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["usize",15]]],[[["u64",15]]],[[]],[[["u64",15]]],[[["i32",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],[["option",4],["pml4flags",3]]],[[["u64",15]],[["pdptflags",3],["option",4]]],[[["u64",15]],[["option",4],["pdflags",3]]],[[["u64",15]],[["ptflags",3],["option",4]]],[[["u64",15]],["pml4flags",3]],[[["u64",15]],["pdptflags",3]],[[["u64",15]],["pdflags",3]],[[["u64",15]],["ptflags",3]],[[["u64",15]],["pml4flags",3]],[[["u64",15]],["pdptflags",3]],[[["u64",15]],["pdflags",3]],[[["u64",15]],["ptflags",3]],[[["intoiterator",8]],["pml4flags",3]],[[["intoiterator",8]],["pdptflags",3]],[[["intoiterator",8]],["pdflags",3]],[[["intoiterator",8]],["ptflags",3]],[[["u64",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["pml4flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[]],[[]],[[]],[[],["usize",15]],[[],["u64",15]],[[]],[[]],[[],["u64",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["paddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["paddr",3],["pml4flags",3]],["pml4entry",3]],[[["pdptflags",3],["paddr",3]],["pdptentry",3]],[[["paddr",3],["pdflags",3]],["pdentry",3]],[[["paddr",3],["ptflags",3]],["ptentry",3]],[[],["pml4flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[["paddr",3]],[["option",4],["ordering",4]]],[[["vaddr",3]],[["option",4],["ordering",4]]],[[["pml4flags",3]],[["option",4],["ordering",4]]],[[["pdptflags",3]],[["option",4],["ordering",4]]],[[["pdflags",3]],[["option",4],["ordering",4]]],[[["ptflags",3]],[["option",4],["ordering",4]]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["u64",15]]],[[["usize",15]]],[[["paddr",3]]],[[]],[[]],[[["vaddr",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["bool",15],["pml4flags",3]]],[[["pdptflags",3],["bool",15]]],[[["bool",15],["pdflags",3]]],[[["bool",15],["ptflags",3]]],[[["u64",15]]],[[["u64",15]]],[[["i32",15]]],[[["usize",15]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["pml4flags",3]],["pml4flags",3]],[[["pdptflags",3]],["pdptflags",3]],[[["pdflags",3]],["pdflags",3]],[[["ptflags",3]],["ptflags",3]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[["pml4flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rflags",3]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[],["u64",15]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[]],[[]],[[],["rflags",3]],[[["rflags",3]],["ordering",4]],[[["rflags",3]],["bool",15]],[[],["rflags",3]],[[["rflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]],[["rflags",3],["option",4]]],[[["u64",15]],["rflags",3]],[[["u64",15]],["rflags",3]],[[["intoiterator",8]],["rflags",3]],[[["ring",4]],["rflags",3]],[[["u64",15]],["rflags",3]],[[]],[[["rflags",3]]],[[["rflags",3]],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["rflags",3]],["bool",15]],[[],["rflags",3]],[[],["rflags",3]],[[["rflags",3]],[["option",4],["ordering",4]]],[[],["rflags",3]],[[["rflags",3]]],[[["rflags",3]]],[[["rflags",3],["bool",15]]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[["rflags",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["descriptor64",3]],[[],["descriptor64",3]],[[["formatter",3]],["result",6]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[["segmentselector",3]]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]]],[[["u8",15]]],[[["segmentselector",3],["u64",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u64",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]],["u32",15]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],null,[[]],[[]],[[],["taskstatesegment",3]],[[],["taskstatesegment",3]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[],["taskstatesegment",3]],null,null,null,null,null,[[["usize",15],["u64",15]]],[[["ring",4],["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u64",15]],["result",6]],[[],["result",6]],[[["u64",15]],["result",6]],[[],[["result",6],["u64",15]]],[[["u32",15]],[["result",6],["u64",15]]],[[],["result",6]],[[["u32",15],["u64",15]],["result",6]],[[],["result",6]],[[["u64",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[["cr0",3]],["ordering",4]],[[["cr4",3]],["ordering",4]],[[["xcr0",3]],["ordering",4]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[],["cr0",3]],[[["cr0",3]]],[[],["usize",15]],[[["u64",15]]],[[],["u64",15]],[[["u64",15]]],[[],["cr4",3]],[[["cr4",3]]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]],[["option",4],["cr0",3]]],[[["usize",15]],[["cr4",3],["option",4]]],[[["u64",15]],[["option",4],["xcr0",3]]],[[["usize",15]],["cr0",3]],[[["usize",15]],["cr4",3]],[[["u64",15]],["xcr0",3]],[[["usize",15]],["cr0",3]],[[["usize",15]],["cr4",3]],[[["u64",15]],["xcr0",3]],[[["intoiterator",8]],["cr0",3]],[[["intoiterator",8]],["cr4",3]],[[["intoiterator",8]],["xcr0",3]],[[]],[[]],[[]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[["cr0",3]],[["option",4],["ordering",4]]],[[["cr4",3]],[["option",4],["ordering",4]]],[[["xcr0",3]],[["option",4],["ordering",4]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["bool",15],["cr0",3]]],[[["bool",15],["cr4",3]]],[[["bool",15],["xcr0",3]]],[[["cr0",3]],["cr0",3]],[[["cr4",3]],["cr4",3]],[[["xcr0",3]],["xcr0",3]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["xcr0",3]],[[["xcr0",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["u32",15],["option",4]]],[[],["str",15]],[[],["str",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],[["option",4],["u8",15]]],[[],[["option",4],["u16",15]]],[[],["cachetype",4]],[[],["dattype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuidresult",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparameter",3]],[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],null,[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["vendorinfo",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["processorserial",3]],[[],["featureinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["cachetype",4]],[[],["monitormwaitinfo",3]],[[],["thermalpowerinfo",3]],[[],["extendedfeatures",3]],[[],["directcacheaccessinfo",3]],[[],["performancemonitoringinfo",3]],[[],["extendedtopologyiter",3]],[[],["extendedtopologylevel",3]],[[],["topologytype",4]],[[],["extendedstateinfo",3]],[[],["extendedstateiter",3]],[[],["extendedstate",3]],[[],["rdtmonitoringinfo",3]],[[],["l3monitoringinfo",3]],[[],["rdtallocationinfo",3]],[[],["l3catinfo",3]],[[],["l2catinfo",3]],[[],["membwallocationinfo",3]],[[],["sgxinfo",3]],[[],["sgxsectioniter",3]],[[],["sgxsectioninfo",4]],[[],["epcsection",3]],[[],["processortraceinfo",3]],[[],["tscinfo",3]],[[],["processorfrequencyinfo",3]],[[],["datiter",3]],[[],["datinfo",3]],[[],["dattype",4]],[[],["socvendorinfo",3]],[[],["socvendorattributesiter",3]],[[],["socvendorbrand",3]],[[],["extendedfunctioninfo",3]],[[],["l2associativity",4]],[[],["memoryencryptioninfo",3]],[[],["u32",15]],[[],["str",15]],[[],[["option",4],["datiter",3]]],[[],["u8",15]],null,null,[[],["u8",15]],null,null,[[["cachetype",4]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[["l2associativity",4]],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],[["u32",15],["option",4]]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["cacheinfoiter",3],["option",4]]],[[],[["cacheparametersiter",3],["option",4]]],[[],["u32",15]],[[],[["option",4],["directcacheaccessinfo",3]]],[[],[["option",4],["extendedfeatures",3]]],[[],[["option",4],["extendedfunctioninfo",3]]],[[],[["extendedstateinfo",3],["option",4]]],[[],[["extendedtopologyiter",3],["option",4]]],[[],[["option",4],["featureinfo",3]]],[[],[["option",4],["hypervisorinfo",3]]],[[],[["memoryencryptioninfo",3],["option",4]]],[[],[["option",4],["monitormwaitinfo",3]]],[[],[["performancemonitoringinfo",3],["option",4]]],[[],[["processorfrequencyinfo",3],["option",4]]],[[],[["option",4],["processorserial",3]]],[[],[["processortraceinfo",3],["option",4]]],[[],["u32",15]],[[],[["rdtallocationinfo",3],["option",4]]],[[],[["rdtmonitoringinfo",3],["option",4]]],[[],[["option",4],["sgxinfo",3]]],[[],["u16",15]],[[],[["socvendorinfo",3],["option",4]]],[[],["u32",15]],[[],[["option",4],["thermalpowerinfo",3]]],[[],[["option",4],["tscinfo",3]]],[[],[["socvendorattributesiter",3],["option",4]]],[[],["socvendorbrand",3]],[[],[["vendorinfo",3],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["hypervisor",4]],[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],[["option",4],["l2associativity",4]]],[[],[["l2catinfo",3],["option",4]]],[[],[["option",4],["l3catinfo",3]]],[[],[["option",4],["l3monitoringinfo",3]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["topologytype",4]],[[],[["option",4],["u8",15]]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u32",15]],[[],[["option",4],["membwallocationinfo",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],null,[[["hypervisor",4]],["bool",15]],[[],["cpuid",3]],[[],[["cacheinfo",3],["option",4]]],[[],[["cacheparameter",3],["option",4]]],[[],[["option",4],["extendedtopologylevel",3]]],[[],[["option",4],["extendedstate",3]]],[[],[["option",4],["sgxsectioninfo",4]]],[[],[["datinfo",3],["option",4]]],[[],[["cpuidresult",3],["option",4]]],[[],["u32",15]],null,[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],[["option",4],["u8",15]]],[[],["u8",15]],[[],["u64",15]],[[],["usize",15]],[[],["u16",15]],[[],[["str",15],["option",4]]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u8",15]],null,[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["cpuidresult",3]],null,null,[[]],[[]],[[],["descriptortablepointer",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["segmentselector",3]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],null,[[["segmentselector",3]]],[[]],[[]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]],["u8",15]],[[["u16",15]],["u32",15]],[[["u16",15]],["u16",15]],[[["u8",15],["u16",15]]],[[["u32",15],["u16",15]]],[[["u16",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pagefaulterror",3]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["pagefaulterror",3]]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["pagefaulterror",3]]],[[],["u32",15]],[[["pagefaulterror",3]],["pagefaulterror",3]],[[["pagefaulterror",3]]],[[]],[[]],[[]],[[]],[[],["pagefaulterror",3]],[[["pagefaulterror",3]],["ordering",4]],[[["pagefaulterror",3]],["bool",15]],null,[[]],[[],["pagefaulterror",3]],[[]],[[["pagefaulterror",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],[["option",4],["pagefaulterror",3]]],[[["u32",15]],["pagefaulterror",3]],[[["u32",15]],["pagefaulterror",3]],[[["intoiterator",8]],["pagefaulterror",3]],[[]],[[["pagefaulterror",3]]],[[["pagefaulterror",3]],["bool",15]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],null,[[["pagefaulterror",3]],["bool",15]],[[],["pagefaulterror",3]],[[["pagefaulterror",3]],[["option",4],["ordering",4]]],[[["pagefaulterror",3]]],[[["bool",15],["pagefaulterror",3]]],null,[[["pagefaulterror",3]],["pagefaulterror",3]],[[["pagefaulterror",3]]],[[["pagefaulterror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["u64",15]],[[["u32",15],["u64",15]]],null,null,[[],["bool",15]],[[],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["segmentselector",3]],[[],["u64",15]],[[],["descriptorbuilder",3]],[[["segmentselector",3]],["segmentselector",3]],[[["segmentselector",3]]],[[["segmentselector",3]],["segmentselector",3]],[[["segmentselector",3]]],[[],["u16",15]],[[["segmentselector",3]],["segmentselector",3]],[[["segmentselector",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["segmentselector",3]]],[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[],["segmentselector",3]],[[],["systemdescriptortypes64",4]],[[],["systemdescriptortypes32",4]],[[],["datasegmenttype",4]],[[],["codesegmenttype",4]],[[],["descriptor",3]],[[["segmentselector",3]],["ordering",4]],[[["codesegmenttype",4]]],[[["codesegmenttype",4],["u32",15]],["descriptorbuilder",3]],[[["segmentselector",3]],["bool",15]],[[],["segmentselector",3]],[[["datasegmenttype",4]]],[[["u32",15],["datasegmenttype",4]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[],["descriptor",3]],[[["ring",4]],["descriptorbuilder",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[["segmentselector",3]],["bool",15]],[[["systemdescriptortypes64",4]],["bool",15]],[[["systemdescriptortypes32",4]],["bool",15]],[[["datasegmenttype",4]],["bool",15]],[[["codesegmenttype",4]],["bool",15]],[[],["segmentselector",3]],[[["intoiterator",8]]],[[]],[[],["descriptor64",3]],[[],["descriptor",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],[["segmentselector",3],["option",4]]],[[["u16",15]],["segmentselector",3]],[[["u16",15]],["segmentselector",3]],[[["intoiterator",8]],["segmentselector",3]],[[["u16",15]],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[]],[[],["u16",15]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["u8",15]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[]],[[["u32",15]],["descriptorbuilder",3]],[[["u64",15]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],null,[[["segmentselector",3]],["bool",15]],[[["ring",4],["u16",15]],["segmentselector",3]],[[],["segmentselector",3]],[[["segmentselector",3]],[["option",4],["ordering",4]]],[[],["descriptorbuilder",3]],[[["segmentselector",3]]],[[["bool",15],["segmentselector",3]]],[[]],[[["u32",15]]],[[]],[[["ring",4]]],[[]],[[]],[[]],[[]],[[["u32",15],["segmentselector",3]]],[[["u8",15]]],[[],["segmentselector",3]],[[["segmentselector",3]],["segmentselector",3]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]],["descriptorbuilder",3]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["bool",15],["u64",15]]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[["bool",15],["u64",15]],["descriptorbuilder",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["segmentselector",3]]],[[],["segmentselector",3]],[[],["u64",15]],[[],["u64",15]],[[["usize",15]]],[[]],null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["pinbasedcontrols",3]],["ordering",4]],[[["primarycontrols",3]],["ordering",4]],[[["secondarycontrols",3]],["ordering",4]],[[["entrycontrols",3]],["ordering",4]],[[["exitcontrols",3]],["ordering",4]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["option",4],["pinbasedcontrols",3]]],[[["u32",15]],[["option",4],["primarycontrols",3]]],[[["u32",15]],[["option",4],["secondarycontrols",3]]],[[["u32",15]],[["entrycontrols",3],["option",4]]],[[["u32",15]],[["exitcontrols",3],["option",4]]],[[["u32",15]],["pinbasedcontrols",3]],[[["u32",15]],["primarycontrols",3]],[[["u32",15]],["secondarycontrols",3]],[[["u32",15]],["entrycontrols",3]],[[["u32",15]],["exitcontrols",3]],[[["u32",15]],["pinbasedcontrols",3]],[[["u32",15]],["primarycontrols",3]],[[["u32",15]],["secondarycontrols",3]],[[["u32",15]],["entrycontrols",3]],[[["u32",15]],["exitcontrols",3]],[[["intoiterator",8]],["pinbasedcontrols",3]],[[["intoiterator",8]],["primarycontrols",3]],[[["intoiterator",8]],["secondarycontrols",3]],[[["intoiterator",8]],["entrycontrols",3]],[[["intoiterator",8]],["exitcontrols",3]],[[]],[[]],[[]],[[]],[[]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["pinbasedcontrols",3]],[["option",4],["ordering",4]]],[[["primarycontrols",3]],[["option",4],["ordering",4]]],[[["secondarycontrols",3]],[["option",4],["ordering",4]]],[[["entrycontrols",3]],[["option",4],["ordering",4]]],[[["exitcontrols",3]],[["option",4],["ordering",4]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["bool",15],["pinbasedcontrols",3]]],[[["bool",15],["primarycontrols",3]]],[[["bool",15],["secondarycontrols",3]]],[[["entrycontrols",3],["bool",15]]],[[["exitcontrols",3],["bool",15]]],[[["pinbasedcontrols",3]],["pinbasedcontrols",3]],[[["primarycontrols",3]],["primarycontrols",3]],[[["secondarycontrols",3]],["secondarycontrols",3]],[[["entrycontrols",3]],["entrycontrols",3]],[[["exitcontrols",3]],["exitcontrols",3]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Ring"],[4,"DestinationShorthand"],[4,"Level"],[4,"TriggerMode"],[4,"DeliveryMode"],[4,"DeliveryStatus"],[4,"DestinationMode"],[4,"ApicId"],[3,"Icr"],[8,"ApicControl"],[3,"IoApic"],[3,"X2APIC"],[3,"XAPIC"],[3,"EFlags"],[3,"TaskStateSegment"],[3,"PAddr"],[3,"VAddr"],[3,"PML4Entry"],[3,"PDPTEntry"],[3,"PDEntry"],[3,"PTEntry"],[3,"PML4Flags"],[3,"PDPTFlags"],[3,"PDFlags"],[3,"PTFlags"],[3,"Page"],[3,"LargePage"],[3,"HugePage"],[3,"RFlags"],[3,"Descriptor64"],[3,"TaskStateSegment"],[3,"Cr0"],[3,"Cr4"],[3,"Xcr0"],[4,"CacheInfoType"],[4,"TopologyType"],[4,"CacheType"],[4,"DatType"],[4,"L2Associativity"],[4,"SgxSectionInfo"],[4,"Hypervisor"],[3,"HypervisorInfo"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"CpuId"],[3,"CpuIdResult"],[3,"CacheInfoIter"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParametersIter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"ExtendedStateIter"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatIter"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorAttributesIter"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"DescriptorTablePointer"],[3,"PageFaultError"],[3,"InterruptDescription"],[8,"RdRand"],[8,"RdSeed"],[4,"SystemDescriptorTypes64"],[4,"SystemDescriptorTypes32"],[4,"CodeSegmentType"],[3,"Descriptor"],[3,"SegmentSelector"],[4,"DataSegmentType"],[3,"DescriptorBuilder"],[8,"GateDescriptorBuilder"],[8,"SegmentDescriptorBuilder"],[8,"BuildDescriptor"],[8,"LdtDescriptorBuilder"],[8,"TaskGateDescriptorBuilder"],[4,"VmFail"],[3,"ExitControls"],[3,"SecondaryControls"],[3,"EntryControls"],[3,"PrimaryControls"],[3,"PinbasedControls"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};